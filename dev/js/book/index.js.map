{
  "version": 3,
  "sources": ["../../../app/typescript/utils/CustomEventEmitter.ts", "../../../app/typescript/utils/CustomFetch.ts", "../../../app/typescript/modules/model.ts", "../../../app/typescript/components/NavGnb.ts", "../../../app/typescript/modules/events.ts", "../../../app/typescript/components/CheckboxFavoriteBook.ts", "../../../app/typescript/components/BookImage.ts", "../../../app/typescript/pages/book/Book.ts", "../../../app/typescript/pages/book/LibrarySearchByBook.ts", "../../../app/typescript/pages/book/index.ts"],
  "sourcesContent": ["import { ICustomEvent, ICustomEventDetail } from \"../modules/types.js\";\n\nclass CustomEventEmitter<T extends ICustomEventDetail> {\n    private _bus: HTMLElement;\n\n    constructor() {\n        this._bus = document.createElement(\"div\");\n    }\n\n    add(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.addEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    remove(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.removeEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    dispatch(event: string, detail: T = {} as T): void {\n        this._bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new CustomEventEmitter();\n", "\nclass CustomFetch {\n    defaultOptions: RequestInit\n\n    constructor(baseOptions: RequestInit = {}) {\n        this.defaultOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Bearer ${getToken()}`\n            },\n            ...baseOptions\n        }\n    }\n\n    async fetch<T = unknown>(url: string, options?: RequestInit): Promise<T> {\n        const finalOptions: RequestInit & { timeout?: number} = {\n            ...this.defaultOptions,\n            ...options,\n            timeout: 5000\n        }\n        try {\n            const response = await fetch(url, finalOptions)\n            if (!response.ok) {\n                throw new Error(`Http error! status: ${response.status}, message: ${response.statusText}`)\n            } \n            const data = await response.json()\n            return data as T\n        } catch(error: unknown) {\n            console.error(`Error fetching data: ${error}`)\n            throw new Error(`Error fetching data: ${error}`)\n\n        }\n    }\n}\n\nexport default new CustomFetch()\n", "const cloneDeep = <T>(obj: T): T => {\n\treturn JSON.parse(JSON.stringify(obj))\n}\n\ninterface State {\n\tfavoriteBooks: string[],\n\tlibraries: Record<string, string>\n\tregions: Record<string, Record<string, string>>\n}\n\nconst initialState: State = {\n\tfavoriteBooks: [],\n\tlibraries: {},\n\tregions: {}\n}\n\nconst storageKey = 'BookWorld'\n\nconst setState = (newState: State) => {\n\ttry {\n\t\tlocalStorage.setItem(storageKey, JSON.stringify(newState))\n\t} catch (error) {\n\t\tconsole.error(error)\n\t}\n\t// console.log(newState)\n\t// console.log([...newState.favoriteBooks])\n\t// console.log([...Object.values(newState.libraries)])\n}\n\nconst getState = (): State => {\n\ttry {\n\t\tconst storedState = localStorage.getItem(storageKey)\n\t\tif (storedState == null) {\t\n\t\t\tsetState(initialState)\n\t\t\treturn initialState\n\t\t}\n\t\treturn cloneDeep(JSON.parse(storedState))\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\tthrow new Error('Failed to get state from localStrage.')\n\t}\n}\n\nconst state: State = getState()\n\n\nconst addFavoriteBook = (isbn: string): void => {\n\tstate.favoriteBooks.push(isbn)\n\tsetState(state)\n}\n\nconst removeFavoriteBook = (isbn: string): void => {\n\tconst index = state.favoriteBooks.indexOf(isbn)\n\tif (index !== -1) {\n\t\tstate.favoriteBooks.splice(index, 1)\n\t\tsetState(state)\n\t}\n}\n\nconst isFavoriteBook = (isbn: string): boolean => {\n\treturn state.favoriteBooks.includes(isbn)\n}\n\nconst addLibrary = (code: string, name: string): void => {\n\tstate.libraries[code] = name\n\tsetState(state)\n}\n\nconst removeLibrary = (code: string): void => {\n\tdelete state.libraries[code]\n\tsetState(state)\n}\n\nconst hasLibrary = (code: string): boolean => {\n\treturn code in state.libraries\n}\n\nconst addRegion = (regionName: string): void => {\n\tstate.regions[regionName] = {}\n\tsetState(state)\n}\n\nconst removeRegion = (regionName: string): void => {\n\tdelete state.regions[regionName]\n\tsetState(state)\n}\n\nconst addDetailRegion = (regionName: string, detailName: string, detailCode: string): void => {\n\tstate.regions[regionName][detailName] = detailCode\n\tsetState(state)\n}\n\nconst removeDetailRegion = (regionName: string, detailName: string): void => {\n\tdelete state.regions[regionName][detailName]\n\tsetState(state)\n}\n\nexport {\n\tstate,\n\tsetState,\n\tgetState,\n\taddFavoriteBook,\n\tremoveFavoriteBook,\n\tisFavoriteBook,\n\taddLibrary,\n\tremoveLibrary,\n\thasLibrary,\n\taddRegion,\n\tremoveRegion,\n\taddDetailRegion,\n\tremoveDetailRegion\n}\n", "import { getState } from \"../modules/model\";\n\nexport default class NavGnb extends HTMLElement {\n    private favoriteBooksSize: number;\n\n    constructor() {\n        super();\n        this.favoriteBooksSize = this.getFavoriteBooksSize();\n    }\n\n    connectedCallback(): void {\n        this.render();\n        this.setSelectedMenu();\n        // CustomEventEmitter.add('favorite-books-changed', this.updateFavoriteBooksSize.bind(this))\n    }\n\n    disconnectedCallback(): void {\n        // CustomEventEmitter.remove('favorite-books-changed', this.updateFavoriteBooksSize)\n    }\n\n    private getFavoriteBooksSize(): number {\n        return getState().favoriteBooks.length;\n    }\n\n    private render(): void {\n        this.innerHTML = `\n            <nav class=\"gnb\">\n                <a class=\"gnb-item\" href=\"./search\">\uCC45 \uAC80\uC0C9</a>\n                <a class=\"gnb-item\" href=\"./favorite\">\uB098\uC758 \uCC45 (<span class=\"size\">${this.favoriteBooksSize}</span>)</a>\n                <a class=\"gnb-item\" href=\"./library\">\uB3C4\uC11C\uAD00 \uC870\uD68C</a>\n                <a class=\"gnb-item\" href=\"./setting\">\uC124\uC815</a>\n            </nav>`;\n    }\n\n    private setSelectedMenu(): void {\n        const PATHS = [\"/search\", \"/favorite\", \"/library\", \"/setting\"];\n        const idx = PATHS.indexOf(document.location.pathname);\n        if (idx >= 0) this.querySelectorAll(\"a\")[idx].ariaSelected = \"true\";\n    }\n\n    // private updateFavoriteBooksSize(event: Event): void {\n    //     const customEvent = event as CustomEvent<{ size: number }>\n    //     const { size } = customEvent.detail\n    //     this.querySelector('.size')!.textContent = String(size || this.getFavoriteBooksSize())\n    // }\n}\n", "import { getState } from \"./model\";\n\nexport const updateFavoriteBooksSize = (\n    size: number = getState().favoriteBooks.length\n): void => {\n    const navElement = document.querySelector(\"nav-gnb\") as HTMLElement;\n    (navElement.querySelector(\".size\") as HTMLElement).textContent =\n        String(size);\n};\n", "import {\n    addFavoriteBook,\n    removeFavoriteBook,\n    isFavoriteBook,\n} from \"../modules/model.js\";\nimport { updateFavoriteBooksSize } from \"../modules/events.js\";\n\nexport default class CheckboxFavoriteBook extends HTMLElement {\n    private inputElement: HTMLInputElement | null;\n    private isbn: string | null;\n\n    constructor() {\n        super();\n        this.inputElement = null;\n        this.isbn = null;\n    }\n\n    connectedCallback(): void {\n        const isbnElement = this.closest(\"[data-isbn]\");\n        this.isbn = (\n            isbnElement as HTMLElement & { dataset: { isbn: string } }\n        ).dataset.isbn;\n        this.render();\n        this.inputElement?.addEventListener(\"change\", this.onChange.bind(this));\n    }\n\n    disconnectedCallback(): void {\n        this.inputElement?.addEventListener(\"change\", this.onChange);\n    }\n\n    private render(): void {\n        const isbn = this.isbn || \"\";\n        const checked = isFavoriteBook(isbn) ? \"checked\" : \"\";\n        this.innerHTML = `<label>\n            <input type=\"checkbox\" name=\"favorite\" ${checked}>\n            <span>\uAD00\uC2EC\uCC45</span>\n        </label>`;\n        this.inputElement = this.querySelector(\"input\");\n    }\n\n    private onChange(): void {\n        const ISBN = this.isbn || \"\";\n        if (this.inputElement?.checked) {\n            addFavoriteBook(ISBN);\n        } else {\n            removeFavoriteBook(ISBN);\n        }\n        // CustomEventEmitter.dispatch('favorite-books-changed')\n        updateFavoriteBooksSize();\n    }\n}\n", "import { IBookImageData } from \"../modules/types\";\n\nexport default class BookImage extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    // \uC990\uACA8\uCC3E\uAE30, \uC0C1\uC138\n    set data(objectData: IBookImageData) {\n        this.dataset.object = JSON.stringify(objectData);\n\n        const imgElement = this.querySelector(\"img\");\n        if (imgElement && imgElement.getAttribute(\"src\") === \"\") {\n            this.render();\n        }\n    }\n\n    connectedCallback(): void {\n        this.render();\n    }\n\n    // search : dataset\n    private render(): void {\n        const data: IBookImageData | null = this.dataset.object\n            ? JSON.parse(this.dataset.object)\n            : null;\n\n        let imageSrc = \"\";\n        let imageAlt = \"\";\n\n        if (data) {\n            const { bookImageURL, bookname } = data;\n            imageSrc = bookImageURL;\n            imageAlt = bookname;\n        }\n\n        this.innerHTML = `\n            <div class=\"book-image\">\n                <img class=\"thumb\" src=\"${imageSrc}\" alt=\"${imageAlt}\"></img>\n            </div>`;\n\n        const imgElement = this.querySelector(\"img\");\n        if (imgElement && imgElement.getAttribute(\"src\")) {\n            this.handleError(imgElement);\n        }\n    }\n\n    private handleError(imgElement: HTMLImageElement): void {\n        if (imgElement) {\n            imgElement.onerror = () => {\n                this.dataset.fail = \"true\";\n                imgElement.remove();\n            };\n        }\n    }\n}\n", "import { IUsageAnalysisListData } from \"../../modules/types\";\nimport { BookImage } from \"../../components/index\";\nimport { CustomFetch } from \"../../utils/index\";\n\nexport default class Book extends HTMLElement {\n    private loadingElement: HTMLElement;\n    private data: IUsageAnalysisListData | null;\n\n    constructor() {\n        super();\n        this.loadingElement = this.querySelector(\".loading\") as HTMLElement;\n        this.data = null;\n    }\n\n    connectedCallback(): void {\n        const isbn = new URLSearchParams(location.search).get(\"isbn\") as string;\n        this.dataset.isbn = isbn;\n        this.fetchUsageAnalysisList(isbn);\n    }\n\n    private async fetchUsageAnalysisList(isbn: string): Promise<void> {\n        try {\n            const data = await CustomFetch.fetch<IUsageAnalysisListData>(\n                `/usage-analysis-list?isbn13=${isbn}`\n            );\n            this.data = data;\n            this.render();\n        } catch (error) {\n            this.renderError();\n            console.error(error);\n            throw new Error(`Fail to get usage analysis list.`);\n        }\n    }\n\n    private render(): void {\n        if (!this.data) return;\n\n        const {\n            book: {\n                bookname,\n                authors,\n                bookImageURL,\n                class_nm,\n                class_no,\n                description,\n                isbn13,\n                loanCnt,\n                publication_year,\n                publisher,\n            },\n            keywords,\n            recBooks,\n        } = this.data; // coLoanBooks, loanGrps,loanHistory,\n\n        const bookNames = bookname\n            .split(/[=/:]/)\n            .map((item) => `<p>${item}</p>`)\n            .join(\"\");\n        const keywordsString = keywords\n            .map((item) => `<span>${item.word}</span>`)\n            .join(\"\");\n        const recBooksString = recBooks\n            .map(\n                ({ bookname, isbn13 }) =>\n                    `<li><a href=book?isbn=${isbn13}>${bookname}</a></li>`\n            )\n            .join(\"\");\n\n        (this.querySelector(\".bookname\") as HTMLElement).innerHTML = bookNames;\n        (this.querySelector(\".authors\") as HTMLElement).textContent = authors;\n        (this.querySelector(\".class_nm\") as HTMLElement).textContent = class_nm;\n        (this.querySelector(\".class_no\") as HTMLElement).textContent = class_no;\n        (this.querySelector(\".description\") as HTMLElement).textContent =\n            description;\n        (this.querySelector(\".isbn13\") as HTMLElement).textContent = isbn13;\n        (this.querySelector(\".loanCnt\") as HTMLElement).textContent =\n            loanCnt.toLocaleString();\n        (this.querySelector(\".publication_year\") as HTMLElement).textContent =\n            publication_year;\n        (this.querySelector(\".publisher\") as HTMLElement).textContent =\n            publisher;\n        (this.querySelector(\".keyword\") as HTMLElement).innerHTML =\n            keywordsString;\n        (this.querySelector(\".recBooks\") as HTMLElement).innerHTML =\n            recBooksString;\n\n        const bookImageElement = this.querySelector<BookImage>(\"book-image\");\n        if (bookImageElement) {\n            bookImageElement.data = {\n                bookImageURL,\n                bookname,\n            };\n        }\n\n        this.loadingElement.remove();\n    }\n\n    private renderError() {\n        this.loadingElement.textContent = \"\uC815\uBCF4\uB97C \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.\";\n    }\n}\n", "import { IBookExist, ILibrarySearchByBookResult } from \"../../modules/types\";\nimport { CustomFetch } from \"../../utils/index\";\nimport { getState } from \"../../modules/model\";\n\nexport default class LibrarySearchByBook extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        const isbn = new URLSearchParams(location.search).get(\"isbn\") as string;\n        this.fetchList(isbn);\n    }\n\n    private async fetchList(isbn: string): Promise<void> {\n        const favoriteLibraries = getState().regions;\n        for (const regionName in favoriteLibraries) {\n            const detailCodes = Object.values(favoriteLibraries[regionName]);\n            if (detailCodes.length === 0) return;\n            const regionCode = detailCodes[0].slice(0, 2);\n            detailCodes.forEach((detailCode) => {\n                this.fetchLibrarySearchByBook(isbn, regionCode, detailCode);\n            });\n        }\n    }\n\n    private async fetchLibrarySearchByBook(\n        isbn: string,\n        region: string,\n        dtl_region: string\n    ): Promise<void> {\n        const searchParams = new URLSearchParams({\n            isbn,\n            region,\n            dtl_region,\n        });\n        const url = `/library-search-by-book?${searchParams}`;\n\n        try {\n            const data = await CustomFetch.fetch<ILibrarySearchByBookResult>(\n                url\n            );\n            this.render(data, isbn);\n        } catch (error) {\n            console.error(error);\n            throw new Error(`Fail to get library search by book.`);\n        }\n    }\n\n    private render(\n        { libraries }: ILibrarySearchByBookResult,\n        isbn: string\n    ): void {\n        if (libraries.length < 1) return;\n\n        const container = document.querySelector(\".library-search-by-book\");\n        if (!container) return;\n\n        const listElement = document.createElement(\"ul\");\n        const fragment = new DocumentFragment();\n\n        libraries.forEach(({ homepage, libCode, libName }) => {\n            const template = document.querySelector(\n                \"#tp-librarySearchByBookItem\"\n            ) as HTMLTemplateElement;\n            if (!template) return;\n\n            const cloned = template.content.firstElementChild?.cloneNode(\n                true\n            ) as HTMLElement;\n            const link = cloned.querySelector(\"a\");\n            if (!link) return;\n\n            cloned.dataset.code = libCode;\n            link.textContent = libName;\n            link.href = homepage;\n\n            this.loanAvailable(\n                isbn,\n                libCode,\n                cloned.querySelector(\"p\") as HTMLElement\n            );\n\n            fragment.appendChild(cloned);\n        });\n\n        listElement.appendChild(fragment);\n        container.appendChild(listElement);\n    }\n\n    private async loanAvailable(\n        isbn: string,\n        libCode: string,\n        el: HTMLElement\n    ) {\n        const isAvailable = await this.fetchLoadnAvailabilty(isbn, libCode);\n        const element = el.querySelector(\".loanAvailable\");\n        if (element) {\n            element.textContent = isAvailable ? \"\uB300\uCD9C \uAC00\uB2A5\" : \"\uB300\uCD9C \uBD88\uAC00\";\n            if (isAvailable && el.parentElement) {\n                el.parentElement.dataset.available = \"true\";\n            }\n        }\n    }\n\n    private async fetchLoadnAvailabilty(\n        isbn13: string,\n        libCode: string\n    ): Promise<boolean> {\n        const searchParams = new URLSearchParams({\n            isbn13,\n            libCode,\n        });\n        const url = `/book-exist?${searchParams}`;\n\n        try {\n            const data = await CustomFetch.fetch<IBookExist>(url, {\n                method: \"GET\",\n                headers: { \"Content-Type\": \"application/json\" },\n            });\n            return data.loanAvailable === \"Y\";\n        } catch (error) {\n            console.error(error);\n            throw new Error(`Fail to get book exist.`);\n        }\n    }\n}\n", "import {\n    NavGnb,\n    CheckboxFavoriteBook,\n    BookImage,\n} from \"../../components/index\";\n\nimport Book from \"./Book\";\nimport LibrarySearchByBook from \"./LibrarySearchByBook\";\n\ncustomElements.define(\"nav-gnb\", NavGnb);\ncustomElements.define(\"app-book\", Book);\ncustomElements.define(\"library-search-by-book\", LibrarySearchByBook);\ncustomElements.define(\"checkbox-favorite-book\", CheckboxFavoriteBook);\ncustomElements.define(\"book-image\", BookImage);\n"],
  "mappings": "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",
  "names": ["bookname", "isbn13"]
}
