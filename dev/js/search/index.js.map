{
  "version": 3,
  "sources": ["../../../app/scripts/components/BookDescription.ts", "../../../app/scripts/utils/CustomEventEmitter.ts", "../../../app/scripts/utils/CustomFetch.ts", "../../../node_modules/intersection-observer/intersection-observer.js", "../../../app/scripts/utils/Observer.ts", "../../../app/scripts/components/LibraryBookExist.ts", "../../../app/scripts/utils/Publisher.ts", "../../../app/scripts/modules/BookStore.ts", "../../../app/scripts/components/NavGnb.ts", "../../../app/scripts/components/CategorySelector.ts", "../../../app/scripts/components/BookImage.ts", "../../../app/scripts/pages/search/constant.ts", "../../../app/scripts/pages/search/AppSearch.ts", "../../../app/scripts/pages/search/InputSearch.ts", "../../../app/scripts/pages/search/BookList.ts", "../../../app/scripts/pages/search/BookItem.ts", "../../../app/scripts/pages/search/index.ts"],
  "sourcesContent": ["export default class BookDescription extends HTMLElement {\n    protected el: HTMLElement | null;\n    protected button: HTMLElement | null;\n\n    constructor() {\n        super();\n        this.el = null;\n        this.button = null;\n    }\n\n    set data(value: string) {\n        this.render(value);\n    }\n\n    connectedCallback(): void {\n        this.render(this.data);\n    }\n\n    disconnectedCallback(): void {\n        if (this.button)\n            this.button.removeEventListener(\n                \"click\",\n                this.onButtonClick.bind(this)\n            );\n    }\n\n    protected render(value: string): void {\n        const template = `\n            <p class=\"description\" data-ellipsis=\"true\">${value}</p>\n            <button type=\"button\" class=\"more-description-button\">\uC124\uBA85 \uB354\uBCF4\uAE30</button>`;\n        this.innerHTML = template;\n\n        this.el = this.querySelector(\".description\");\n        this.button = this.querySelector(\".more-description-button\");\n\n        if (this.button)\n            this.button.addEventListener(\n                \"click\",\n                this.onButtonClick.bind(this)\n            );\n\n        // if(this.isEllipsisActive(this.el)) {\n        //     this.button.ariaHidden = false\n        // }\n    }\n\n    // isEllipsisActive(el) {\n    //     return (el.offsetHeight < el.scrollHeight);\n    // }\n\n    protected onButtonClick(): void {\n        if (!this.el) return;\n\n        switch (this.el.dataset.ellipsis) {\n            case \"true\":\n                this.el.dataset.ellipsis = \"false\";\n                if (this.button) this.button.textContent = \"\uC124\uBA85 \uC811\uAE30\";\n                break;\n            case \"false\":\n                this.el.dataset.ellipsis = \"true\";\n                if (this.button) this.button.textContent = \"\uC124\uBA85 \uB354\uBCF4\uAE30\";\n                break;\n        }\n    }\n}\n", "class CustomEventEmitter<T extends ICustomEventDetail> {\n    private _bus: HTMLElement;\n\n    constructor() {\n        this._bus = document.createElement(\"div\");\n    }\n\n    add(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.addEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    remove(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.removeEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    dispatch(event: string, detail: T = {} as T): void {\n        this._bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new CustomEventEmitter();\n", "\nclass CustomFetch {\n    defaultOptions: RequestInit\n\n    constructor(baseOptions: RequestInit = {}) {\n        this.defaultOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Bearer ${getToken()}`\n            },\n            ...baseOptions\n        }\n    }\n\n    async fetch<T = unknown>(url: string, options?: RequestInit): Promise<T> {\n        const finalOptions: RequestInit & { timeout?: number} = {\n            ...this.defaultOptions,\n            ...options,\n            timeout: 5000\n        }\n        try {\n            const response = await fetch(url, finalOptions)\n            if (!response.ok) {\n                throw new Error(`Http error! status: ${response.status}, message: ${response.statusText}`)\n            } \n            const data = await response.json()\n            return data as T\n        } catch(error: unknown) {\n            console.error(`Error fetching data: ${error}`)\n            throw new Error(`Error fetching data: ${error}`)\n\n        }\n    }\n}\n\nexport default new CustomFetch()\n", "/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n", "import \"intersection-observer\";\n\nexport default class Observer {\n    target: Element;\n    observer: IntersectionObserver;\n\n    constructor(target: Element, callback: () => void) {\n        this.target = target;\n        this.observer = new IntersectionObserver((changes) => {\n            this.handleIntersection(changes, callback);\n        });\n\n        // this.observer = new IntersectionObserver(this.handleIntersection.bind(this, callback))\n    }\n\n    observe(): void {\n        this.observer.observe(this.target);\n    }\n\n    unobserve(): void {\n        this.observer.unobserve(this.target);\n    }\n\n    disconnect(): void {\n        this.observer.disconnect();\n    }\n\n    handleIntersection(\n        changes: IntersectionObserverEntry[],\n        callback: () => void\n    ): void {\n        changes.forEach((change) => {\n            if (change.isIntersecting) {\n                this.unobserve();\n                callback();\n            }\n        });\n    }\n}\n", "import { CustomFetch } from \"../utils/index\";\n\nexport default class LibraryBookExist extends HTMLElement {\n    protected container: Element;\n    protected itemTemplate: string;\n\n    constructor() {\n        super();\n        this.container = this.querySelector(\".library-list\") as Element;\n        this.itemTemplate = \"\";\n    }\n\n    connectedCallback(): void {\n        this.itemTemplate = this.template();\n    }\n\n    async onLibraryBookExist(\n        button: HTMLButtonElement | null,\n        isbn13: string,\n        library: Record<string, string>\n    ): Promise<void> {\n        const entries = Object.entries(library);\n        this.loading(entries.length);\n        if (button) {\n            button.disabled = true;\n        }\n\n        const promises = entries.map(async ([libCode, libName], index) => {\n            try {\n                const data = await CustomFetch.fetch<IBookExist>(\n                    `/book-exist?isbn13=${isbn13}&libCode=${libCode}`\n                );\n                this.renderBookExist(data, libName, index);\n            } catch (error) {\n                console.error(error);\n                throw new Error(`Fail to get usage analysis list.`);\n            }\n        });\n\n        try {\n            await Promise.all(promises);\n            this.removeLoading();\n        } catch (error) {\n            console.error(\"Failed to fetch data for some libraries\");\n        }\n\n        // Promise.all(promises)\n        //     .then( () => {\n        //         this.removeLoading()\n        //     })\n        //     .catch( () => {\n        //         console.error('Failed to fetch data for some libraries')\n        //     })\n    }\n\n    protected renderBookExist(\n        data: IBookExist,\n        libName: string,\n        index: number\n    ): void {\n        const { hasBook, loanAvailable } = data;\n        const _hasBook = hasBook === \"Y\" ? \"\uC18C\uC7A5\" : \"\uBBF8\uC18C\uC7A5\";\n        let _loanAvailable = \"\";\n        if (hasBook === \"Y\") {\n            _loanAvailable =\n                loanAvailable === \"Y\" ? \"| \uB300\uCD9C\uAC00\uB2A5\" : \"| \uB300\uCD9C\uBD88\uAC00\";\n        }\n        const el = this.querySelectorAll(\".library-item\")[index] as HTMLElement;\n\n        const elName = el.querySelector(\".name\") as HTMLElement;\n        if (elName) {\n            elName.textContent = `\u2219 ${libName} : `;\n        }\n        const elHasBook = el.querySelector(\".hasBook\") as HTMLElement;\n        if (elHasBook) {\n            elHasBook.textContent = _hasBook;\n        }\n        const elLoanAvailable = el.querySelector(\n            \".loanAvailable\"\n        ) as HTMLElement;\n        if (elLoanAvailable) {\n            elLoanAvailable.textContent = _loanAvailable;\n        }\n    }\n\n    protected loading(size: number): void {\n        let tp = \"\";\n        while (size > 0) {\n            tp += this.itemTemplate;\n            size--;\n        }\n        this.container.innerHTML = tp;\n    }\n\n    protected removeLoading(): void {\n        const loadingItems = this.querySelectorAll(\n            \".library-item[data-loading=true]\"\n        ) as NodeListOf<HTMLElement>;\n        loadingItems.forEach((el) => {\n            delete el.dataset.loading;\n        });\n    }\n\n    protected template(): string {\n        return `<li class=\"library-item\" data-loading=\"true\">\n            <span class=\"name\"></span>\n            <span class=\"hasBook\"></span>\n            <span class=\"loanAvailable\"></span>\n        </li>`;\n    }\n}\n", "export default class Publisher<T = undefined> {\n    private subscribers: TSubscriberCallback<T>[] = [];\n\n    subscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers.push(callback);\n    }\n\n    unsubscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers = this.subscribers.filter(\n            (subscriber) => subscriber !== callback\n        );\n    }\n\n    notify(payload?: T) {\n        this.subscribers.forEach((callback) => callback(payload));\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nconst cloneDeep = <T>(obj: T): T => {\n    return JSON.parse(JSON.stringify(obj));\n};\n\nconst STORAGE_NAME = \"BookWorld\";\n\nconst initialState: IBookState = {\n    libraries: {},\n    regions: {},\n    category: {},\n    categorySort: [],\n};\n\nexport const publishers = {\n    bookStateUpdate: new Publisher(),\n\n    categoryUpdate: new Publisher<ICategoryUpdateProps>(),\n    categoryBookUpdate: new Publisher(),\n\n    regionUpdate: new Publisher(),\n    detailRegionUpdate: new Publisher(),\n};\n\nclass BookStore {\n    private state: IBookState;\n\n    constructor() {\n        this.state = this.loadStorage() || cloneDeep(initialState);\n    }\n\n    private loadStorage() {\n        try {\n            const storageData = localStorage.getItem(STORAGE_NAME);\n            return storageData ? JSON.parse(storageData) : null;\n        } catch (error) {\n            console.error(error);\n            throw new Error(\"Failed to get state from localStorage.\");\n        }\n    }\n\n    private setStorage(newState: IBookState) {\n        try {\n            localStorage.setItem(STORAGE_NAME, JSON.stringify(newState));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    reset() {\n        this.state = cloneDeep(initialState);\n        this.storage = cloneDeep(initialState);\n    }\n\n    get storage() {\n        return cloneDeep(this.state);\n    }\n\n    set storage(newState) {\n        this.setStorage(newState);\n        this.state = newState;\n    }\n\n    get category() {\n        return cloneDeep(this.state.category);\n    }\n\n    set category(newCategory) {\n        const newState = this.storage;\n        newState.category = newCategory;\n        this.storage = newState;\n    }\n\n    get categorySort() {\n        return cloneDeep(this.state.categorySort);\n    }\n    set categorySort(newSort) {\n        const newState = this.state;\n        newState.categorySort = newSort;\n        this.storage = newState;\n    }\n\n    get libraries() {\n        return cloneDeep(this.state.libraries);\n    }\n\n    set libraries(newLibries) {\n        const newState = this.state;\n        newState.libraries = newLibries;\n        this.storage = newState;\n    }\n\n    get regions() {\n        return cloneDeep(this.state.regions);\n    }\n    set regions(newRegions) {\n        const newState = this.state;\n        newState.regions = newRegions;\n        this.storage = newState;\n    }\n\n    addCategory(name: string) {\n        const newCategory = this.category;\n        newCategory[name] = [];\n        this.category = newCategory;\n\n        publishers.categoryUpdate.notify({ type: \"add\", name });\n    }\n\n    addCategorySort(name: string) {\n        const newCategorySort = this.categorySort;\n        newCategorySort.push(name);\n        this.categorySort = newCategorySort;\n    }\n\n    hasCategory(name: string) {\n        return name in this.category;\n    }\n\n    renameCategory(prevName: string, newName: string) {\n        const newCategory = this.category;\n        newCategory[newName] = newCategory[prevName];\n        delete newCategory[prevName];\n        this.category = newCategory;\n\n        this.renameCategorySort(prevName, newName);\n\n        publishers.categoryUpdate.notify({ type: \"rename\", prevName, newName });\n    }\n\n    renameCategorySort(prevName: string, newName: string) {\n        const newCategorySort = this.categorySort;\n        const index = this.indexCategorySort(prevName);\n        newCategorySort[index] = newName;\n        this.categorySort = newCategorySort;\n    }\n\n    indexCategorySort(name: string) {\n        const newCategorySort = this.categorySort;\n        const index = newCategorySort.indexOf(name);\n        return index;\n    }\n\n    deleteCategory(name: string) {\n        const newFavorites = this.category;\n        delete newFavorites[name];\n        this.category = newFavorites;\n\n        publishers.categoryUpdate.notify({ type: \"delete\", name });\n    }\n\n    deleteCatgorySort(name: string): number {\n        const newCategorySort = this.categorySort;\n        const index = newCategorySort.indexOf(name);\n        newCategorySort.splice(index, 1);\n        this.categorySort = newCategorySort;\n        return index;\n    }\n\n    changeCategory(draggedKey: string, targetKey: string) {\n        const newSort = this.categorySort;\n        const draggedIndex = newSort.indexOf(draggedKey);\n        const targetIndex = newSort.indexOf(targetKey);\n        newSort[targetIndex] = draggedKey;\n        newSort[draggedIndex] = targetKey;\n\n        this.categorySort = newSort;\n\n        publishers.categoryUpdate.notify({\n            type: \"change\",\n            targetIndex,\n            draggedIndex,\n        });\n    }\n\n    addBookInCategory(name: string, isbn: string) {\n        const newCategory = this.category;\n        newCategory[name].unshift(isbn);\n        this.category = newCategory;\n\n        publishers.categoryBookUpdate.notify();\n    }\n\n    hasBookInCategory(name: string, isbn: string) {\n        return this.category[name].includes(isbn);\n    }\n\n    removeBookInCategory(name: string, isbn: string) {\n        const newCategory = this.category;\n        const index = newCategory[name].indexOf(isbn);\n        if (index !== -1) {\n            newCategory[name].splice(index, 1);\n            this.category = newCategory;\n        }\n\n        publishers.categoryBookUpdate.notify();\n    }\n\n    addLibrary(code: string, name: string) {\n        const newLibries = this.libraries;\n        newLibries[code] = name;\n        this.libraries = newLibries;\n    }\n\n    removeLibrary(code: string) {\n        const newLibries = this.libraries;\n        delete newLibries[code];\n        this.libraries = newLibries;\n    }\n\n    hasLibrary(code: string) {\n        return code in this.libraries;\n    }\n\n    addRegion(name: string) {\n        const newRegion = this.regions;\n        newRegion[name] = {};\n        this.regions = newRegion;\n\n        publishers.regionUpdate.notify();\n    }\n\n    removeRegion(name: string) {\n        const newRegions = this.regions;\n        delete newRegions[name];\n        this.regions = newRegions;\n\n        publishers.regionUpdate.notify();\n    }\n\n    addDetailRegion(\n        regionName: string,\n        detailName: string,\n        detailCode: string\n    ) {\n        const newRegions = this.regions;\n        newRegions[regionName][detailName] = detailCode;\n        this.regions = newRegions;\n\n        publishers.detailRegionUpdate.notify();\n    }\n\n    removeDetailRegion(regionName: string, detailName: string) {\n        const newRegions = this.regions;\n        delete newRegions[regionName][detailName];\n        this.regions = newRegions;\n\n        publishers.detailRegionUpdate.notify();\n    }\n}\n\nconst bookStore = new BookStore();\n\nexport default bookStore;\n", "import bookStore, { publishers.categoryBookUpdate } from \"../modules/BookStore\";\n\nexport default class NavGnb extends HTMLElement {\n    PATHS: string[];\n\n    constructor() {\n        super();\n\n        this.PATHS = [\n            \"/search\",\n            \"/favorite\",\n            \"/popular\",\n            \"/library\",\n            \"/setting\",\n        ];\n\n        this.renderBookSize = this.renderBookSize.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n        this.setSelectedMenu();\n\n        publishers.categoryBookUpdate.subscribe(this.renderBookSize);\n    }\n\n    get bookSize() {\n        return Object.values(bookStore.category).reduce(\n            (sum, currentArray: string[]) => sum + currentArray.length,\n            0\n        );\n    }\n\n    protected render() {\n        const paths = this.PATHS;\n        this.innerHTML = `\n            <nav class=\"gnb\">\n                <a class=\"gnb-item\" href=\".${paths[0]}\">\uCC45 \uAC80\uC0C9</a>\n                <a class=\"gnb-item\" href=\".${paths[1]}\">\uB098\uC758 \uCC45 (<span class=\"size\">${this.bookSize}</span>)</a>\n                <a class=\"gnb-item\" href=\".${paths[2]}\">\uC778\uAE30\uB300\uCD9C\uB3C4\uC11C</a>\n                <a class=\"gnb-item\" href=\".${paths[3]}\">\uB3C4\uC11C\uAD00 \uC870\uD68C</a>\n                <a class=\"gnb-item\" href=\".${paths[4]}\">\uC124\uC815</a>\n            </nav>`;\n    }\n\n    protected setSelectedMenu(): void {\n        const idx = this.PATHS.indexOf(document.location.pathname);\n        if (idx >= 0) this.querySelectorAll(\"a\")[idx].ariaSelected = \"true\";\n    }\n\n    protected renderBookSize() {\n        const sizeEl = this.querySelector(\".size\") as HTMLElement;\n        sizeEl.textContent = this.bookSize.toString();\n    }\n}\n", "import bookStore from \"../modules/BookStore\";\n\nexport default class CategorySelector extends HTMLElement {\n    protected isbn: string | null;\n    button: HTMLButtonElement | null;\n\n    constructor() {\n        super();\n\n        this.isbn = this.getISBN();\n        this.button = null;\n\n        this.onClickCategory = this.onClickCategory.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n    }\n\n    protected render() {\n        const button = this.createButton();\n        const container = this.createContainer();\n\n        this.button = button;\n\n        this.appendChild(container);\n        this.appendChild(button);\n\n        this.button?.addEventListener(\"click\", this.onClickCategory);\n    }\n\n    createButton() {\n        const button = document.createElement(\"button\");\n        button.className = \"category-button\";\n        button.textContent = \"Category\";\n        return button;\n    }\n\n    onClickCategory() {\n        const el = this.querySelector(\".category\") as HTMLElement;\n        el.hidden = !el.hidden;\n    }\n\n    private getISBN(): string | null {\n        const isbnElement = this.closest(\"[data-isbn]\") as HTMLElement;\n        return isbnElement && isbnElement.dataset.isbn\n            ? isbnElement.dataset.isbn\n            : null;\n    }\n\n    private createContainer() {\n        const container = document.createElement(\"div\");\n        container.className = \"category\";\n        container.hidden = true;\n        bookStore.categorySort.forEach((category: string) =>\n            this.createCategoryItem(container, category, this.isbn || \"\")\n        );\n        return container;\n    }\n\n    private createCategoryItem = (\n        container: HTMLElement,\n        category: string,\n        ISBN: string\n    ) => {\n        const label = document.createElement(\"label\");\n        const checkbox = this.createCheckbox(category, ISBN);\n        const span = document.createElement(\"span\");\n        span.textContent = category;\n\n        label.appendChild(checkbox);\n        label.appendChild(span);\n\n        container.appendChild(label);\n        return container;\n    };\n\n    private createCheckbox(category: string, ISBN: string) {\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        if (bookStore.hasBookInCategory(category, ISBN)) {\n            checkbox.checked = true;\n        }\n\n        checkbox.addEventListener(\"change\", () =>\n            this.onChange(checkbox, category, ISBN)\n        );\n\n        return checkbox;\n    }\n\n    private onChange(\n        checkbox: HTMLInputElement,\n        category: string,\n        ISBN: string\n    ) {\n        const isBookInCategory = bookStore.hasBookInCategory(category, ISBN);\n\n        if (isBookInCategory) {\n            bookStore.removeBookInCategory(category, ISBN);\n        } else {\n            bookStore.addBookInCategory(category, ISBN);\n        }\n\n        checkbox.checked = !isBookInCategory;\n    }\n}\n", "export default class BookImage extends HTMLElement {\n    private imgElement: HTMLImageElement;\n    private imgContainer: HTMLDivElement;\n\n    constructor() {\n        super();\n\n        this.imgElement = document.createElement(\"img\");\n        this.imgElement.className = \"thumb\";\n\n        this.imgContainer = document.createElement(\"div\");\n        this.imgContainer.className = \"book-image\";\n\n        this.imgElement.onerror = this.handleImageError.bind(this);\n    }\n\n    // \uC990\uACA8\uCC3E\uAE30, \uC0C1\uC138\n    set data(objectData: IBookImageData) {\n        const jsonData = JSON.stringify(objectData);\n\n        if (this.dataset.object !== jsonData) {\n            this.dataset.object = jsonData;\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        if (!this.imgElement.src && this.dataset.object) {\n            this.render();\n        }\n    }\n\n    // search : dataset\n    private render() {\n        const data: IBookImageData | null = this.dataset.object\n            ? JSON.parse(this.dataset.object)\n            : null;\n\n        if (data && \"bookImageURL\" in data && \"bookname\" in data) {\n            const { bookImageURL, bookname } = data;\n            this.imgElement.src = bookImageURL;\n            this.imgElement.alt = bookname;\n\n            this.imgContainer.appendChild(this.imgElement);\n            this.appendChild(this.imgContainer);\n        }\n    }\n\n    private handleImageError() {\n        this.dataset.fail = \"true\";\n        console.error(`Failed to load image: ${this.imgElement.src}`);\n        this.imgElement.remove();\n        if (!this.imgContainer.hasChildNodes()) {\n            this.imgContainer.remove(); // \uCEE8\uD14C\uC774\uB108 \uC81C\uAC70 \uCC98\uB9AC \uCD94\uAC00\n        }\n    }\n}\n", "export const SEARCH_PAGE_INIT = \"search-page-init\";\n", "import { CustomEventEmitter } from \"../../utils/index\";\nimport { SEARCH_PAGE_INIT } from \"./constant\";\n\nexport default class AppSearch extends HTMLElement {\n    private boundPopStateHandler: ((ev: PopStateEvent) => void) | null = null;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.renderBookList();\n        this.boundPopStateHandler = this.onPopState.bind(this);\n        window.addEventListener(\"popstate\", this.boundPopStateHandler);\n    }\n\n    disconnectedCallback() {\n        if (this.boundPopStateHandler) {\n            window.removeEventListener(\"popstate\", this.boundPopStateHandler);\n        }\n    }\n\n    private onPopState() {\n        this.renderBookList();\n    }\n\n    private renderBookList() {\n        const params = new URLSearchParams(location.search);\n        const keyword = params.get(\"keyword\");\n        const sort = params.get(\"sort\") || \"sim\";\n        const searchElement = document.querySelector(\n            \"input-search input[type='search']\"\n        ) as HTMLInputElement;\n\n        if (keyword && sort) {\n            CustomEventEmitter.dispatch(SEARCH_PAGE_INIT, { keyword, sort });\n            searchElement.value = keyword;\n        }\n    }\n}\n", "import { CustomEventEmitter } from \"../../utils/index\";\nimport { SEARCH_PAGE_INIT } from \"./constant\";\n\nexport default class InputSearch extends HTMLElement {\n    private form: HTMLFormElement | null = null;\n    private input: HTMLInputElement | null = null;\n\n    constructor() {\n        super();\n        this.initialize();\n    }\n\n    connectedCallback() {\n        this.form?.addEventListener(\"submit\", this.onSubmit);\n\n        const radios = this.form?.sort;\n        radios.forEach((radio: HTMLInputElement) => {\n            radio.addEventListener(\"change\", this.handleRadioChange);\n        });\n    }\n\n    disconnectedCallback() {\n        this.form?.removeEventListener(\"submit\", this.onSubmit);\n    }\n\n    private initialize() {\n        this.form = this.querySelector(\"form\") as HTMLFormElement;\n        this.input = this.querySelector(\n            \"input[type='search']\"\n        ) as HTMLInputElement;\n    }\n\n    private handleRadioChange = () => {\n        const submitEvent = new Event(\"submit\");\n        this.form?.dispatchEvent(submitEvent);\n    };\n\n    private onSubmit = (event: Event) => {\n        event.preventDefault();\n\n        if (!this.input) return;\n\n        const keyword = this.input.value;\n        const sort = this.form?.sort.value;\n\n        this.input.focus();\n\n        if (keyword && sort) {\n            const url = new URL(window.location.href);\n\n            url.searchParams.set(\"keyword\", keyword);\n            url.searchParams.set(\"sort\", sort);\n\n            window.history.pushState({}, \"\", url.toString());\n\n            CustomEventEmitter.dispatch(SEARCH_PAGE_INIT, { keyword, sort });\n        }\n    };\n}\n", "import BookItem from \"./BookItem\";\nimport { Observer, CustomFetch, CustomEventEmitter } from \"../../utils/index\";\nimport { SEARCH_PAGE_INIT } from \"./constant\";\n\nexport default class BookList extends HTMLElement {\n    paginationElement!: HTMLElement;\n    bookContainer!: HTMLElement;\n    observer?: Observer;\n    keyword?: string;\n    sortingOrder?: string;\n    itemCount!: number;\n\n    constructor() {\n        super();\n\n        this.retrieveBooks = this.retrieveBooks.bind(this);\n        this.initializeSearchPage = this.initializeSearchPage.bind(this);\n    }\n\n    connectedCallback() {\n        this.paginationElement = this.querySelector(\n            \".paging-info\"\n        ) as HTMLElement;\n        this.bookContainer = this.querySelector(\".books\") as HTMLElement;\n        this.setupObserver();\n\n        CustomEventEmitter.add(\n            SEARCH_PAGE_INIT,\n            this.initializeSearchPage as EventListener\n        );\n    }\n\n    disconnectedCallback() {\n        this.observer?.disconnect();\n\n        CustomEventEmitter.remove(\n            SEARCH_PAGE_INIT,\n            this.initializeSearchPage as EventListener\n        );\n    }\n\n    private setupObserver() {\n        const target = this.querySelector(\".observe\") as HTMLElement;\n        this.observer = new Observer(target, this.retrieveBooks);\n    }\n\n    private initializeSearchPage(\n        event: ICustomEvent<{\n            keyword: string;\n            sort: string;\n        }>\n    ) {\n        const { keyword, sort } = event.detail;\n\n        this.keyword = keyword;\n        this.sortingOrder = sort;\n        this.itemCount = 0;\n\n        // renderBooks: onSubmit\uC73C\uB85C \uB4E4\uC5B4\uC628 \uACBD\uC6B0\uC640 \uBE0C\uB77C\uC6B0\uC800\n        // showDefaultMessage: keyword \uC5C6\uC744 \uB54C \uAE30\uBCF8 \uD654\uBA74 \uB178\uCD9C, \uBE0C\uB77C\uC6B0\uC800\n        this.keyword ? this.renderBooks() : this.showDefaultMessage();\n    }\n\n    private renderBooks() {\n        this.renderMessage(\"loading\");\n        this.bookContainer.innerHTML = \"\";\n        this.retrieveBooks();\n    }\n\n    private showDefaultMessage() {\n        this.paginationElement.hidden = true;\n        this.renderMessage(\"message\");\n    }\n\n    private async retrieveBooks(): Promise<void> {\n        if (!this.keyword || !this.sortingOrder) return;\n\n        const encodedKeyword = encodeURIComponent(this.keyword);\n        const searchUrl = `/search-naver-book?keyword=${encodedKeyword}&display=${10}&start=${\n            this.itemCount + 1\n        }&sort=${this.sortingOrder}`;\n\n        // console.log(\"fetch-search: \", searchUrl);\n\n        try {\n            const data = await CustomFetch.fetch<ISearchNaverBookResult>(\n                searchUrl\n            );\n            this.renderBookList(data);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                console.error(`Error fetching books: ${error.message}`);\n            } else {\n                console.error(\"An unexpected error occurred\");\n            }\n        }\n    }\n\n    private renderBookList(data: ISearchNaverBookResult): void {\n        const { total, display, items } = data;\n\n        if (total === 0) {\n            this.renderMessage(\"notFound\");\n            return;\n        }\n\n        this.itemCount += display;\n        this.refreshPagingData(total, display);\n        this.appendBookItems(items);\n        this.paginationElement.hidden = false;\n\n        if (total !== this.itemCount) this.observer?.observe();\n    }\n\n    private refreshPagingData(total: number, display: number) {\n        const obj = {\n            keyword: `${this.keyword}`,\n            length: `${this.itemCount.toLocaleString()}`,\n            total: `${total.toLocaleString()}`,\n            display: `${display}\uAC1C\uC529`,\n        };\n\n        for (const [key, value] of Object.entries(obj)) {\n            const element = this.paginationElement.querySelector(\n                `.__${key}`\n            ) as HTMLElement;\n            element.textContent = value;\n        }\n    }\n\n    private appendBookItems(items: ISearchBook[]) {\n        const fragment = new DocumentFragment();\n        const template = document.querySelector(\n            \"#tp-book-item\"\n        ) as HTMLTemplateElement;\n\n        items.forEach((item, index) => {\n            const clonedNode = template.content.cloneNode(true) as HTMLElement;\n            const bookItem = clonedNode.querySelector(\"book-item\") as BookItem;\n            bookItem.bookData = item;\n            bookItem.dataset.index = (this.itemCount + index).toString();\n            fragment.appendChild(clonedNode);\n        });\n\n        this.bookContainer.appendChild(fragment);\n    }\n\n    private renderMessage(type: string) {\n        const messageTemplate = document.querySelector(\n            `#tp-${type}`\n        ) as HTMLTemplateElement;\n        if (!messageTemplate) return;\n\n        this.bookContainer.innerHTML = \"\";\n        this.bookContainer.appendChild(messageTemplate.content.cloneNode(true));\n    }\n}\n\n// this.observer = new IntersectionObserver( changes => {\n//     changes.forEach( change => {\n//         if (change.isIntersecting) {\n//             this.observer.unobserve(change.target)\n//             this.retrieveBooks()\n//         }\n//     })\n// })\n", "import {\n    BookDescription,\n    BookImage,\n    LibraryBookExist,\n} from \"../../components/index.js\";\nimport bookStore from \"../../modules/BookStore\";\n\nexport default class BookItem extends HTMLElement {\n    private bookLibraryButton: HTMLButtonElement | null = null;\n    bookData!: ISearchBook;\n\n    constructor() {\n        super();\n        this.initializeEventHandlers();\n    }\n\n    connectedCallback() {\n        this.populateBookData();\n    }\n\n    disconnectedCallback() {\n        this.removeEventHandlers();\n    }\n\n    private initializeEventHandlers() {\n        this.bookLibraryButton = this.querySelector(\".library-button\");\n        this.bookLibraryButton?.addEventListener(\n            \"click\",\n            this.onLibraryButtonClick\n        );\n    }\n\n    private removeEventHandlers() {\n        this.bookLibraryButton?.removeEventListener(\n            \"click\",\n            this.onLibraryButtonClick\n        );\n    }\n\n    private populateBookData() {\n        if (!this.bookData) {\n            console.error(\"Book data is not provided\");\n            return;\n        }\n\n        this.updateBookElements(this.bookData);\n    }\n\n    private updateBookElements(bookData: ISearchBook) {\n        const {\n            image,\n            isbn,\n            link,\n            pubdate,\n            ...otherData // author,  description,  discount,  publisher, title,\n        } = bookData;\n\n        const title = bookData.title;\n\n        const imageNode = this.querySelector<BookImage>(\"book-image\");\n        if (imageNode) {\n            imageNode.dataset.object = JSON.stringify({\n                bookImageURL: image,\n                bookname: title,\n            });\n        }\n\n        const linkNode = this.querySelector(\".link\") as HTMLAnchorElement;\n        if (linkNode) linkNode.href = link;\n\n        const date = `${pubdate.substring(0, 4)}.${pubdate.substring(\n            4,\n            6\n        )}.${pubdate.substring(6)}`;\n        const pubdateNode = this.querySelector(\".pubdate\") as HTMLElement;\n        if (pubdateNode) pubdateNode.textContent = date;\n\n        Object.entries(otherData).forEach(([key, value]) => {\n            if (key === \"description\") {\n                const descNode =\n                    this.querySelector<BookDescription>(\"book-description\");\n                if (descNode) descNode.data = value as string;\n            } else {\n                const element = this.querySelector(`.${key}`) as HTMLElement;\n                if (element) element.textContent = value as string;\n            }\n        });\n\n        const anchorEl = this.querySelector(\"a\") as HTMLAnchorElement;\n        if (anchorEl) anchorEl.href = `/book?isbn=${isbn}`;\n\n        this.dataset.isbn = isbn;\n    }\n\n    private onLibraryButtonClick = () => {\n        const isbn = this.dataset.isbn || \"\";\n        const libraryBookNode =\n            this.querySelector<LibraryBookExist>(\"library-book-exist\");\n        libraryBookNode?.onLibraryBookExist(\n            this.bookLibraryButton,\n            isbn,\n            bookStore.libraries\n        );\n    };\n}\n", "import {\n    NavGnb,\n    BookDescription,\n    CategorySelector,\n    LibraryBookExist,\n    BookImage,\n} from \"../../components/index\";\n\nimport AppSearch from \"./AppSearch\";\nimport InputSearch from \"./InputSearch\";\nimport BookList from \"./BookList\";\nimport BookItem from \"./BookItem\";\n// import TestElement from './TestElement'\n\ncustomElements.define(\"nav-gnb\", NavGnb);\ncustomElements.define(\"book-list\", BookList);\ncustomElements.define(\"app-search\", AppSearch);\ncustomElements.define(\"input-search\", InputSearch);\ncustomElements.define(\"book-item\", BookItem);\ncustomElements.define(\"book-description\", BookDescription);\ncustomElements.define(\"library-book-exist\", LibraryBookExist);\ncustomElements.define(\"category-selector\", CategorySelector);\ncustomElements.define(\"book-image\", BookImage);\n// customElements.define('test-element', TestElement)\n"],
  "mappings": ";;;AAAA,MAAqB,kBAArB,cAA6C,YAAW;IAIpD,cAAA;AACI,YAAK;AACL,WAAK,KAAK;AACV,WAAK,SAAS;IAClB;IAEA,IAAI,KAAK,OAAa;AAClB,WAAK,OAAO,KAAK;IACrB;IAEA,oBAAiB;AACb,WAAK,OAAO,KAAK,IAAI;IACzB;IAEA,uBAAoB;AAChB,UAAI,KAAK;AACL,aAAK,OAAO,oBACR,SACA,KAAK,cAAc,KAAK,IAAI,CAAC;IAEzC;IAEU,OAAO,OAAa;AAC1B,YAAM,WAAW;0DACiC;;AAElD,WAAK,YAAY;AAEjB,WAAK,KAAK,KAAK,cAAc,cAAc;AAC3C,WAAK,SAAS,KAAK,cAAc,0BAA0B;AAE3D,UAAI,KAAK;AACL,aAAK,OAAO,iBACR,SACA,KAAK,cAAc,KAAK,IAAI,CAAC;IAMzC;;;;IAMU,gBAAa;AACnB,UAAI,CAAC,KAAK;AAAI;AAEd,cAAQ,KAAK,GAAG,QAAQ,UAAU;QAC9B,KAAK;AACD,eAAK,GAAG,QAAQ,WAAW;AAC3B,cAAI,KAAK;AAAQ,iBAAK,OAAO,cAAc;AAC3C;QACJ,KAAK;AACD,eAAK,GAAG,QAAQ,WAAW;AAC3B,cAAI,KAAK;AAAQ,iBAAK,OAAO,cAAc;AAC3C;;IAEZ;;;;AC/DJ,MAAM,qBAAN,MAAwB;IAGpB,cAAA;AACI,WAAK,OAAO,SAAS,cAAc,KAAK;IAC5C;IAEA,IAAI,OAAe,UAA0C;AACzD,WAAK,KAAK,iBACN,OACA,QAA8C;IAEtD;IAEA,OAAO,OAAe,UAA0C;AAC5D,WAAK,KAAK,oBACN,OACA,QAA8C;IAEtD;IAEA,SAAS,OAAe,SAAY,CAAA,GAAO;AACvC,WAAK,KAAK,cAAc,IAAI,YAAY,OAAO,EAAE,OAAM,CAAE,CAAC;IAC9D;;AAGJ,MAAA,6BAAe,IAAI,mBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBrC,MAAM,cAAN,MAAiB;IAGb,YAAY,cAA2B,CAAA,GAAE;AACrC,WAAK,iBAAc,OAAA,OAAA,EACf,QAAQ,OACR,SAAS;QACL,gBAAgB;;QAEnB,GACE,WAAW;IAEtB;IAEM,MAAmB,KAAa,SAAqB;;AACvD,cAAM,eAAY,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GACX,KAAK,cAAc,GACnB,OAAO,GAAA,EACV,SAAS,IAAI,CAAA;AAEjB,YAAI;AACA,gBAAM,WAAW,MAAM,MAAM,KAAK,YAAY;AAC9C,cAAI,CAAC,SAAS,IAAI;AACd,kBAAM,IAAI,MAAM,uBAAuB,SAAS,oBAAoB,SAAS,YAAY;;AAE7F,gBAAM,OAAO,MAAM,SAAS,KAAI;AAChC,iBAAO;iBACH,OAAN;AACE,kBAAQ,MAAM,wBAAwB,OAAO;AAC7C,gBAAM,IAAI,MAAM,wBAAwB,OAAO;;MAGvD,CAAC;;;AAGL,MAAA,sBAAe,IAAI,YAAW;;;AC5B9B,GAAC,WAAW;AACZ;AAGA,QAAI,OAAO,WAAW,UAAU;AAC9B;AAAA,IACF;AAIA,QAAI,0BAA0B,UAC1B,+BAA+B,UAC/B,uBAAuB,OAAO,0BAA0B,WAAW;AAIrE,UAAI,EAAE,oBAAoB,OAAO,0BAA0B,YAAY;AACrE,eAAO;AAAA,UAAe,OAAO,0BAA0B;AAAA,UACrD;AAAA,UAAkB;AAAA,YAClB,KAAK,WAAY;AACf,qBAAO,KAAK,oBAAoB;AAAA,YAClC;AAAA,UACF;AAAA,QAAC;AAAA,MACH;AACA;AAAA,IACF;AAOA,aAAS,gBAAgB,KAAK;AAC5B,UAAI;AACF,eAAO,IAAI,eAAe,IAAI,YAAY,gBAAgB;AAAA,MAC5D,SAAS,GAAP;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAKA,QAAIA,YAAY,SAAS,UAAU;AACjC,UAAI,MAAM;AACV,UAAI,QAAQ,gBAAgB,GAAG;AAC/B,aAAO,OAAO;AACZ,cAAM,MAAM;AACZ,gBAAQ,gBAAgB,GAAG;AAAA,MAC7B;AACA,aAAO;AAAA,IACT,EAAG,OAAO,QAAQ;AAQlB,QAAI,WAAW,CAAC;AAOhB,QAAI,qBAAqB;AAMzB,QAAI,kBAAkB;AAStB,aAAS,0BAA0B,OAAO;AACxC,WAAK,OAAO,MAAM;AAClB,WAAK,SAAS,MAAM;AACpB,WAAK,aAAa,cAAc,MAAM,UAAU;AAChD,WAAK,qBAAqB,cAAc,MAAM,kBAAkB;AAChE,WAAK,mBAAmB,cAAc,MAAM,oBAAoB,aAAa,CAAC;AAC9E,WAAK,iBAAiB,CAAC,CAAC,MAAM;AAG9B,UAAI,aAAa,KAAK;AACtB,UAAI,aAAa,WAAW,QAAQ,WAAW;AAC/C,UAAI,mBAAmB,KAAK;AAC5B,UAAI,mBAAmB,iBAAiB,QAAQ,iBAAiB;AAGjE,UAAI,YAAY;AAGd,aAAK,oBAAoB,QAAQ,mBAAmB,YAAY,QAAQ,CAAC,CAAC;AAAA,MAC5E,OAAO;AAEL,aAAK,oBAAoB,KAAK,iBAAiB,IAAI;AAAA,MACrD;AAAA,IACF;AAYA,aAASC,sBAAqB,UAAU,aAAa;AAEnD,UAAI,UAAU,eAAe,CAAC;AAE9B,UAAI,OAAO,YAAY,YAAY;AACjC,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AAEA,UACE,QAAQ,QACR,QAAQ,KAAK,YAAY,KACzB,QAAQ,KAAK,YAAY,GACzB;AACA,cAAM,IAAI,MAAM,oCAAoC;AAAA,MACtD;AAGA,WAAK,yBAAyB;AAAA,QAC1B,KAAK,uBAAuB,KAAK,IAAI;AAAA,QAAG,KAAK;AAAA,MAAgB;AAGjE,WAAK,YAAY;AACjB,WAAK,sBAAsB,CAAC;AAC5B,WAAK,iBAAiB,CAAC;AACvB,WAAK,oBAAoB,KAAK,iBAAiB,QAAQ,UAAU;AAGjE,WAAK,aAAa,KAAK,gBAAgB,QAAQ,SAAS;AACxD,WAAK,OAAO,QAAQ,QAAQ;AAC5B,WAAK,aAAa,KAAK,kBAAkB,IAAI,SAAS,QAAQ;AAC5D,eAAO,OAAO,QAAQ,OAAO;AAAA,MAC/B,CAAC,EAAE,KAAK,GAAG;AAGX,WAAK,uBAAuB,CAAC;AAE7B,WAAK,0BAA0B,CAAC;AAAA,IAClC;AAOA,IAAAA,sBAAqB,UAAU,mBAAmB;AAQlD,IAAAA,sBAAqB,UAAU,gBAAgB;AAM/C,IAAAA,sBAAqB,UAAU,wBAAwB;AAYvD,IAAAA,sBAAqB,2BAA2B,WAAW;AACzD,UAAI,CAAC,oBAAoB;AAKvB,6BAAqB,SAAS,oBAAoB,kBAAkB;AAClE,cAAI,CAAC,sBAAsB,CAAC,kBAAkB;AAC5C,8BAAkB,aAAa;AAAA,UACjC,OAAO;AACL,8BAAkB,sBAAsB,oBAAoB,gBAAgB;AAAA,UAC9E;AACA,mBAAS,QAAQ,SAAS,UAAU;AAClC,qBAAS,uBAAuB;AAAA,UAClC,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAMA,IAAAA,sBAAqB,2BAA2B,WAAW;AACzD,2BAAqB;AACrB,wBAAkB;AAAA,IACpB;AAQA,IAAAA,sBAAqB,UAAU,UAAU,SAAS,QAAQ;AACxD,UAAI,0BAA0B,KAAK,oBAAoB,KAAK,SAAS,MAAM;AACzE,eAAO,KAAK,WAAW;AAAA,MACzB,CAAC;AAED,UAAI,yBAAyB;AAC3B;AAAA,MACF;AAEA,UAAI,EAAE,UAAU,OAAO,YAAY,IAAI;AACrC,cAAM,IAAI,MAAM,2BAA2B;AAAA,MAC7C;AAEA,WAAK,kBAAkB;AACvB,WAAK,oBAAoB,KAAK,EAAC,SAAS,QAAQ,OAAO,KAAI,CAAC;AAC5D,WAAK,sBAAsB,OAAO,aAAa;AAC/C,WAAK,uBAAuB;AAAA,IAC9B;AAOA,IAAAA,sBAAqB,UAAU,YAAY,SAAS,QAAQ;AAC1D,WAAK,sBACD,KAAK,oBAAoB,OAAO,SAAS,MAAM;AAC7C,eAAO,KAAK,WAAW;AAAA,MACzB,CAAC;AACL,WAAK,wBAAwB,OAAO,aAAa;AACjD,UAAI,KAAK,oBAAoB,UAAU,GAAG;AACxC,aAAK,oBAAoB;AAAA,MAC3B;AAAA,IACF;AAMA,IAAAA,sBAAqB,UAAU,aAAa,WAAW;AACrD,WAAK,sBAAsB,CAAC;AAC5B,WAAK,2BAA2B;AAChC,WAAK,oBAAoB;AAAA,IAC3B;AASA,IAAAA,sBAAqB,UAAU,cAAc,WAAW;AACtD,UAAI,UAAU,KAAK,eAAe,MAAM;AACxC,WAAK,iBAAiB,CAAC;AACvB,aAAO;AAAA,IACT;AAYA,IAAAA,sBAAqB,UAAU,kBAAkB,SAAS,eAAe;AACvE,UAAI,YAAY,iBAAiB,CAAC,CAAC;AACnC,UAAI,CAAC,MAAM,QAAQ,SAAS;AAAG,oBAAY,CAAC,SAAS;AAErD,aAAO,UAAU,KAAK,EAAE,OAAO,SAAS,GAAG,GAAG,GAAG;AAC/C,YAAI,OAAO,KAAK,YAAY,MAAM,CAAC,KAAK,IAAI,KAAK,IAAI,GAAG;AACtD,gBAAM,IAAI,MAAM,wDAAwD;AAAA,QAC1E;AACA,eAAO,MAAM,EAAE,IAAI,CAAC;AAAA,MACtB,CAAC;AAAA,IACH;AAcA,IAAAA,sBAAqB,UAAU,mBAAmB,SAAS,gBAAgB;AACzE,UAAI,eAAe,kBAAkB;AACrC,UAAI,UAAU,aAAa,MAAM,KAAK,EAAE,IAAI,SAAS,QAAQ;AAC3D,YAAI,QAAQ,wBAAwB,KAAK,MAAM;AAC/C,YAAI,CAAC,OAAO;AACV,gBAAM,IAAI,MAAM,mDAAmD;AAAA,QACrE;AACA,eAAO,EAAC,OAAO,WAAW,MAAM,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,EAAC;AAAA,MACrD,CAAC;AAGD,cAAQ,CAAC,IAAI,QAAQ,CAAC,KAAK,QAAQ,CAAC;AACpC,cAAQ,CAAC,IAAI,QAAQ,CAAC,KAAK,QAAQ,CAAC;AACpC,cAAQ,CAAC,IAAI,QAAQ,CAAC,KAAK,QAAQ,CAAC;AAEpC,aAAO;AAAA,IACT;AASA,IAAAA,sBAAqB,UAAU,wBAAwB,SAAS,KAAK;AACnE,UAAI,MAAM,IAAI;AACd,UAAI,CAAC,KAAK;AAER;AAAA,MACF;AACA,UAAI,KAAK,qBAAqB,QAAQ,GAAG,KAAK,IAAI;AAEhD;AAAA,MACF;AAGA,UAAI,WAAW,KAAK;AACpB,UAAI,qBAAqB;AACzB,UAAI,cAAc;AAIlB,UAAI,KAAK,eAAe;AACtB,6BAAqB,IAAI,YAAY,UAAU,KAAK,aAAa;AAAA,MACnE,OAAO;AACL,iBAAS,KAAK,UAAU,UAAU,IAAI;AACtC,iBAAS,KAAK,UAAU,UAAU,IAAI;AACtC,YAAI,KAAK,yBAAyB,sBAAsB,KAAK;AAC3D,wBAAc,IAAI,IAAI,iBAAiB,QAAQ;AAC/C,sBAAY,QAAQ,KAAK;AAAA,YACvB,YAAY;AAAA,YACZ,WAAW;AAAA,YACX,eAAe;AAAA,YACf,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,MACF;AAEA,WAAK,qBAAqB,KAAK,GAAG;AAClC,WAAK,wBAAwB,KAAK,WAAW;AAG3C,YAAIC,OAAM,IAAI;AAEd,YAAIA,MAAK;AACP,cAAI,oBAAoB;AACtB,YAAAA,KAAI,cAAc,kBAAkB;AAAA,UACtC;AACA,sBAAYA,MAAK,UAAU,UAAU,IAAI;AAAA,QAC3C;AAEA,oBAAY,KAAK,UAAU,UAAU,IAAI;AACzC,YAAI,aAAa;AACf,sBAAY,WAAW;AAAA,QACzB;AAAA,MACF,CAAC;AAGD,UAAI,UACD,KAAK,SAAS,KAAK,KAAK,iBAAiB,KAAK,SAAUF;AAC3D,UAAI,OAAO,SAAS;AAClB,YAAI,QAAQ,gBAAgB,GAAG;AAC/B,YAAI,OAAO;AACT,eAAK,sBAAsB,MAAM,aAAa;AAAA,QAChD;AAAA,MACF;AAAA,IACF;AAQA,IAAAC,sBAAqB,UAAU,0BAA0B,SAAS,KAAK;AACrE,UAAI,QAAQ,KAAK,qBAAqB,QAAQ,GAAG;AACjD,UAAI,SAAS,IAAI;AACf;AAAA,MACF;AAEA,UAAI,UACD,KAAK,SAAS,KAAK,KAAK,iBAAiB,KAAK,SAAUD;AAG3D,UAAI,sBACA,KAAK,oBAAoB,KAAK,SAAS,MAAM;AAC3C,YAAI,UAAU,KAAK,QAAQ;AAE3B,YAAI,WAAW,KAAK;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO,WAAW,WAAW,SAAS;AACpC,cAAIG,SAAQ,gBAAgB,OAAO;AACnC,oBAAUA,UAASA,OAAM;AACzB,cAAI,WAAW,KAAK;AAClB,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT,CAAC;AACL,UAAI,qBAAqB;AACvB;AAAA,MACF;AAGA,UAAI,cAAc,KAAK,wBAAwB,KAAK;AACpD,WAAK,qBAAqB,OAAO,OAAO,CAAC;AACzC,WAAK,wBAAwB,OAAO,OAAO,CAAC;AAC5C,kBAAY;AAGZ,UAAI,OAAO,SAAS;AAClB,YAAI,QAAQ,gBAAgB,GAAG;AAC/B,YAAI,OAAO;AACT,eAAK,wBAAwB,MAAM,aAAa;AAAA,QAClD;AAAA,MACF;AAAA,IACF;AAQA,IAAAF,sBAAqB,UAAU,6BAA6B,WAAW;AACrE,UAAI,eAAe,KAAK,wBAAwB,MAAM,CAAC;AACvD,WAAK,qBAAqB,SAAS;AACnC,WAAK,wBAAwB,SAAS;AACtC,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,qBAAa,CAAC,EAAE;AAAA,MAClB;AAAA,IACF;AASA,IAAAA,sBAAqB,UAAU,yBAAyB,WAAW;AACjE,UAAI,CAAC,KAAK,QAAQ,sBAAsB,CAAC,iBAAiB;AAExD;AAAA,MACF;AAEA,UAAI,cAAc,KAAK,aAAa;AACpC,UAAI,WAAW,cAAc,KAAK,aAAa,IAAI,aAAa;AAEhE,WAAK,oBAAoB,QAAQ,SAAS,MAAM;AAC9C,YAAI,SAAS,KAAK;AAClB,YAAI,aAAa,sBAAsB,MAAM;AAC7C,YAAI,qBAAqB,KAAK,oBAAoB,MAAM;AACxD,YAAI,WAAW,KAAK;AACpB,YAAI,mBAAmB,eAAe,sBAClC,KAAK,kCAAkC,QAAQ,YAAY,QAAQ;AAEvE,YAAI,aAAa;AACjB,YAAI,CAAC,KAAK,oBAAoB,MAAM,GAAG;AACrC,uBAAa,aAAa;AAAA,QAC5B,WAAW,CAAC,sBAAsB,KAAK,MAAM;AAC3C,uBAAa;AAAA,QACf;AAEA,YAAI,WAAW,KAAK,QAAQ,IAAI,0BAA0B;AAAA,UACxD,MAAM,IAAI;AAAA,UACV;AAAA,UACA,oBAAoB;AAAA,UACpB;AAAA,UACA;AAAA,QACF,CAAC;AAED,YAAI,CAAC,UAAU;AACb,eAAK,eAAe,KAAK,QAAQ;AAAA,QACnC,WAAW,eAAe,oBAAoB;AAG5C,cAAI,KAAK,qBAAqB,UAAU,QAAQ,GAAG;AACjD,iBAAK,eAAe,KAAK,QAAQ;AAAA,UACnC;AAAA,QACF,OAAO;AAIL,cAAI,YAAY,SAAS,gBAAgB;AACvC,iBAAK,eAAe,KAAK,QAAQ;AAAA,UACnC;AAAA,QACF;AAAA,MACF,GAAG,IAAI;AAEP,UAAI,KAAK,eAAe,QAAQ;AAC9B,aAAK,UAAU,KAAK,YAAY,GAAG,IAAI;AAAA,MACzC;AAAA,IACF;AAgBA,IAAAA,sBAAqB,UAAU,oCAC3B,SAAS,QAAQ,YAAY,UAAU;AAEzC,UAAI,OAAO,iBAAiB,MAAM,EAAE,WAAW;AAAQ;AAEvD,UAAI,mBAAmB;AACvB,UAAI,SAAS,cAAc,MAAM;AACjC,UAAI,SAAS;AAEb,aAAO,CAAC,UAAU,QAAQ;AACxB,YAAI,aAAa;AACjB,YAAI,sBAAsB,OAAO,YAAY,IACzC,OAAO,iBAAiB,MAAM,IAAI,CAAC;AAGvC,YAAI,oBAAoB,WAAW;AAAQ,iBAAO;AAElD,YAAI,UAAU,KAAK,QAAQ,OAAO;AAAA,QAA2B,GAAG;AAC9D,mBAAS;AACT,cAAI,UAAU,KAAK,QAAQ,UAAUD,WAAU;AAC7C,gBAAI,sBAAsB,CAAC,KAAK,MAAM;AACpC,kBAAI,CAAC,mBACD,gBAAgB,SAAS,KAAK,gBAAgB,UAAU,GAAG;AAE7D,yBAAS;AACT,6BAAa;AACb,mCAAmB;AAAA,cACrB,OAAO;AACL,6BAAa;AAAA,cACf;AAAA,YACF,OAAO;AACL,2BAAa;AAAA,YACf;AAAA,UACF,OAAO;AAEL,gBAAI,QAAQ,cAAc,MAAM;AAChC,gBAAI,YAAY,SAAS,sBAAsB,KAAK;AACpD,gBAAI,iBACA,SACA,KAAK,kCAAkC,OAAO,WAAW,QAAQ;AACrE,gBAAI,aAAa,gBAAgB;AAC/B,uBAAS;AACT,2BAAa,sBAAsB,WAAW,cAAc;AAAA,YAC9D,OAAO;AACL,uBAAS;AACT,iCAAmB;AAAA,YACrB;AAAA,UACF;AAAA,QACF,OAAO;AAKL,cAAI,MAAM,OAAO;AACjB,cAAI,UAAU,IAAI,QACd,UAAU,IAAI,mBACd,oBAAoB,YAAY,WAAW;AAC7C,yBAAa,sBAAsB,MAAM;AAAA,UAC3C;AAAA,QACF;AAIA,YAAI,YAAY;AACd,6BAAmB,wBAAwB,YAAY,gBAAgB;AAAA,QACzE;AACA,YAAI,CAAC;AAAkB;AACvB,iBAAS,UAAU,cAAc,MAAM;AAAA,MACzC;AACA,aAAO;AAAA,IACT;AAQA,IAAAC,sBAAqB,UAAU,eAAe,WAAW;AACvD,UAAI;AACJ,UAAI,KAAK,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG;AAClC,mBAAW,sBAAsB,KAAK,IAAI;AAAA,MAC5C,OAAO;AAEL,YAAI,MAAM,MAAM,KAAK,IAAI,IAAI,KAAK,OAAOD;AACzC,YAAI,OAAO,IAAI;AACf,YAAI,OAAO,IAAI;AACf,mBAAW;AAAA,UACT,KAAK;AAAA,UACL,MAAM;AAAA,UACN,OAAO,KAAK,eAAe,KAAK;AAAA,UAChC,OAAO,KAAK,eAAe,KAAK;AAAA,UAChC,QAAQ,KAAK,gBAAgB,KAAK;AAAA,UAClC,QAAQ,KAAK,gBAAgB,KAAK;AAAA,QACpC;AAAA,MACF;AACA,aAAO,KAAK,wBAAwB,QAAQ;AAAA,IAC9C;AASA,IAAAC,sBAAqB,UAAU,0BAA0B,SAAS,MAAM;AACtE,UAAI,UAAU,KAAK,kBAAkB,IAAI,SAAS,QAAQ,GAAG;AAC3D,eAAO,OAAO,QAAQ,OAAO,OAAO,QAChC,OAAO,SAAS,IAAI,IAAI,KAAK,QAAQ,KAAK,UAAU;AAAA,MAC1D,CAAC;AACD,UAAI,UAAU;AAAA,QACZ,KAAK,KAAK,MAAM,QAAQ,CAAC;AAAA,QACzB,OAAO,KAAK,QAAQ,QAAQ,CAAC;AAAA,QAC7B,QAAQ,KAAK,SAAS,QAAQ,CAAC;AAAA,QAC/B,MAAM,KAAK,OAAO,QAAQ,CAAC;AAAA,MAC7B;AACA,cAAQ,QAAQ,QAAQ,QAAQ,QAAQ;AACxC,cAAQ,SAAS,QAAQ,SAAS,QAAQ;AAE1C,aAAO;AAAA,IACT;AAaA,IAAAA,sBAAqB,UAAU,uBAC3B,SAAS,UAAU,UAAU;AAI/B,UAAI,WAAW,YAAY,SAAS,iBAChC,SAAS,qBAAqB,IAAI;AACtC,UAAI,WAAW,SAAS,iBACpB,SAAS,qBAAqB,IAAI;AAGtC,UAAI,aAAa;AAAU;AAE3B,eAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,YAAI,YAAY,KAAK,WAAW,CAAC;AAIjC,YAAI,aAAa,YAAY,aAAa,YACtC,YAAY,aAAa,YAAY,UAAU;AACjD,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAQA,IAAAA,sBAAqB,UAAU,eAAe,WAAW;AACvD,aAAO,CAAC,KAAK,QAAQ,aAAaD,WAAU,KAAK,IAAI;AAAA,IACvD;AASA,IAAAC,sBAAqB,UAAU,sBAAsB,SAAS,QAAQ;AACpE,UAAI,UACD,KAAK,SAAS,KAAK,KAAK,iBAAiB,KAAK,SAAUD;AAC3D,aACE,aAAa,SAAS,MAAM,MAC3B,CAAC,KAAK,QAAQ,WAAW,OAAO;AAAA,IAErC;AAQA,IAAAC,sBAAqB,UAAU,oBAAoB,WAAW;AAC5D,UAAI,SAAS,QAAQ,IAAI,IAAI,GAAG;AAC9B,iBAAS,KAAK,IAAI;AAAA,MACpB;AAAA,IACF;AAOA,IAAAA,sBAAqB,UAAU,sBAAsB,WAAW;AAC9D,UAAI,QAAQ,SAAS,QAAQ,IAAI;AACjC,UAAI,SAAS;AAAI,iBAAS,OAAO,OAAO,CAAC;AAAA,IAC3C;AAQA,aAAS,MAAM;AACb,aAAO,OAAO,eAAe,YAAY,OAAO,YAAY,IAAI;AAAA,IAClE;AAWA,aAAS,SAAS,IAAI,SAAS;AAC7B,UAAI,QAAQ;AACZ,aAAO,WAAY;AACjB,YAAI,CAAC,OAAO;AACV,kBAAQ,WAAW,WAAW;AAC5B,eAAG;AACH,oBAAQ;AAAA,UACV,GAAG,OAAO;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAWA,aAAS,SAAS,MAAM,OAAO,IAAI,gBAAgB;AACjD,UAAI,OAAO,KAAK,oBAAoB,YAAY;AAC9C,aAAK,iBAAiB,OAAO,IAAI,kBAAkB,KAAK;AAAA,MAC1D,WACS,OAAO,KAAK,eAAe,YAAY;AAC9C,aAAK,YAAY,OAAO,OAAO,EAAE;AAAA,MACnC;AAAA,IACF;AAWA,aAAS,YAAY,MAAM,OAAO,IAAI,gBAAgB;AACpD,UAAI,OAAO,KAAK,uBAAuB,YAAY;AACjD,aAAK,oBAAoB,OAAO,IAAI,kBAAkB,KAAK;AAAA,MAC7D,WACS,OAAO,KAAK,eAAe,YAAY;AAC9C,aAAK,YAAY,OAAO,OAAO,EAAE;AAAA,MACnC;AAAA,IACF;AAUA,aAAS,wBAAwB,OAAO,OAAO;AAC7C,UAAI,MAAM,KAAK,IAAI,MAAM,KAAK,MAAM,GAAG;AACvC,UAAI,SAAS,KAAK,IAAI,MAAM,QAAQ,MAAM,MAAM;AAChD,UAAI,OAAO,KAAK,IAAI,MAAM,MAAM,MAAM,IAAI;AAC1C,UAAI,QAAQ,KAAK,IAAI,MAAM,OAAO,MAAM,KAAK;AAC7C,UAAI,QAAQ,QAAQ;AACpB,UAAI,SAAS,SAAS;AAEtB,aAAQ,SAAS,KAAK,UAAU,KAAM;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,KAAK;AAAA,IACP;AAQA,aAAS,sBAAsB,IAAI;AACjC,UAAI;AAEJ,UAAI;AACF,eAAO,GAAG,sBAAsB;AAAA,MAClC,SAAS,KAAP;AAAA,MAGF;AAEA,UAAI,CAAC;AAAM,eAAO,aAAa;AAG/B,UAAI,EAAE,KAAK,SAAS,KAAK,SAAS;AAChC,eAAO;AAAA,UACL,KAAK,KAAK;AAAA,UACV,OAAO,KAAK;AAAA,UACZ,QAAQ,KAAK;AAAA,UACb,MAAM,KAAK;AAAA,UACX,OAAO,KAAK,QAAQ,KAAK;AAAA,UACzB,QAAQ,KAAK,SAAS,KAAK;AAAA,QAC7B;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAQA,aAAS,eAAe;AACtB,aAAO;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF;AAUA,aAAS,cAAc,MAAM;AAE3B,UAAI,CAAC,QAAQ,OAAO,MAAM;AACxB,eAAO;AAAA,MACT;AAKA,aAAO;AAAA,QACL,KAAK,KAAK;AAAA,QACV,GAAG,KAAK;AAAA,QACR,QAAQ,KAAK;AAAA,QACb,MAAM,KAAK;AAAA,QACX,GAAG,KAAK;AAAA,QACR,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,MACf;AAAA,IACF;AAUA,aAAS,sBAAsB,oBAAoB,wBAAwB;AACzE,UAAI,MAAM,uBAAuB,MAAM,mBAAmB;AAC1D,UAAI,OAAO,uBAAuB,OAAO,mBAAmB;AAC5D,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,QAAQ,uBAAuB;AAAA,QAC/B,OAAO,uBAAuB;AAAA,QAC9B,QAAQ,MAAM,uBAAuB;AAAA,QACrC,OAAO,OAAO,uBAAuB;AAAA,MACvC;AAAA,IACF;AAUA,aAAS,aAAa,QAAQ,OAAO;AACnC,UAAI,OAAO;AACX,aAAO,MAAM;AACX,YAAI,QAAQ;AAAQ,iBAAO;AAE3B,eAAO,cAAc,IAAI;AAAA,MAC3B;AACA,aAAO;AAAA,IACT;AASA,aAAS,cAAc,MAAM;AAC3B,UAAI,SAAS,KAAK;AAElB,UAAI,KAAK;AAAA,MAA2B,KAAK,QAAQD,WAAU;AAEzD,eAAO,gBAAgB,IAAI;AAAA,MAC7B;AAGA,UAAI,UAAU,OAAO,cAAc;AACjC,iBAAS,OAAO,aAAa;AAAA,MAC/B;AAEA,UAAI,UAAU,OAAO,YAAY,MAAM,OAAO,MAAM;AAElD,eAAO,OAAO;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAOA,aAAS,MAAM,MAAM;AACnB,aAAO,QAAQ,KAAK,aAAa;AAAA,IACnC;AAIA,WAAO,uBAAuBC;AAC9B,WAAO,4BAA4B;AAAA,EAEnC,GAAE;;;ACn/BF,MAAqB,WAArB,MAA6B;IAIzB,YAAY,QAAiB,UAAoB;AAC7C,WAAK,SAAS;AACd,WAAK,WAAW,IAAI,qBAAqB,CAAC,YAAW;AACjD,aAAK,mBAAmB,SAAS,QAAQ;MAC7C,CAAC;IAGL;IAEA,UAAO;AACH,WAAK,SAAS,QAAQ,KAAK,MAAM;IACrC;IAEA,YAAS;AACL,WAAK,SAAS,UAAU,KAAK,MAAM;IACvC;IAEA,aAAU;AACN,WAAK,SAAS,WAAU;IAC5B;IAEA,mBACI,SACA,UAAoB;AAEpB,cAAQ,QAAQ,CAAC,WAAU;AACvB,YAAI,OAAO,gBAAgB;AACvB,eAAK,UAAS;AACd,mBAAQ;;MAEhB,CAAC;IACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCJ,MAAqB,mBAArB,cAA8C,YAAW;IAIrD,cAAA;AACI,YAAK;AACL,WAAK,YAAY,KAAK,cAAc,eAAe;AACnD,WAAK,eAAe;IACxB;IAEA,oBAAiB;AACb,WAAK,eAAe,KAAK,SAAQ;IACrC;IAEM,mBACF,QACA,QACA,SAA+B;;AAE/B,cAAM,UAAU,OAAO,QAAQ,OAAO;AACtC,aAAK,QAAQ,QAAQ,MAAM;AAC3B,YAAI,QAAQ;AACR,iBAAO,WAAW;;AAGtB,cAAM,WAAW,QAAQ,IAAI,CAAO,CAAC,SAAS,OAAO,GAAG,UAASG,WAAA,MAAA,QAAA,QAAA,aAAA;AAC7D,cAAI;AACA,kBAAM,OAAO,MAAM,oBAAY,MAC3B,sBAAsB,kBAAkB,SAAS;AAErD,iBAAK,gBAAgB,MAAM,SAAS,KAAK;mBACpC,OAAP;AACE,oBAAQ,MAAM,KAAK;AACnB,kBAAM,IAAI,MAAM,kCAAkC;;QAE1D,CAAC,CAAA;AAED,YAAI;AACA,gBAAM,QAAQ,IAAI,QAAQ;AAC1B,eAAK,cAAa;iBACb,OAAP;AACE,kBAAQ,MAAM,yCAAyC;;MAU/D,CAAC;;IAES,gBACN,MACA,SACA,OAAa;AAEb,YAAM,EAAE,SAAS,cAAa,IAAK;AACnC,YAAM,WAAW,YAAY,MAAM,iBAAO;AAC1C,UAAI,iBAAiB;AACrB,UAAI,YAAY,KAAK;AACjB,yBACI,kBAAkB,MAAM,+BAAW;;AAE3C,YAAM,KAAK,KAAK,iBAAiB,eAAe,EAAE,KAAK;AAEvD,YAAM,SAAS,GAAG,cAAc,OAAO;AACvC,UAAI,QAAQ;AACR,eAAO,cAAc,UAAK;;AAE9B,YAAM,YAAY,GAAG,cAAc,UAAU;AAC7C,UAAI,WAAW;AACX,kBAAU,cAAc;;AAE5B,YAAM,kBAAkB,GAAG,cACvB,gBAAgB;AAEpB,UAAI,iBAAiB;AACjB,wBAAgB,cAAc;;IAEtC;IAEU,QAAQ,MAAY;AAC1B,UAAI,KAAK;AACT,aAAO,OAAO,GAAG;AACb,cAAM,KAAK;AACX;;AAEJ,WAAK,UAAU,YAAY;IAC/B;IAEU,gBAAa;AACnB,YAAM,eAAe,KAAK,iBACtB,kCAAkC;AAEtC,mBAAa,QAAQ,CAAC,OAAM;AACxB,eAAO,GAAG,QAAQ;MACtB,CAAC;IACL;IAEU,WAAQ;AACd,aAAO;;;;;IAKX;;;;AC7GJ,MAAqB,YAArB,MAA8B;IAA9B,cAAA;AACY,WAAA,cAAwC,CAAA;IAepD;IAbI,UAAU,UAAgC;AACtC,WAAK,YAAY,KAAK,QAAQ;IAClC;IAEA,YAAY,UAAgC;AACxC,WAAK,cAAc,KAAK,YAAY,OAChC,CAAC,eAAe,eAAe,QAAQ;IAE/C;IAEA,OAAO,SAAW;AACd,WAAK,YAAY,QAAQ,CAAC,aAAa,SAAS,OAAO,CAAC;IAC5D;;;;ACbJ,MAAM,YAAY,CAAI,QAAa;AAC/B,WAAO,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;EACzC;AAEA,MAAM,eAAe;AAErB,MAAM,eAA2B;IAC7B,WAAW,CAAA;IACX,SAAS,CAAA;IACT,UAAU,CAAA;IACV,cAAc,CAAA;;AAGX,MAAM,aAAa;IACtB,iBAAiB,IAAI,UAAS;IAE9B,gBAAgB,IAAI,UAAS;IAC7B,oBAAoB,IAAI,UAAS;IAEjC,cAAc,IAAI,UAAS;IAC3B,oBAAoB,IAAI,UAAS;;AAGrC,MAAM,YAAN,MAAe;IAGX,cAAA;AACI,WAAK,QAAQ,KAAK,YAAW,KAAM,UAAU,YAAY;IAC7D;IAEQ,cAAW;AACf,UAAI;AACA,cAAM,cAAc,aAAa,QAAQ,YAAY;AACrD,eAAO,cAAc,KAAK,MAAM,WAAW,IAAI;eAC1C,OAAP;AACE,gBAAQ,MAAM,KAAK;AACnB,cAAM,IAAI,MAAM,wCAAwC;;IAEhE;IAEQ,WAAW,UAAoB;AACnC,UAAI;AACA,qBAAa,QAAQ,cAAc,KAAK,UAAU,QAAQ,CAAC;eACtD,OAAP;AACE,gBAAQ,MAAM,KAAK;;IAE3B;IAEA,QAAK;AACD,WAAK,QAAQ,UAAU,YAAY;AACnC,WAAK,UAAU,UAAU,YAAY;IACzC;IAEA,IAAI,UAAO;AACP,aAAO,UAAU,KAAK,KAAK;IAC/B;IAEA,IAAI,QAAQ,UAAQ;AAChB,WAAK,WAAW,QAAQ;AACxB,WAAK,QAAQ;IACjB;IAEA,IAAI,WAAQ;AACR,aAAO,UAAU,KAAK,MAAM,QAAQ;IACxC;IAEA,IAAI,SAAS,aAAW;AACpB,YAAM,WAAW,KAAK;AACtB,eAAS,WAAW;AACpB,WAAK,UAAU;IACnB;IAEA,IAAI,eAAY;AACZ,aAAO,UAAU,KAAK,MAAM,YAAY;IAC5C;IACA,IAAI,aAAa,SAAO;AACpB,YAAM,WAAW,KAAK;AACtB,eAAS,eAAe;AACxB,WAAK,UAAU;IACnB;IAEA,IAAI,YAAS;AACT,aAAO,UAAU,KAAK,MAAM,SAAS;IACzC;IAEA,IAAI,UAAU,YAAU;AACpB,YAAM,WAAW,KAAK;AACtB,eAAS,YAAY;AACrB,WAAK,UAAU;IACnB;IAEA,IAAI,UAAO;AACP,aAAO,UAAU,KAAK,MAAM,OAAO;IACvC;IACA,IAAI,QAAQ,YAAU;AAClB,YAAM,WAAW,KAAK;AACtB,eAAS,UAAU;AACnB,WAAK,UAAU;IACnB;IAEA,YAAY,MAAY;AACpB,YAAM,cAAc,KAAK;AACzB,kBAAY,IAAI,IAAI,CAAA;AACpB,WAAK,WAAW;AAEhB,iBAAW,eAAe,OAAO,EAAE,MAAM,OAAO,KAAI,CAAE;IAC1D;IAEA,gBAAgB,MAAY;AACxB,YAAM,kBAAkB,KAAK;AAC7B,sBAAgB,KAAK,IAAI;AACzB,WAAK,eAAe;IACxB;IAEA,YAAY,MAAY;AACpB,aAAO,QAAQ,KAAK;IACxB;IAEA,eAAe,UAAkB,SAAe;AAC5C,YAAM,cAAc,KAAK;AACzB,kBAAY,OAAO,IAAI,YAAY,QAAQ;AAC3C,aAAO,YAAY,QAAQ;AAC3B,WAAK,WAAW;AAEhB,WAAK,mBAAmB,UAAU,OAAO;AAEzC,iBAAW,eAAe,OAAO,EAAE,MAAM,UAAU,UAAU,QAAO,CAAE;IAC1E;IAEA,mBAAmB,UAAkB,SAAe;AAChD,YAAM,kBAAkB,KAAK;AAC7B,YAAM,QAAQ,KAAK,kBAAkB,QAAQ;AAC7C,sBAAgB,KAAK,IAAI;AACzB,WAAK,eAAe;IACxB;IAEA,kBAAkB,MAAY;AAC1B,YAAM,kBAAkB,KAAK;AAC7B,YAAM,QAAQ,gBAAgB,QAAQ,IAAI;AAC1C,aAAO;IACX;IAEA,eAAe,MAAY;AACvB,YAAM,eAAe,KAAK;AAC1B,aAAO,aAAa,IAAI;AACxB,WAAK,WAAW;AAEhB,iBAAW,eAAe,OAAO,EAAE,MAAM,UAAU,KAAI,CAAE;IAC7D;IAEA,kBAAkB,MAAY;AAC1B,YAAM,kBAAkB,KAAK;AAC7B,YAAM,QAAQ,gBAAgB,QAAQ,IAAI;AAC1C,sBAAgB,OAAO,OAAO,CAAC;AAC/B,WAAK,eAAe;AACpB,aAAO;IACX;IAEA,eAAe,YAAoB,WAAiB;AAChD,YAAM,UAAU,KAAK;AACrB,YAAM,eAAe,QAAQ,QAAQ,UAAU;AAC/C,YAAM,cAAc,QAAQ,QAAQ,SAAS;AAC7C,cAAQ,WAAW,IAAI;AACvB,cAAQ,YAAY,IAAI;AAExB,WAAK,eAAe;AAEpB,iBAAW,eAAe,OAAO;QAC7B,MAAM;QACN;QACA;OACH;IACL;IAEA,kBAAkB,MAAc,MAAY;AACxC,YAAM,cAAc,KAAK;AACzB,kBAAY,IAAI,EAAE,QAAQ,IAAI;AAC9B,WAAK,WAAW;AAEhB,iBAAW,mBAAmB,OAAM;IACxC;IAEA,kBAAkB,MAAc,MAAY;AACxC,aAAO,KAAK,SAAS,IAAI,EAAE,SAAS,IAAI;IAC5C;IAEA,qBAAqB,MAAc,MAAY;AAC3C,YAAM,cAAc,KAAK;AACzB,YAAM,QAAQ,YAAY,IAAI,EAAE,QAAQ,IAAI;AAC5C,UAAI,UAAU,IAAI;AACd,oBAAY,IAAI,EAAE,OAAO,OAAO,CAAC;AACjC,aAAK,WAAW;;AAGpB,iBAAW,mBAAmB,OAAM;IACxC;IAEA,WAAW,MAAc,MAAY;AACjC,YAAM,aAAa,KAAK;AACxB,iBAAW,IAAI,IAAI;AACnB,WAAK,YAAY;IACrB;IAEA,cAAc,MAAY;AACtB,YAAM,aAAa,KAAK;AACxB,aAAO,WAAW,IAAI;AACtB,WAAK,YAAY;IACrB;IAEA,WAAW,MAAY;AACnB,aAAO,QAAQ,KAAK;IACxB;IAEA,UAAU,MAAY;AAClB,YAAM,YAAY,KAAK;AACvB,gBAAU,IAAI,IAAI,CAAA;AAClB,WAAK,UAAU;AAEf,iBAAW,aAAa,OAAM;IAClC;IAEA,aAAa,MAAY;AACrB,YAAM,aAAa,KAAK;AACxB,aAAO,WAAW,IAAI;AACtB,WAAK,UAAU;AAEf,iBAAW,aAAa,OAAM;IAClC;IAEA,gBACI,YACA,YACA,YAAkB;AAElB,YAAM,aAAa,KAAK;AACxB,iBAAW,UAAU,EAAE,UAAU,IAAI;AACrC,WAAK,UAAU;AAEf,iBAAW,mBAAmB,OAAM;IACxC;IAEA,mBAAmB,YAAoB,YAAkB;AACrD,YAAM,aAAa,KAAK;AACxB,aAAO,WAAW,UAAU,EAAE,UAAU;AACxC,WAAK,UAAU;AAEf,iBAAW,mBAAmB,OAAM;IACxC;;AAGJ,MAAM,YAAY,IAAI,UAAS;AAE/B,MAAA,oBAAe;;;AC5Pf,MAAqB,SAArB,cAAoC,YAAW;IAG3C,cAAA;AACI,YAAK;AAEL,WAAK,QAAQ;QACT;QACA;QACA;QACA;QACA;;AAGJ,WAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI;IACvD;IAEA,oBAAiB;AACb,WAAK,OAAM;AACX,WAAK,gBAAe;AAEpB,iBAAW,mBAAmB,UAAU,KAAK,cAAc;IAC/D;IAEA,IAAI,WAAQ;AACR,aAAO,OAAO,OAAO,kBAAU,QAAQ,EAAE,OACrC,CAAC,KAAK,iBAA2B,MAAM,aAAa,QACpD,CAAC;IAET;IAEU,SAAM;AACZ,YAAM,QAAQ,KAAK;AACnB,WAAK,YAAY;;6CAEoB,MAAM,CAAC;6CACP,MAAM,CAAC,8CAA+B,KAAK;6CAC3C,MAAM,CAAC;6CACP,MAAM,CAAC;6CACP,MAAM,CAAC;;IAEhD;IAEU,kBAAe;AACrB,YAAM,MAAM,KAAK,MAAM,QAAQ,SAAS,SAAS,QAAQ;AACzD,UAAI,OAAO;AAAG,aAAK,iBAAiB,GAAG,EAAE,GAAG,EAAE,eAAe;IACjE;IAEU,iBAAc;AACpB,YAAM,SAAS,KAAK,cAAc,OAAO;AACzC,aAAO,cAAc,KAAK,SAAS,SAAQ;IAC/C;;;;ACnDJ,MAAqB,mBAArB,cAA8C,YAAW;IAIrD,cAAA;AACI,YAAK;AAqDD,WAAA,qBAAqB,CACzB,WACA,UACA,SACA;AACA,cAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,cAAM,WAAW,KAAK,eAAe,UAAU,IAAI;AACnD,cAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,aAAK,cAAc;AAEnB,cAAM,YAAY,QAAQ;AAC1B,cAAM,YAAY,IAAI;AAEtB,kBAAU,YAAY,KAAK;AAC3B,eAAO;MACX;AAlEI,WAAK,OAAO,KAAK,QAAO;AACxB,WAAK,SAAS;AAEd,WAAK,kBAAkB,KAAK,gBAAgB,KAAK,IAAI;IACzD;IAEA,oBAAiB;AACb,WAAK,OAAM;IACf;IAEU,SAAM;;AACZ,YAAM,SAAS,KAAK,aAAY;AAChC,YAAM,YAAY,KAAK,gBAAe;AAEtC,WAAK,SAAS;AAEd,WAAK,YAAY,SAAS;AAC1B,WAAK,YAAY,MAAM;AAEvB,OAAA,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,iBAAiB,SAAS,KAAK,eAAe;IAC/D;IAEA,eAAY;AACR,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,YAAY;AACnB,aAAO,cAAc;AACrB,aAAO;IACX;IAEA,kBAAe;AACX,YAAM,KAAK,KAAK,cAAc,WAAW;AACzC,SAAG,SAAS,CAAC,GAAG;IACpB;IAEQ,UAAO;AACX,YAAM,cAAc,KAAK,QAAQ,aAAa;AAC9C,aAAO,eAAe,YAAY,QAAQ,OACpC,YAAY,QAAQ,OACpB;IACV;IAEQ,kBAAe;AACnB,YAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,gBAAU,YAAY;AACtB,gBAAU,SAAS;AACnB,wBAAU,aAAa,QAAQ,CAAC,aAC5B,KAAK,mBAAmB,WAAW,UAAU,KAAK,QAAQ,EAAE,CAAC;AAEjE,aAAO;IACX;IAmBQ,eAAe,UAAkB,MAAY;AACjD,YAAM,WAAW,SAAS,cAAc,OAAO;AAC/C,eAAS,OAAO;AAChB,UAAI,kBAAU,kBAAkB,UAAU,IAAI,GAAG;AAC7C,iBAAS,UAAU;;AAGvB,eAAS,iBAAiB,UAAU,MAChC,KAAK,SAAS,UAAU,UAAU,IAAI,CAAC;AAG3C,aAAO;IACX;IAEQ,SACJ,UACA,UACA,MAAY;AAEZ,YAAM,mBAAmB,kBAAU,kBAAkB,UAAU,IAAI;AAEnE,UAAI,kBAAkB;AAClB,0BAAU,qBAAqB,UAAU,IAAI;aAC1C;AACH,0BAAU,kBAAkB,UAAU,IAAI;;AAG9C,eAAS,UAAU,CAAC;IACxB;;;;ACzGJ,MAAqB,YAArB,cAAuC,YAAW;IAI9C,cAAA;AACI,YAAK;AAEL,WAAK,aAAa,SAAS,cAAc,KAAK;AAC9C,WAAK,WAAW,YAAY;AAE5B,WAAK,eAAe,SAAS,cAAc,KAAK;AAChD,WAAK,aAAa,YAAY;AAE9B,WAAK,WAAW,UAAU,KAAK,iBAAiB,KAAK,IAAI;IAC7D;;IAGA,IAAI,KAAK,YAA0B;AAC/B,YAAM,WAAW,KAAK,UAAU,UAAU;AAE1C,UAAI,KAAK,QAAQ,WAAW,UAAU;AAClC,aAAK,QAAQ,SAAS;AACtB,aAAK,OAAM;;IAEnB;IAEA,oBAAiB;AACb,UAAI,CAAC,KAAK,WAAW,OAAO,KAAK,QAAQ,QAAQ;AAC7C,aAAK,OAAM;;IAEnB;;IAGQ,SAAM;AACV,YAAM,OAA8B,KAAK,QAAQ,SAC3C,KAAK,MAAM,KAAK,QAAQ,MAAM,IAC9B;AAEN,UAAI,QAAQ,kBAAkB,QAAQ,cAAc,MAAM;AACtD,cAAM,EAAE,cAAc,SAAQ,IAAK;AACnC,aAAK,WAAW,MAAM;AACtB,aAAK,WAAW,MAAM;AAEtB,aAAK,aAAa,YAAY,KAAK,UAAU;AAC7C,aAAK,YAAY,KAAK,YAAY;;IAE1C;IAEQ,mBAAgB;AACpB,WAAK,QAAQ,OAAO;AACpB,cAAQ,MAAM,yBAAyB,KAAK,WAAW,KAAK;AAC5D,WAAK,WAAW,OAAM;AACtB,UAAI,CAAC,KAAK,aAAa,cAAa,GAAI;AACpC,aAAK,aAAa,OAAM;;IAEhC;;;;ACvDG,MAAM,mBAAmB;;;ACGhC,MAAqB,YAArB,cAAuC,YAAW;IAG9C,cAAA;AACI,YAAK;AAHD,WAAA,uBAA6D;IAIrE;IAEA,oBAAiB;AACb,WAAK,eAAc;AACnB,WAAK,uBAAuB,KAAK,WAAW,KAAK,IAAI;AACrD,aAAO,iBAAiB,YAAY,KAAK,oBAAoB;IACjE;IAEA,uBAAoB;AAChB,UAAI,KAAK,sBAAsB;AAC3B,eAAO,oBAAoB,YAAY,KAAK,oBAAoB;;IAExE;IAEQ,aAAU;AACd,WAAK,eAAc;IACvB;IAEQ,iBAAc;AAClB,YAAM,SAAS,IAAI,gBAAgB,SAAS,MAAM;AAClD,YAAM,UAAU,OAAO,IAAI,SAAS;AACpC,YAAM,OAAO,OAAO,IAAI,MAAM,KAAK;AACnC,YAAM,gBAAgB,SAAS,cAC3B,mCAAmC;AAGvC,UAAI,WAAW,MAAM;AACjB,mCAAmB,SAAS,kBAAkB,EAAE,SAAS,KAAI,CAAE;AAC/D,sBAAc,QAAQ;;IAE9B;;;;ACnCJ,MAAqB,cAArB,cAAyC,YAAW;IAIhD,cAAA;AACI,YAAK;AAJD,WAAA,OAA+B;AAC/B,WAAA,QAAiC;AA2BjC,WAAA,oBAAoB,MAAK;;AAC7B,cAAM,cAAc,IAAI,MAAM,QAAQ;AACtC,SAAA,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,WAAW;MACxC;AAEQ,WAAA,WAAW,CAAC,UAAgB;;AAChC,cAAM,eAAc;AAEpB,YAAI,CAAC,KAAK;AAAO;AAEjB,cAAM,UAAU,KAAK,MAAM;AAC3B,cAAM,QAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK;AAE7B,aAAK,MAAM,MAAK;AAEhB,YAAI,WAAW,MAAM;AACjB,gBAAM,MAAM,IAAI,IAAI,OAAO,SAAS,IAAI;AAExC,cAAI,aAAa,IAAI,WAAW,OAAO;AACvC,cAAI,aAAa,IAAI,QAAQ,IAAI;AAEjC,iBAAO,QAAQ,UAAU,CAAA,GAAI,IAAI,IAAI,SAAQ,CAAE;AAE/C,qCAAmB,SAAS,kBAAkB,EAAE,SAAS,KAAI,CAAE;;MAEvE;AAhDI,WAAK,WAAU;IACnB;IAEA,oBAAiB;;AACb,OAAA,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,iBAAiB,UAAU,KAAK,QAAQ;AAEnD,YAAM,UAAS,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;AAC1B,aAAO,QAAQ,CAAC,UAA2B;AACvC,cAAM,iBAAiB,UAAU,KAAK,iBAAiB;MAC3D,CAAC;IACL;IAEA,uBAAoB;;AAChB,OAAA,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,oBAAoB,UAAU,KAAK,QAAQ;IAC1D;IAEQ,aAAU;AACd,WAAK,OAAO,KAAK,cAAc,MAAM;AACrC,WAAK,QAAQ,KAAK,cACd,sBAAsB;IAE9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BJ,MAAqB,WAArB,cAAsC,YAAW;IAQ7C,cAAA;AACI,YAAK;AAEL,WAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI;AACjD,WAAK,uBAAuB,KAAK,qBAAqB,KAAK,IAAI;IACnE;IAEA,oBAAiB;AACb,WAAK,oBAAoB,KAAK,cAC1B,cAAc;AAElB,WAAK,gBAAgB,KAAK,cAAc,QAAQ;AAChD,WAAK,cAAa;AAElB,iCAAmB,IACf,kBACA,KAAK,oBAAqC;IAElD;IAEA,uBAAoB;;AAChB,OAAA,KAAA,KAAK,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE,WAAU;AAEzB,iCAAmB,OACf,kBACA,KAAK,oBAAqC;IAElD;IAEQ,gBAAa;AACjB,YAAM,SAAS,KAAK,cAAc,UAAU;AAC5C,WAAK,WAAW,IAAI,SAAS,QAAQ,KAAK,aAAa;IAC3D;IAEQ,qBACJ,OAGE;AAEF,YAAM,EAAE,SAAS,KAAI,IAAK,MAAM;AAEhC,WAAK,UAAU;AACf,WAAK,eAAe;AACpB,WAAK,YAAY;AAIjB,WAAK,UAAU,KAAK,YAAW,IAAK,KAAK,mBAAkB;IAC/D;IAEQ,cAAW;AACf,WAAK,cAAc,SAAS;AAC5B,WAAK,cAAc,YAAY;AAC/B,WAAK,cAAa;IACtB;IAEQ,qBAAkB;AACtB,WAAK,kBAAkB,SAAS;AAChC,WAAK,cAAc,SAAS;IAChC;IAEc,gBAAa;;AACvB,YAAI,CAAC,KAAK,WAAW,CAAC,KAAK;AAAc;AAEzC,cAAM,iBAAiB,mBAAmB,KAAK,OAAO;AACtD,cAAM,YAAY,8BAA8B,0BAA0B,YACtE,KAAK,YAAY,UACZ,KAAK;AAId,YAAI;AACA,gBAAM,OAAO,MAAM,oBAAY,MAC3B,SAAS;AAEb,eAAK,eAAe,IAAI;iBACnB,OAAP;AACE,cAAI,iBAAiB,OAAO;AACxB,oBAAQ,MAAM,yBAAyB,MAAM,SAAS;iBACnD;AACH,oBAAQ,MAAM,8BAA8B;;;MAGxD,CAAC;;IAEO,eAAe,MAA4B;;AAC/C,YAAM,EAAE,OAAO,SAAS,MAAK,IAAK;AAElC,UAAI,UAAU,GAAG;AACb,aAAK,cAAc,UAAU;AAC7B;;AAGJ,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO,OAAO;AACrC,WAAK,gBAAgB,KAAK;AAC1B,WAAK,kBAAkB,SAAS;AAEhC,UAAI,UAAU,KAAK;AAAW,SAAA,KAAA,KAAK,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE,QAAO;IACxD;IAEQ,kBAAkB,OAAe,SAAe;AACpD,YAAM,MAAM;QACR,SAAS,GAAG,KAAK;QACjB,QAAQ,GAAG,KAAK,UAAU,eAAc;QACxC,OAAO,GAAG,MAAM,eAAc;QAC9B,SAAS,GAAG;;AAGhB,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC5C,cAAM,UAAU,KAAK,kBAAkB,cACnC,MAAM,KAAK;AAEf,gBAAQ,cAAc;;IAE9B;IAEQ,gBAAgB,OAAoB;AACxC,YAAM,WAAW,IAAI,iBAAgB;AACrC,YAAM,WAAW,SAAS,cACtB,eAAe;AAGnB,YAAM,QAAQ,CAAC,MAAM,UAAS;AAC1B,cAAM,aAAa,SAAS,QAAQ,UAAU,IAAI;AAClD,cAAM,WAAW,WAAW,cAAc,WAAW;AACrD,iBAAS,WAAW;AACpB,iBAAS,QAAQ,SAAS,KAAK,YAAY,OAAO,SAAQ;AAC1D,iBAAS,YAAY,UAAU;MACnC,CAAC;AAED,WAAK,cAAc,YAAY,QAAQ;IAC3C;IAEQ,cAAc,MAAY;AAC9B,YAAM,kBAAkB,SAAS,cAC7B,OAAO,MAAM;AAEjB,UAAI,CAAC;AAAiB;AAEtB,WAAK,cAAc,YAAY;AAC/B,WAAK,cAAc,YAAY,gBAAgB,QAAQ,UAAU,IAAI,CAAC;IAC1E;;;;;;;;;;;;;;;;ACpJJ,MAAqB,WAArB,cAAsC,YAAW;IAI7C,cAAA;AACI,YAAK;AAJD,WAAA,oBAA8C;AAsF9C,WAAA,uBAAuB,MAAK;AAChC,cAAM,OAAO,KAAK,QAAQ,QAAQ;AAClC,cAAM,kBACF,KAAK,cAAgC,oBAAoB;AAC7D,4BAAe,QAAf,oBAAe,SAAA,SAAf,gBAAiB,mBACb,KAAK,mBACL,MACA,kBAAU,SAAS;MAE3B;AA1FI,WAAK,wBAAuB;IAChC;IAEA,oBAAiB;AACb,WAAK,iBAAgB;IACzB;IAEA,uBAAoB;AAChB,WAAK,oBAAmB;IAC5B;IAEQ,0BAAuB;;AAC3B,WAAK,oBAAoB,KAAK,cAAc,iBAAiB;AAC7D,OAAA,KAAA,KAAK,uBAAiB,QAAA,OAAA,SAAA,SAAA,GAAE,iBACpB,SACA,KAAK,oBAAoB;IAEjC;IAEQ,sBAAmB;;AACvB,OAAA,KAAA,KAAK,uBAAiB,QAAA,OAAA,SAAA,SAAA,GAAE,oBACpB,SACA,KAAK,oBAAoB;IAEjC;IAEQ,mBAAgB;AACpB,UAAI,CAAC,KAAK,UAAU;AAChB,gBAAQ,MAAM,2BAA2B;AACzC;;AAGJ,WAAK,mBAAmB,KAAK,QAAQ;IACzC;IAEQ,mBAAmB,UAAqB;AAC5C,YAAM,EACF,OACA,MACA,MACA,QAAO,IAEP,UADG,YAAS,OACZ,UANE,CAAA,SAAA,QAAA,QAAA,SAAA,CAML;AAED,YAAM,QAAQ,SAAS;AAEvB,YAAM,YAAY,KAAK,cAAyB,YAAY;AAC5D,UAAI,WAAW;AACX,kBAAU,QAAQ,SAAS,KAAK,UAAU;UACtC,cAAc;UACd,UAAU;SACb;;AAGL,YAAM,WAAW,KAAK,cAAc,OAAO;AAC3C,UAAI;AAAU,iBAAS,OAAO;AAE9B,YAAM,OAAO,GAAG,QAAQ,UAAU,GAAG,CAAC,KAAK,QAAQ,UAC/C,GACA,CAAC,KACA,QAAQ,UAAU,CAAC;AACxB,YAAM,cAAc,KAAK,cAAc,UAAU;AACjD,UAAI;AAAa,oBAAY,cAAc;AAE3C,aAAO,QAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC/C,YAAI,QAAQ,eAAe;AACvB,gBAAM,WACF,KAAK,cAA+B,kBAAkB;AAC1D,cAAI;AAAU,qBAAS,OAAO;eAC3B;AACH,gBAAM,UAAU,KAAK,cAAc,IAAI,KAAK;AAC5C,cAAI;AAAS,oBAAQ,cAAc;;MAE3C,CAAC;AAED,YAAM,WAAW,KAAK,cAAc,GAAG;AACvC,UAAI;AAAU,iBAAS,OAAO,cAAc;AAE5C,WAAK,QAAQ,OAAO;IACxB;;;;AC9EJ,iBAAe,OAAO,WAAW,MAAM;AACvC,iBAAe,OAAO,aAAa,QAAQ;AAC3C,iBAAe,OAAO,cAAc,SAAS;AAC7C,iBAAe,OAAO,gBAAgB,WAAW;AACjD,iBAAe,OAAO,aAAa,QAAQ;AAC3C,iBAAe,OAAO,oBAAoB,eAAe;AACzD,iBAAe,OAAO,sBAAsB,gBAAgB;AAC5D,iBAAe,OAAO,qBAAqB,gBAAgB;AAC3D,iBAAe,OAAO,cAAc,SAAS;",
  "names": ["document", "IntersectionObserver", "win", "frame", "__awaiter"]
}
