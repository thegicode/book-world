{
  "version": 3,
  "sources": ["../../../src/scripts/model/constants.ts", "../../../src/scripts/utils/Publisher.ts", "../../../src/scripts/model/FavoriteModel.ts", "../../../src/scripts/model/LibraryModel.ts", "../../../src/scripts/model/RegionModel.ts", "../../../src/scripts/model/index.ts", "../../../src/scripts/utils/CustomEventEmitter.ts", "../../../src/scripts/utils/CustomFetch.ts", "../../../../node_modules/intersection-observer/intersection-observer.js", "../../../src/scripts/components/NavGnb.ts", "../../../src/scripts/components/LoadingComponent.ts", "../../../src/scripts/utils/helpers.ts", "../../../src/scripts/pages/library/Library.ts", "../../../src/scripts/pages/library/LibraryStored.ts", "../../../src/scripts/pages/library/selectors.ts", "../../../src/scripts/pages/library/LibraryHeader.ts", "../../../src/scripts/pages/library/LibraryItem.ts", "../../../src/scripts/pages/library/index.ts"],
  "sourcesContent": ["export const STORAGE_NAME = \"BookWorld\";\n", "export default class Publisher<T = undefined> {\n    private subscribers: TSubscriberCallback<T>[] = [];\n\n    subscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers.push(callback);\n    }\n\n    unsubscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers = this.subscribers.filter(\n            (subscriber) => subscriber !== callback\n        );\n    }\n\n    notify(payload?: T) {\n        this.subscribers.forEach((callback) => callback(payload));\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class FavoriteModel {\n    private _favorites: TFavoriteFavorites;\n    private _sortedKeys: TSortedFavoriteKeys;\n    private categoriesUpdatePublisher: Publisher<IFavoritesUpdateProps> =\n        new Publisher();\n    private bookUpdatePublisher: Publisher = new Publisher();\n\n    constructor(\n        categories: TFavoriteFavorites,\n        sortedKeys: TSortedFavoriteKeys\n    ) {\n        this._favorites = categories;\n        this._sortedKeys = sortedKeys;\n    }\n\n    get favorites(): TFavoriteFavorites {\n        return { ...this._favorites };\n    }\n\n    set favorites(newCategories: TFavoriteFavorites) {\n        this._favorites = newCategories;\n    }\n\n    get sortedKeys(): TSortedFavoriteKeys {\n        return [...this._sortedKeys];\n    }\n\n    set sortedKeys(newKeys: TSortedFavoriteKeys) {\n        this._sortedKeys = newKeys;\n    }\n\n    add(name: string) {\n        this._favorites[name] = [];\n        this.categoriesUpdatePublisher.notify({\n            type: \"add\",\n            payload: { name },\n        });\n    }\n\n    addSortedKeys(name: string) {\n        this._sortedKeys.push(name);\n    }\n\n    rename(prevName: string, newName: string) {\n        if (prevName in this._favorites) {\n            this._favorites[newName] = this._favorites[prevName];\n            delete this._favorites[prevName];\n\n            this.categoriesUpdatePublisher.notify({\n                type: \"rename\",\n                payload: { prevName, newName },\n            });\n        }\n    }\n\n    renameSortedKeys(prevName: string, newName: string) {\n        const index = this._sortedKeys.indexOf(prevName);\n        if (index !== -1) {\n            this._sortedKeys[index] = newName;\n        }\n    }\n\n    change(draggedKey: string, targetKey: string) {\n        const draggedIndex = this._sortedKeys.indexOf(draggedKey);\n        const targetIndex = this._sortedKeys.indexOf(targetKey);\n        this._sortedKeys[targetIndex] = draggedKey;\n        this._sortedKeys[draggedIndex] = targetKey;\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"change\",\n            payload: {\n                targetIndex,\n                draggedIndex,\n            },\n        });\n    }\n\n    delete(name: string) {\n        delete this._favorites[name];\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"delete\",\n            payload: { name },\n        });\n    }\n\n    deleteSortedKeys(name: string): number {\n        const index = this._sortedKeys.indexOf(name);\n        this._sortedKeys.splice(index, 1);\n        return index;\n    }\n\n    has(name: string) {\n        return name in this._favorites;\n    }\n\n    addBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            this._favorites[name].unshift(isbn);\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    hasBook(name: string, isbn: string) {\n        return name in this._favorites && this._favorites[name].includes(isbn);\n    }\n\n    removeBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            const index = this._favorites[name].indexOf(isbn);\n            if (index != -1) {\n                this._favorites[name].splice(index, 1);\n            }\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    subscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.subscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n    unsubscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.unsubscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n\n    subscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class LibraryModel {\n    private _libraries: TLibraries;\n    private publisher: Publisher<TLibraryUpdateProps> = new Publisher();\n\n    constructor(libraries: TLibraries) {\n        this._libraries = libraries;\n    }\n\n    get libraries() {\n        return { ...this._libraries };\n    }\n\n    set libraries(newLibries: TLibraries) {\n        this._libraries = newLibries;\n    }\n\n    add(code: string, name: string) {\n        this._libraries[code] = name;\n        this.publisher.notify({\n            type: \"add\",\n            payload: {\n                code,\n                name,\n            },\n        });\n    }\n\n    remove(code: string) {\n        delete this._libraries[code];\n        this.publisher.notify({\n            type: \"delete\",\n            payload: {\n                code,\n            },\n        });\n    }\n\n    has(code: string) {\n        return code in this._libraries;\n    }\n\n    subscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n\n    unsubscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class RegionModel {\n    private _regions: TRegions;\n    private updatePublisher: Publisher = new Publisher();\n    private detailUpdatePublisher: Publisher = new Publisher();\n\n    constructor(regions: TRegions) {\n        this._regions = regions;\n    }\n\n    get regions() {\n        return { ...this._regions };\n    }\n\n    set regions(newRegions: TRegions) {\n        this._regions = newRegions;\n    }\n\n    add(name: string) {\n        this._regions[name] = {};\n\n        this.updatePublisher.notify();\n    }\n\n    remove(name: string) {\n        delete this._regions[name];\n\n        this.updatePublisher.notify();\n    }\n\n    addDetail(regionName: string, detailName: string, detailCode: string) {\n        if (regionName in this._regions) {\n            this._regions[regionName][detailName] = detailCode;\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    removeDetail(regionName: string, detailName: string) {\n        if (\n            regionName in this._regions &&\n            detailName in this._regions[regionName]\n        ) {\n            delete this._regions[regionName][detailName];\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    subscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import { STORAGE_NAME } from \"./constants\";\nimport Publisher from \"../utils/Publisher\";\nimport FavoriteModel from \"./FavoriteModel\";\nimport LibraryModel from \"./LibraryModel\";\nimport RegionModel from \"./RegionModel\";\n\nconst cloneDeep = <T>(obj: T): T => {\n    return JSON.parse(JSON.stringify(obj));\n};\n\nconst initialState: IBookState = {\n    favorites: {},\n    sortedFavoriteKeys: [],\n    libraries: {},\n    regions: {},\n};\n\nclass BookModel {\n    private favoriteModel: FavoriteModel;\n    private libraryModel: LibraryModel;\n    private regionModel: RegionModel;\n    private bookStateUpdatePublisher: Publisher = new Publisher();\n\n    constructor() {\n        const state = this.loadStorage() || cloneDeep(initialState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = state;\n        this.favoriteModel = new FavoriteModel(favorites, sortedFavoriteKeys);\n        this.libraryModel = new LibraryModel(libraries);\n        this.regionModel = new RegionModel(regions);\n    }\n\n    // localStorage \uAD00\uB828\n    private loadStorage() {\n        const storageData = localStorage.getItem(STORAGE_NAME);\n        return storageData ? JSON.parse(storageData) : null;\n    }\n\n    private setStorage(newState: IBookState) {\n        try {\n            localStorage.setItem(STORAGE_NAME, JSON.stringify(newState));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // state \uAD00\uB828\n\n    get state() {\n        return this.loadStorage();\n    }\n\n    set state(newState: IBookState) {\n        this.setStorage(newState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = newState;\n        this.favoriteModel.favorites = favorites;\n        this.favoriteModel.sortedKeys = sortedFavoriteKeys;\n        this.libraryModel.libraries = libraries;\n        this.regionModel.regions = regions;\n\n        this.bookStateUpdatePublisher.notify();\n\n        console.log(\"set state\");\n    }\n\n    get favorites() {\n        return this.favoriteModel.favorites;\n    }\n\n    get sortedFavoriteKeys() {\n        return this.favoriteModel.sortedKeys;\n    }\n\n    get libraries() {\n        return this.libraryModel.libraries;\n    }\n\n    get regions() {\n        return this.regionModel.regions;\n    }\n\n    resetState() {\n        this.state = initialState;\n    }\n\n    // favorites \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setFavorites() {\n        const newState = this.state;\n        newState.favorites = this.favorites;\n        newState.sortedFavoriteKeys = this.sortedFavoriteKeys;\n        this.setStorage(newState);\n    }\n\n    addfavorite(name: string) {\n        this.favoriteModel.add(name);\n        this.favoriteModel.addSortedKeys(name);\n\n        this.setFavorites();\n    }\n\n    renameFavorite(prevName: string, newName: string) {\n        this.favoriteModel.rename(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    renameSortedFavoriteKey(prevName: string, newName: string) {\n        this.favoriteModel.renameSortedKeys(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    deleteFavorite(name: string) {\n        this.favoriteModel.delete(name);\n\n        this.setFavorites();\n    }\n\n    deleteSortedFavoriteKey(name: string) {\n        const index = this.favoriteModel.deleteSortedKeys(name);\n\n        this.setFavorites();\n        return index;\n    }\n\n    hasFavorite(name: string) {\n        return this.favoriteModel.has(name);\n    }\n\n    changeFavorite(draggedKey: string, targetKey: string) {\n        this.favoriteModel.change(draggedKey, targetKey);\n\n        this.setFavorites();\n    }\n\n    addFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.addBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    hasFavoriteBook(name: string, isbn: string) {\n        return this.favoriteModel.hasBook(name, isbn);\n    }\n\n    removeFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.removeBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    // Library \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setLibraries() {\n        const newState = this.state;\n        newState.libraries = this.libraries;\n        this.setStorage(newState);\n    }\n\n    addLibraries(code: string, name: string) {\n        this.libraryModel.add(code, name);\n\n        this.setLibraries();\n    }\n\n    removeLibraries(code: string) {\n        this.libraryModel.remove(code);\n\n        this.setLibraries();\n    }\n\n    hasLibrary(code: string) {\n        return this.libraryModel.has(code);\n    }\n\n    // Region \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setRegions() {\n        const newState = this.state;\n        newState.regions = this.regions;\n        this.setStorage(newState);\n    }\n\n    addRegion(name: string) {\n        this.regionModel.add(name);\n\n        this.setRegions();\n    }\n\n    removeRegion(name: string) {\n        this.regionModel.remove(name);\n\n        this.setRegions();\n    }\n\n    addDetailRegion(\n        regionName: string,\n        detailName: string,\n        detailCode: string\n    ) {\n        this.regionModel.addDetail(regionName, detailName, detailCode);\n\n        this.setRegions();\n    }\n\n    removeDetailRegion(regionName: string, detailName: string) {\n        this.regionModel.removeDetail(regionName, detailName);\n\n        this.setRegions();\n    }\n\n    // subscribe\n\n    subscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeFavoriteCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.favoriteModel.subscribeCategoriesUpdate(subscriber);\n    }\n    unsubscribeFavoriteCategoriesUpdate(\n        subscriber: TFavoritesUpdateSubscriber\n    ) {\n        this.favoriteModel.unsubscribeCategoriesUpdate(subscriber);\n    }\n\n    subscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.subscribeBookUpdate(subscriber);\n    }\n    unsubscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.unsubscribeBookUpdate(subscriber);\n    }\n\n    subscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.subscribeUpdate(subscriber);\n    }\n    unsubscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.unsubscribeUpdate(subscriber);\n    }\n\n    subscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeUpdatePublisher(subscriber);\n    }\n    unsubscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeUpdatePublisher(subscriber);\n    }\n\n    subscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeDetailUpdatePublisher(subscriber);\n    }\n    unsubscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeDetailUpdatePublisher(subscriber);\n    }\n}\n\nconst bookModel = new BookModel();\n\nexport default bookModel;\n", "class CustomEventEmitter<T extends ICustomEventDetail> {\n    private _bus: HTMLElement;\n\n    constructor() {\n        this._bus = document.createElement(\"div\");\n    }\n\n    add(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.addEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    remove(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.removeEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    dispatch(event: string, detail: T = {} as T): void {\n        this._bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new CustomEventEmitter();\n", "\nclass CustomFetch {\n    defaultOptions: RequestInit\n\n    constructor(baseOptions: RequestInit = {}) {\n        this.defaultOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Bearer ${getToken()}`\n            },\n            ...baseOptions\n        }\n    }\n\n    async fetch<T = unknown>(url: string, options?: RequestInit): Promise<T> {\n        const finalOptions: RequestInit & { timeout?: number} = {\n            ...this.defaultOptions,\n            ...options,\n            timeout: 5000\n        }\n        try {\n            const response = await fetch(url, finalOptions)\n            if (!response.ok) {\n                throw new Error(`Http error! status: ${response.status}, message: ${response.statusText}`)\n            } \n            const data = await response.json()\n            return data as T\n        } catch(error: unknown) {\n            console.error(`Error fetching data: ${error}`)\n            throw new Error(`Error fetching data: ${error}`)\n\n        }\n    }\n}\n\nexport default new CustomFetch()\n", "/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n", "import bookModel from \"../model\";\n\nexport default class NavGnb extends HTMLElement {\n    private PATHS: string[];\n    private sizeElement: HTMLElement | null = null;\n\n    constructor() {\n        super();\n\n        this.PATHS = [\n            \"/search\",\n            \"/favorite\",\n            \"/popular\",\n            \"/library\",\n            \"/setting\",\n        ];\n\n        this.sizeElement = null;\n\n        this.renderBookSize = this.renderBookSize.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n        this.setSelectedMenu();\n\n        this.sizeElement = this.querySelector(\".size\") as HTMLElement;\n\n        bookModel.subscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.subscribeToBookStateUpdate(this.renderBookSize);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n    }\n\n    get bookSize() {\n        return Object.values(bookModel.favorites).reduce(\n            (sum, currentArray: string[]) => sum + currentArray.length,\n            0\n        );\n    }\n\n    protected render() {\n        this.innerHTML = `\n            <nav class=\"gnb\">\n                <a class=\"gnb-item\" href=\".${this.PATHS[0]}\">\uCC45 \uAC80\uC0C9</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[1]}\">\uB098\uC758 \uCC45 (<span class=\"size\">${this.bookSize}</span>)</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[2]}\">\uC778\uAE30\uB300\uCD9C\uB3C4\uC11C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[3]}\">\uB3C4\uC11C\uAD00 \uC870\uD68C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[4]}\">\uC124\uC815</a>\n            </nav>`;\n    }\n\n    protected setSelectedMenu(): void {\n        const index = this.PATHS.indexOf(document.location.pathname);\n        if (index >= 0) this.querySelectorAll(\"a\")[index].ariaSelected = \"true\";\n    }\n\n    protected renderBookSize() {\n        if (this.sizeElement)\n            this.sizeElement.textContent = this.bookSize.toString();\n    }\n}\n", "export default class LoadingComponent extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    show() {\n        this.removeAttribute(\"hidden\");\n    }\n\n    hide() {\n        this.setAttribute(\"hidden\", \"\");\n    }\n}\n\ncustomElements.define(\"loading-component\", LoadingComponent);\n", "export function getCurrentDates() {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n    const currentDay = String(currentDate.getDate()).padStart(2, \"0\");\n\n    return {\n        currentDate,\n        currentYear,\n        currentMonth,\n        currentDay,\n    };\n}\n\nexport function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function fillElementsWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        element.textContent = String(value);\n    });\n}\n", "import { CustomFetch } from \"../../utils/index\";\nimport LibraryItem from \"./LibraryItem\";\nimport { cloneTemplate } from \"../../utils/helpers\";\nimport bookModel from \"../../model\";\nimport { LoadingComponent } from \"../../components\";\n\nexport default class Library extends HTMLElement {\n    private _regionCode: string | null = null;\n    private readonly PAGE_SIZE = 20;\n    private listElement?: HTMLElement;\n    private itemTemplate: HTMLTemplateElement;\n    private loadingComponent: LoadingComponent | null;\n\n    constructor() {\n        super();\n\n        this.listElement = this.querySelector(\".library-list\") as HTMLElement;\n        this.itemTemplate = document.querySelector(\n            \"#tp-item\"\n        ) as HTMLTemplateElement;\n        this.loadingComponent =\n            this.querySelector<LoadingComponent>(\"loading-component\");\n    }\n\n    set regionCode(value) {\n        this._regionCode = value;\n        this.handleRegionCodeChange();\n    }\n\n    get regionCode() {\n        return this._regionCode;\n    }\n\n    connectedCallback() {\n        // start- library-header\n    }\n\n    private handleRegionCodeChange() {\n        if (!this.regionCode) return;\n\n        this.fetchLibrarySearch(this.regionCode);\n    }\n\n    protected async fetchLibrarySearch(regionCode: string) {\n        if (this.listElement) this.listElement.innerHTML = \"\";\n        this.loadingComponent?.show();\n\n        const url = `/library-search?dtl_region=${regionCode}&page=1&pageSize=${this.PAGE_SIZE}`;\n        try {\n            const data = await CustomFetch.fetch<ILibrarySearchByBookResult>(\n                url\n            );\n            this.renderLibraryList(data);\n        } catch (error) {\n            console.error(error);\n            throw new Error(\"Fail to get library search data.\");\n        }\n\n        this.loadingComponent?.hide();\n    }\n\n    protected renderLibraryList(data: ILibrarySearchByBookResult) {\n        if (!this.listElement) return;\n        const {\n            // pageNo, pageSize, numFound, resultNum,\n            libraries,\n        } = data;\n\n        if (libraries.length === 0) {\n            this.showMessage(\"notFound\");\n            return;\n        }\n\n        const fragment = libraries.reduce(\n            (fragment: DocumentFragment, lib: ILibraryData) =>\n                this.createLibraryItem(fragment, lib),\n            new DocumentFragment()\n        );\n\n        this.listElement.appendChild(fragment);\n    }\n\n    private createLibraryItem(fragment: DocumentFragment, lib: ILibraryData) {\n        const libraryItem = cloneTemplate<LibraryItem>(this.itemTemplate);\n        libraryItem.data = lib;\n\n        if (bookModel.hasLibrary(lib.libCode)) {\n            libraryItem.dataset.has = \"true\";\n            fragment.prepend(libraryItem);\n            // fragment.insertBefore(libraryItem, fragment.firstChild);\n        } else {\n            fragment.appendChild(libraryItem);\n        }\n        return fragment;\n    }\n\n    protected showMessage(type: string) {\n        const template = document.querySelector(\n            `#tp-${type}`\n        ) as HTMLTemplateElement;\n\n        if (template && this.listElement) {\n            this.listElement.innerHTML = \"\";\n            const clone = cloneTemplate(template);\n            this.listElement.appendChild(clone);\n        }\n    }\n}\n", "import bookModel from \"../../model\";\nimport { cloneTemplate } from \"../../utils/helpers\";\n\nexport default class LibraryStored extends HTMLElement {\n    private template: HTMLTemplateElement | null = null;\n    private listElement: HTMLElement | null = null;\n\n    constructor() {\n        super();\n\n        this.subscribeUpdate = this.subscribeUpdate.bind(this);\n    }\n\n    connectedCallback() {\n        this.template = this.querySelector(\"#tp-stored-item\");\n        console.log(this.template);\n        this.listElement = this.querySelector(\"ul\");\n\n        if (!this.listElement) return;\n\n        this.render();\n        bookModel.subscribeLibraryUpdate(this.subscribeUpdate);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeLibraryUpdate(this.subscribeUpdate);\n    }\n\n    private render() {\n        if (!this.listElement) return;\n\n        const libraries = bookModel.libraries;\n\n        const fragment = new DocumentFragment();\n        for (const [code, name] of Object.entries(libraries)) {\n            const element = this.createElement(code, name);\n            if (!element) return;\n            fragment.appendChild(element);\n        }\n\n        this.listElement.appendChild(fragment);\n    }\n\n    private createElement(code: string, name: string): HTMLElement | void {\n        if (!this.template) return;\n\n        const element = cloneTemplate(this.template);\n        (element.querySelector(\".name\") as HTMLElement).textContent = name;\n        element.dataset.library = code;\n        this.addEvents(element);\n        return element;\n    }\n\n    private addEvents(element: HTMLElement) {\n        const cancelButton = element.querySelector(\n            \".cancelButton\"\n        ) as HTMLButtonElement;\n\n        cancelButton.addEventListener(\"click\", () => {\n            const code = element.dataset.library;\n            if (!code) return;\n            bookModel.removeLibraries(code);\n        });\n    }\n\n    private subscribeUpdate({ type, payload }: TLibraryUpdateProps) {\n        switch (type) {\n            case \"add\":\n                this.add(payload);\n                break;\n            case \"delete\":\n                this.delete(payload.code);\n                break;\n            default:\n                console.error(\"Unknown type\");\n        }\n    }\n\n    private add({ code, name }: TLibraryPayload) {\n        if (!this.listElement || !name) return;\n        const element = this.createElement(code, name) as HTMLElement;\n        this.listElement.appendChild(element);\n    }\n\n    private delete(code: string) {\n        if (!this.listElement) return;\n\n        for (const element of this.listElement.querySelectorAll(\"li\")) {\n            if (element.dataset.library === code) {\n                element.remove();\n            }\n        }\n    }\n}\n", "import { LoadingComponent } from \"../../components\";\nimport Library from \"./Library\";\n\nexport const libraryElement = document.querySelector<Library>(\"app-library\");\nexport const loadingComponent =\n    document.querySelector<LoadingComponent>(\"loading-component\");\n", "import { cloneTemplate } from \"../../utils/helpers\";\nimport { libraryElement } from \"./selectors\";\nimport bookModel from \"../../model\";\n\nexport default class LibraryRegion extends HTMLElement {\n    private regionCode: string | null = null;\n    private template: HTMLTemplateElement | null = null;\n    private detailSelectElement!: HTMLSelectElement;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.template = document.querySelector(\n            \"#tp-region\"\n        ) as HTMLTemplateElement;\n        this.detailSelectElement = this.querySelector(\n            \"select\"\n        ) as HTMLSelectElement;\n\n        this.renderFavoriteRegions();\n\n        this.detailSelectElement.addEventListener(\n            \"change\",\n            this.handleDetailSelectChange\n        );\n    }\n\n    disconnectedCallback() {\n        this.detailSelectElement.removeEventListener(\n            \"change\",\n            this.handleDetailSelectChange\n        );\n    }\n\n    private renderFavoriteRegions() {\n        const favoriteRegions = bookModel.regions;\n\n        if (Object.keys(favoriteRegions).length === 0) return;\n\n        const container = this.querySelector(\".region\") as HTMLElement;\n        const fragment = new DocumentFragment();\n        for (const regionName of Object.keys(favoriteRegions)) {\n            const size = Object.keys(favoriteRegions[regionName]).length;\n            if (this.template && size > 0) {\n                const element = this.createElement(regionName) as HTMLElement;\n                fragment.appendChild(element);\n            }\n        }\n\n        container.appendChild(fragment);\n\n        if (!this.regionCode) {\n            const firstInput = container.querySelector(\n                \"input\"\n            ) as HTMLInputElement;\n            firstInput.checked = true;\n            this.renderDetailRegion(firstInput.value);\n        }\n    }\n\n    private createElement(regionName: string) {\n        if (!this.template) return;\n\n        const element = cloneTemplate(this.template);\n        const radioElement = element.querySelector(\"input\") as HTMLInputElement;\n\n        radioElement.value = regionName;\n        radioElement.addEventListener(\"change\", () =>\n            this.handleRegionChange(radioElement.value)\n        );\n\n        const spanElement = element.querySelector(\"span\") as HTMLSpanElement;\n        spanElement.textContent = regionName;\n\n        return element;\n    }\n\n    private handleRegionChange(regionCode: string) {\n        this.regionCode = regionCode;\n        this.renderDetailRegion(regionCode);\n    }\n\n    private renderDetailRegion(regionName: string) {\n        this.detailSelectElement.innerHTML = \"\";\n\n        const detailRegionObject = bookModel.regions[regionName];\n        for (const [key, value] of Object.entries(detailRegionObject)) {\n            const optionEl = document.createElement(\"option\");\n            optionEl.textContent = key;\n            optionEl.value = value;\n            this.detailSelectElement.appendChild(optionEl);\n        }\n        const firstOptionElement = this.detailSelectElement.querySelector(\n            \"option\"\n        ) as HTMLOptionElement;\n        firstOptionElement.selected = true;\n\n        this.handleDetailSelectChange();\n    }\n\n    private handleDetailSelectChange = () => {\n        const { value } = this.detailSelectElement;\n\n        if (libraryElement) libraryElement.regionCode = value;\n    };\n}\n", "import bookModel from \"../../model\";\n\nexport default class LibraryItem extends HTMLElement {\n    protected checkbox: HTMLInputElement | null = null;\n    private libCode = \"\";\n    private libName = \"\";\n    data!: ILibraryData;\n\n    constructor() {\n        super();\n\n        this.checkbox =\n            this.querySelector<HTMLInputElement>(\"[name=myLibrary]\");\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n\n        this.checkbox?.addEventListener(\"click\", this.onChange);\n    }\n\n    disconnectedCallback() {\n        this.checkbox?.removeEventListener(\"click\", this.onChange);\n    }\n\n    protected render() {\n        const { data } = this;\n        if (data === null) return;\n\n        const { libCode, libName } = data;\n        this.libCode = libCode;\n        this.libName = libName;\n\n        Object.entries(data).forEach(([key, value]) => {\n            const element = this.querySelector(`.${key}`);\n            if (element) {\n                element.innerHTML = value;\n            }\n        });\n\n        const hoempageLink = this.querySelector<HTMLLinkElement>(\".homepage\");\n        if (hoempageLink) hoempageLink.href = data.homepage;\n\n        if (this.checkbox) {\n            this.checkbox.checked = bookModel.hasLibrary(libCode);\n        }\n    }\n\n    protected onChange() {\n        if (this.checkbox?.checked) {\n            bookModel.addLibraries(this.libCode, this.libName);\n        } else {\n            bookModel.removeLibraries(this.libCode);\n        }\n    }\n}\n", "import { NavGnb } from \"../../components/index\";\n\nimport Library from \"./Library\";\nimport LibraryStored from \"./LibraryStored\";\nimport LibraryHeader from \"./LibraryHeader\";\nimport LibraryItem from \"./LibraryItem\";\n\ncustomElements.define(\"nav-gnb\", NavGnb);\ncustomElements.define(\"app-library\", Library);\ncustomElements.define(\"library-stored\", LibraryStored);\ncustomElements.define(\"library-header\", LibraryHeader);\ncustomElements.define(\"library-item\", LibraryItem);\n"],
  "mappings": "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",
  "names": ["document", "IntersectionObserver", "win", "frame", "fragment"]
}
