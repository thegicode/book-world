{
  "version": 3,
  "sources": ["../../../src/scripts/model/constants.ts", "../../../src/scripts/utils/Publisher.ts", "../../../src/scripts/model/FavoriteModel.ts", "../../../src/scripts/model/LibraryModel.ts", "../../../src/scripts/model/RegionModel.ts", "../../../src/scripts/model/index.ts", "../../../src/scripts/utils/CustomEventEmitter.ts", "../../../src/scripts/utils/CustomFetch.ts", "../../../../node_modules/intersection-observer/intersection-observer.js", "../../../src/scripts/components/NavGnb.ts", "../../../src/scripts/components/LoadingComponent.ts", "../../../src/scripts/pages/setting/AppSetting.ts", "../../../src/scripts/utils/helpers.ts", "../../../src/scripts/pages/setting/constants.ts", "../../../src/scripts/pages/setting/SetRegion.ts", "../../../src/scripts/pages/setting/SetDetailRegion.ts", "../../../src/scripts/pages/setting/FavoriteRegions.ts", "../../../src/scripts/pages/setting/SetStorage.ts", "../../../src/scripts/pages/setting/index.ts"],
  "sourcesContent": ["export const STORAGE_NAME = \"BookWorld\";\n", "export default class Publisher<T = undefined> {\n    private subscribers: TSubscriberCallback<T>[] = [];\n\n    subscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers.push(callback);\n    }\n\n    unsubscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers = this.subscribers.filter(\n            (subscriber) => subscriber !== callback\n        );\n    }\n\n    notify(payload?: T) {\n        this.subscribers.forEach((callback) => callback(payload));\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class FavoriteModel {\n    private _favorites: TFavoriteFavorites;\n    private _sortedKeys: TSortedFavoriteKeys;\n    private categoriesUpdatePublisher: Publisher<IFavoritesUpdateProps> =\n        new Publisher();\n    private bookUpdatePublisher: Publisher = new Publisher();\n\n    constructor(\n        categories: TFavoriteFavorites,\n        sortedKeys: TSortedFavoriteKeys\n    ) {\n        this._favorites = categories || {};\n        this._sortedKeys = sortedKeys || [];\n    }\n\n    get favorites(): TFavoriteFavorites {\n        return { ...this._favorites };\n    }\n\n    set favorites(newCategories: TFavoriteFavorites) {\n        this._favorites = newCategories;\n    }\n\n    get sortedKeys(): TSortedFavoriteKeys {\n        return [...this._sortedKeys];\n    }\n\n    set sortedKeys(newKeys: TSortedFavoriteKeys) {\n        this._sortedKeys = newKeys;\n    }\n\n    add(name: string) {\n        this._favorites[name] = [];\n        this.categoriesUpdatePublisher.notify({\n            type: \"add\",\n            payload: { name },\n        });\n    }\n\n    addSortedKeys(name: string) {\n        this._sortedKeys.push(name);\n    }\n\n    rename(prevName: string, newName: string) {\n        if (prevName in this._favorites) {\n            this._favorites[newName] = this._favorites[prevName];\n            delete this._favorites[prevName];\n\n            this.categoriesUpdatePublisher.notify({\n                type: \"rename\",\n                payload: { prevName, newName },\n            });\n        }\n    }\n\n    renameSortedKeys(prevName: string, newName: string) {\n        const index = this._sortedKeys.indexOf(prevName);\n        if (index !== -1) {\n            this._sortedKeys[index] = newName;\n        }\n    }\n\n    change(draggedKey: string, targetKey: string) {\n        const draggedIndex = this._sortedKeys.indexOf(draggedKey);\n        const targetIndex = this._sortedKeys.indexOf(targetKey);\n        this._sortedKeys[targetIndex] = draggedKey;\n        this._sortedKeys[draggedIndex] = targetKey;\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"change\",\n            payload: {\n                targetIndex,\n                draggedIndex,\n            },\n        });\n    }\n\n    delete(name: string) {\n        delete this._favorites[name];\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"delete\",\n            payload: { name },\n        });\n    }\n\n    deleteSortedKeys(name: string): number {\n        const index = this._sortedKeys.indexOf(name);\n        this._sortedKeys.splice(index, 1);\n        return index;\n    }\n\n    has(name: string) {\n        return name in this._favorites;\n    }\n\n    addBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            this._favorites[name].unshift(isbn);\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    hasBook(name: string, isbn: string) {\n        return name in this._favorites && this._favorites[name].includes(isbn);\n    }\n\n    removeBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            const index = this._favorites[name].indexOf(isbn);\n            if (index != -1) {\n                this._favorites[name].splice(index, 1);\n            }\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    subscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.subscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n    unsubscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.unsubscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n\n    subscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class LibraryModel {\n    private _libraries: TLibraries;\n    private publisher: Publisher<TLibraryUpdateProps> = new Publisher();\n\n    constructor(libraries: TLibraries) {\n        this._libraries = libraries;\n    }\n\n    get libraries() {\n        return { ...this._libraries };\n    }\n\n    set libraries(newLibries: TLibraries) {\n        this._libraries = newLibries;\n    }\n\n    add(code: string, data: ILibraryData) {\n        this._libraries[code] = data;\n        this.publisher.notify({\n            type: \"add\",\n            payload: {\n                code,\n                // name,\n                data,\n            },\n        });\n    }\n\n    remove(code: string) {\n        delete this._libraries[code];\n        this.publisher.notify({\n            type: \"delete\",\n            payload: {\n                code,\n            },\n        });\n    }\n\n    has(code: string) {\n        return code in this._libraries;\n    }\n\n    subscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n\n    unsubscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class RegionModel {\n    private _regions: TRegions;\n    private updatePublisher: Publisher = new Publisher();\n    private detailUpdatePublisher: Publisher = new Publisher();\n\n    constructor(regions: TRegions) {\n        this._regions = regions;\n    }\n\n    get regions() {\n        return { ...this._regions };\n    }\n\n    set regions(newRegions: TRegions) {\n        this._regions = newRegions;\n    }\n\n    add(name: string) {\n        this._regions[name] = {};\n\n        this.updatePublisher.notify();\n    }\n\n    remove(name: string) {\n        delete this._regions[name];\n\n        this.updatePublisher.notify();\n    }\n\n    addDetail(regionName: string, detailName: string, detailCode: string) {\n        if (regionName in this._regions) {\n            this._regions[regionName][detailName] = detailCode;\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    removeDetail(regionName: string, detailName: string) {\n        if (\n            regionName in this._regions &&\n            detailName in this._regions[regionName]\n        ) {\n            delete this._regions[regionName][detailName];\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    subscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import { STORAGE_NAME } from \"./constants\";\nimport Publisher from \"../utils/Publisher\";\nimport FavoriteModel from \"./FavoriteModel\";\nimport LibraryModel from \"./LibraryModel\";\nimport RegionModel from \"./RegionModel\";\n\nconst cloneDeep = <T>(obj: T): T => {\n    return JSON.parse(JSON.stringify(obj));\n};\n\nconst initialState: IBookState = {\n    favorites: {},\n    sortedFavoriteKeys: [],\n    libraries: {},\n    regions: {},\n};\n\nclass BookModel {\n    private favoriteModel: FavoriteModel;\n    private libraryModel: LibraryModel;\n    private regionModel: RegionModel;\n    private bookStateUpdatePublisher: Publisher = new Publisher();\n\n    constructor() {\n        const state = this.loadStorage() || cloneDeep(initialState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = state;\n        this.favoriteModel = new FavoriteModel(favorites, sortedFavoriteKeys);\n        this.libraryModel = new LibraryModel(libraries);\n        this.regionModel = new RegionModel(regions);\n    }\n\n    // localStorage \uAD00\uB828\n    private loadStorage() {\n        const storageData = localStorage.getItem(STORAGE_NAME);\n        return storageData ? JSON.parse(storageData) : null;\n    }\n\n    private setStorage(newState: IBookState) {\n        try {\n            localStorage.setItem(STORAGE_NAME, JSON.stringify(newState));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // state \uAD00\uB828\n\n    get state() {\n        return this.loadStorage();\n    }\n\n    set state(newState: IBookState) {\n        this.setStorage(newState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = newState;\n        this.favoriteModel.favorites = favorites;\n        this.favoriteModel.sortedKeys = sortedFavoriteKeys;\n        this.libraryModel.libraries = libraries;\n        this.regionModel.regions = regions;\n\n        this.bookStateUpdatePublisher.notify();\n\n        console.log(\"set state\");\n    }\n\n    get favorites() {\n        return this.favoriteModel.favorites;\n    }\n\n    get sortedFavoriteKeys() {\n        return this.favoriteModel.sortedKeys;\n    }\n\n    get libraries() {\n        return this.libraryModel.libraries;\n    }\n\n    get regions() {\n        return this.regionModel.regions;\n    }\n\n    resetState() {\n        this.state = initialState;\n    }\n\n    // favorites \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setFavorites() {\n        const newState = this.state;\n        newState.favorites = this.favorites;\n        newState.sortedFavoriteKeys = this.sortedFavoriteKeys;\n        this.setStorage(newState);\n    }\n\n    addfavorite(name: string) {\n        this.favoriteModel.add(name);\n        this.favoriteModel.addSortedKeys(name);\n\n        this.setFavorites();\n    }\n\n    renameFavorite(prevName: string, newName: string) {\n        this.favoriteModel.rename(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    renameSortedFavoriteKey(prevName: string, newName: string) {\n        this.favoriteModel.renameSortedKeys(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    deleteFavorite(name: string) {\n        this.favoriteModel.delete(name);\n\n        this.setFavorites();\n    }\n\n    deleteSortedFavoriteKey(name: string) {\n        const index = this.favoriteModel.deleteSortedKeys(name);\n\n        this.setFavorites();\n        return index;\n    }\n\n    hasFavorite(name: string) {\n        return this.favoriteModel.has(name);\n    }\n\n    changeFavorite(draggedKey: string, targetKey: string) {\n        this.favoriteModel.change(draggedKey, targetKey);\n\n        this.setFavorites();\n    }\n\n    addFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.addBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    hasFavoriteBook(name: string, isbn: string) {\n        return this.favoriteModel.hasBook(name, isbn);\n    }\n\n    removeFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.removeBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    // Library \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setLibraries() {\n        const newState = this.state;\n        newState.libraries = this.libraries;\n        this.setStorage(newState);\n    }\n\n    addLibraries(code: string, data: ILibraryData) {\n        this.libraryModel.add(code, data);\n        this.setLibraries();\n    }\n\n    removeLibraries(code: string) {\n        this.libraryModel.remove(code);\n\n        this.setLibraries();\n    }\n\n    hasLibrary(code: string) {\n        return this.libraryModel.has(code);\n    }\n\n    // Region \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setRegions() {\n        const newState = this.state;\n        newState.regions = this.regions;\n        this.setStorage(newState);\n    }\n\n    addRegion(name: string) {\n        this.regionModel.add(name);\n\n        this.setRegions();\n    }\n\n    removeRegion(name: string) {\n        this.regionModel.remove(name);\n\n        this.setRegions();\n    }\n\n    addDetailRegion(\n        regionName: string,\n        detailName: string,\n        detailCode: string\n    ) {\n        this.regionModel.addDetail(regionName, detailName, detailCode);\n\n        this.setRegions();\n    }\n\n    removeDetailRegion(regionName: string, detailName: string) {\n        this.regionModel.removeDetail(regionName, detailName);\n\n        this.setRegions();\n    }\n\n    // subscribe\n\n    subscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeFavoriteCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.favoriteModel.subscribeCategoriesUpdate(subscriber);\n    }\n    unsubscribeFavoriteCategoriesUpdate(\n        subscriber: TFavoritesUpdateSubscriber\n    ) {\n        this.favoriteModel.unsubscribeCategoriesUpdate(subscriber);\n    }\n\n    subscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.subscribeBookUpdate(subscriber);\n    }\n    unsubscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.unsubscribeBookUpdate(subscriber);\n    }\n\n    subscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.subscribeUpdate(subscriber);\n    }\n    unsubscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.unsubscribeUpdate(subscriber);\n    }\n\n    subscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeUpdatePublisher(subscriber);\n    }\n    unsubscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeUpdatePublisher(subscriber);\n    }\n\n    subscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeDetailUpdatePublisher(subscriber);\n    }\n    unsubscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeDetailUpdatePublisher(subscriber);\n    }\n}\n\nconst bookModel = new BookModel();\n\nexport default bookModel;\n", "class CustomEventEmitter<T extends ICustomEventDetail> {\n    private _bus: HTMLElement;\n\n    constructor() {\n        this._bus = document.createElement(\"div\");\n    }\n\n    add(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.addEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    remove(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.removeEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    dispatch(event: string, detail: T = {} as T): void {\n        this._bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new CustomEventEmitter();\n", "\nclass CustomFetch {\n    defaultOptions: RequestInit\n\n    constructor(baseOptions: RequestInit = {}) {\n        this.defaultOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Bearer ${getToken()}`\n            },\n            ...baseOptions\n        }\n    }\n\n    async fetch<T = unknown>(url: string, options?: RequestInit): Promise<T> {\n        const finalOptions: RequestInit & { timeout?: number} = {\n            ...this.defaultOptions,\n            ...options,\n            timeout: 5000\n        }\n        try {\n            const response = await fetch(url, finalOptions)\n            if (!response.ok) {\n                throw new Error(`Http error! status: ${response.status}, message: ${response.statusText}`)\n            } \n            const data = await response.json()\n            return data as T\n        } catch(error: unknown) {\n            console.error(`Error fetching data: ${error}`)\n            throw new Error(`Error fetching data: ${error}`)\n\n        }\n    }\n}\n\nexport default new CustomFetch()\n", "/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n", "import bookModel from \"../model\";\n\nexport default class NavGnb extends HTMLElement {\n    private PATHS: string[];\n    private sizeElement: HTMLElement | null = null;\n\n    constructor() {\n        super();\n\n        this.PATHS = [\n            \"/search\",\n            \"/favorite\",\n            \"/popular\",\n            \"/library\",\n            \"/setting\",\n        ];\n\n        this.sizeElement = null;\n\n        this.renderBookSize = this.renderBookSize.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n        this.setSelectedMenu();\n\n        this.sizeElement = this.querySelector(\".size\") as HTMLElement;\n\n        bookModel.subscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.subscribeToBookStateUpdate(this.renderBookSize);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n    }\n\n    get bookSize() {\n        return Object.values(bookModel.favorites).reduce(\n            (sum, currentArray: string[]) => sum + currentArray.length,\n            0\n        );\n    }\n\n    protected render() {\n        this.innerHTML = `\n            <nav class=\"gnb\">\n                <a class=\"gnb-item\" href=\".${this.PATHS[0]}\">\uCC45 \uAC80\uC0C9</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[1]}\">\uB098\uC758 \uCC45 (<span class=\"size\">${this.bookSize}</span>)</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[2]}\">\uC778\uAE30\uB300\uCD9C\uB3C4\uC11C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[3]}\">\uB3C4\uC11C\uAD00 \uC870\uD68C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[4]}\">\uC124\uC815</a>\n            </nav>`;\n    }\n\n    protected setSelectedMenu(): void {\n        const index = this.PATHS.indexOf(document.location.pathname);\n        if (index >= 0) this.querySelectorAll(\"a\")[index].ariaSelected = \"true\";\n    }\n\n    protected renderBookSize() {\n        if (this.sizeElement)\n            this.sizeElement.textContent = this.bookSize.toString();\n    }\n}\n", "export default class LoadingComponent extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    show() {\n        this.removeAttribute(\"hidden\");\n    }\n\n    hide() {\n        this.setAttribute(\"hidden\", \"\");\n    }\n}\n\ncustomElements.define(\"loading-component\", LoadingComponent);\n", "export default class AppSetting extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\n", "export function getCurrentDates() {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n    const currentDay = String(currentDate.getDate()).padStart(2, \"0\");\n\n    return {\n        currentDate,\n        currentYear,\n        currentMonth,\n        currentDay,\n    };\n}\n\nexport function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function fillElementsWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        if (!element) {\n            console.error(`${key} element is not exist. Please check ${key}.`);\n            return;\n        }\n        element.textContent = String(value);\n    });\n}\n\nasync function fetchHTMLTemplate(url: string) {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\n                `Failed to fetch template: ${response.status} ${response.statusText}`\n            );\n        }\n        return await response.text();\n    } catch (error) {\n        console.error(\"Error fetching HTML template:\", error);\n        return null;\n    }\n}\n\nasync function parseHTMLTemplate(html: string) {\n    try {\n        const doc = new DOMParser().parseFromString(html, \"text/html\");\n        return doc.querySelector(\"template\");\n    } catch (error) {\n        console.error(\"Error parsing HTML template:\", error);\n        return null;\n    }\n}\n\nexport async function fetchAndParseTemplate(templateURL: string) {\n    try {\n        const html = await fetchHTMLTemplate(templateURL);\n        if (!html) return null;\n\n        return parseHTMLTemplate(html);\n    } catch (error) {\n        console.error(\"Error fetching and parsing template\", error);\n        return null;\n    }\n}\n", "export const FETCH_REGION_DATA_EVENT = \"fetch-region-data\";\n", "import { CustomEventEmitter, CustomFetch } from \"../../utils/index\";\nimport { cloneTemplate } from \"../../utils/helpers\";\nimport { FETCH_REGION_DATA_EVENT } from \"./constants\";\nimport bookModel from \"../../model\";\n\nexport default class SetRegion extends HTMLElement {\n    private regionData: TotalRegions | null;\n    private template: HTMLTemplateElement;\n\n    constructor() {\n        super();\n        this.regionData = null;\n        this.template = document.querySelector(\n            \"#tp-region\"\n        ) as HTMLTemplateElement;\n\n        this.fetchAndRender = this.fetchAndRender.bind(this);\n    }\n\n    connectedCallback() {\n        this.fetchAndRender();\n\n        bookModel.subscribeToBookStateUpdate(this.fetchAndRender);\n    }\n\n    discinnectedCallback() {\n        bookModel.unsubscribeToBookStateUpdate(this.fetchAndRender);\n    }\n\n    private async fetchAndRender() {\n        try {\n            this.regionData = (await await CustomFetch.fetch(\n                \"../../../assets/json/region.json\"\n            )) as TotalRegions;\n\n            this.render();\n\n            CustomEventEmitter.dispatch(FETCH_REGION_DATA_EVENT, {\n                regionData: this.regionData,\n            });\n        } catch (error) {\n            console.error(error);\n            throw new Error(\"Fail to get region data.\");\n        }\n    }\n\n    private render() {\n        const regionElementsFragment = this.createRegionElementsFragment();\n\n        const container = this.querySelector(\".regions\") as HTMLElement;\n        container.innerHTML = \"\";\n        container.appendChild(regionElementsFragment);\n    }\n\n    private createRegionElementsFragment() {\n        if (!this.regionData) {\n            throw new Error(\"regionData is null.\");\n        }\n\n        const fragment = new DocumentFragment();\n\n        const regionData = this.regionData[\"region\"];\n        const favoriteRegions = Object.keys(bookModel.regions);\n\n        for (const [key, value] of Object.entries(regionData)) {\n            const regionElement = this.createRegionElement(\n                this.template,\n                key,\n                value,\n                favoriteRegions\n            );\n            fragment.appendChild(regionElement);\n        }\n\n        return fragment;\n    }\n\n    private createRegionElement(\n        template: HTMLTemplateElement,\n        key: string,\n        value: string,\n        favoriteRegions: string[]\n    ) {\n        const regionElement = cloneTemplate(template);\n        const checkbox = regionElement.querySelector(\n            \"input\"\n        ) as HTMLInputElement;\n        checkbox.value = value;\n        checkbox.checked = favoriteRegions.includes(key);\n        checkbox.addEventListener(\n            \"change\",\n            this.createCheckboxChangeListener(checkbox)\n        );\n\n        const spanElement = regionElement.querySelector(\"span\");\n        if (spanElement) spanElement.textContent = key;\n\n        return regionElement;\n    }\n\n    private createCheckboxChangeListener(checkbox: HTMLInputElement) {\n        return () => {\n            const spanElement = checkbox.nextElementSibling as HTMLElement;\n            if (!spanElement || typeof spanElement.textContent !== \"string\") {\n                throw new Error(\n                    \"Invalid checkbox element: No sibling element or missing text content.\"\n                );\n            }\n\n            const key = spanElement.textContent;\n\n            if (checkbox.checked) {\n                bookModel.addRegion(key);\n            } else {\n                bookModel.removeRegion(key);\n            }\n        };\n    }\n}\n", "import { CustomEventEmitter } from \"../../utils/index\";\nimport { cloneTemplate } from \"../../utils/helpers\";\nimport { FETCH_REGION_DATA_EVENT } from \"./constants\";\nimport bookModel from \"../../model\";\n\nexport default class SetDetailRegion extends HTMLElement {\n    private regionData: TotalRegions | null;\n    private region: string;\n\n    constructor() {\n        super();\n        this.regionData = null;\n        this.region = \"\";\n\n        this.setRegionData = this.setRegionData.bind(this);\n        this.renderRegion = this.renderRegion.bind(this);\n    }\n\n    connectedCallback() {\n        bookModel.subscribeRegionUpdate(this.renderRegion);\n\n        CustomEventEmitter.add(FETCH_REGION_DATA_EVENT, this.setRegionData);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeRegionUpdate(this.renderRegion);\n\n        CustomEventEmitter.remove(FETCH_REGION_DATA_EVENT, this.setRegionData);\n    }\n\n    private setRegionData(event: Event) {\n        const customEvent = event as CustomEvent<{ regionData: TotalRegions }>;\n        this.regionData = customEvent.detail.regionData;\n\n        this.renderRegion();\n    }\n\n    private renderRegion() {\n        const favoriteRegions = Object.keys(bookModel.regions);\n\n        const container = this.querySelector(\".regions\") as HTMLElement;\n        if (!container) return;\n\n        container.innerHTML = \"\";\n\n        if (favoriteRegions.length > 0) {\n            const regionElements = this.createRegions(favoriteRegions);\n\n            container.appendChild(regionElements);\n        }\n\n        this.initializeFirstRegion(container);\n    }\n\n    private createRegions(favoriteRegions: string[]) {\n        const template = document.querySelector(\n            \"#tp-favorite-region\"\n        ) as HTMLTemplateElement;\n\n        const fragment = new DocumentFragment();\n        favoriteRegions.forEach((region) => {\n            if (region === \"\") return null;\n            const element = cloneTemplate(template);\n            const spanElement = element.querySelector<HTMLElement>(\"span\");\n            if (spanElement) spanElement.textContent = region;\n\n            fragment.appendChild(element);\n        });\n        return fragment;\n    }\n\n    private initializeFirstRegion(container: HTMLElement) {\n        const firstInput = container.querySelector<HTMLInputElement>(\n            \"input\"\n        ) as HTMLInputElement;\n\n        if (!firstInput) {\n            this.renderDetailRegions(\"\");\n            return;\n        }\n\n        firstInput.checked = true;\n        const labelEl = firstInput.nextElementSibling as HTMLElement;\n        const label = labelEl?.textContent || \"\";\n\n        this.renderDetailRegions(label);\n        this.changeRegion();\n    }\n\n    private renderDetailRegions(regionName: string) {\n        const detailRegionsElement = this.querySelector(\n            \".detailRegions\"\n        ) as HTMLElement;\n        if (!detailRegionsElement) return;\n\n        const regionObj = bookModel.regions[regionName];\n        const regionCodes = regionObj ? Object.values(regionObj) : [];\n\n        const template = document.querySelector(\n            \"#tp-detail-region\"\n        ) as HTMLTemplateElement;\n        if (!template) return;\n\n        detailRegionsElement.innerHTML = \"\";\n\n        const detailRegionData =\n            this.regionData?.detailRegion[regionName] || {};\n\n        const fragment = this.createDetailRegionElements(\n            detailRegionData,\n            template,\n            regionCodes\n        );\n\n        detailRegionsElement.appendChild(fragment);\n\n        this.region = regionName;\n        this.onChangeDetail();\n    }\n\n    private createDetailRegionElements(\n        detailRegionData: { [key: string]: string },\n        template: HTMLTemplateElement,\n        regionCodes: string[]\n    ): DocumentFragment {\n        const fragment = new DocumentFragment();\n\n        for (const [key, value] of Object.entries(detailRegionData)) {\n            const element = cloneTemplate(template);\n            const spanElement = element.querySelector(\"span\");\n            if (spanElement) spanElement.textContent = key;\n            const input = element.querySelector<HTMLInputElement>(\"input\");\n            if (input) {\n                input.value = value;\n                if (regionCodes.includes(value)) {\n                    input.checked = true;\n                    fragment.insertBefore(element, fragment.firstChild);\n                } else {\n                    fragment.appendChild(element);\n                }\n            }\n        }\n        return fragment;\n    }\n\n    private changeRegion() {\n        const regionRadios = this.querySelectorAll(\"[name=favorite-region]\");\n        Array.from(regionRadios).forEach((radio: Element) => {\n            const inputRadio = radio as HTMLInputElement;\n            inputRadio.addEventListener(\"change\", () => {\n                if (inputRadio.checked) {\n                    const labelElement =\n                        inputRadio.nextElementSibling as HTMLElement;\n                    const label = labelElement?.textContent || \"\";\n                    this.renderDetailRegions(label);\n                }\n            });\n        });\n    }\n\n    private onChangeDetail() {\n        const region = this.region;\n\n        if (!bookModel.regions[region]) {\n            bookModel.addRegion(region);\n        }\n        const checkboxes = document.querySelectorAll(\"[name=detailRegion]\");\n\n        checkboxes.forEach((checkbox: Element) => {\n            const inputCheckbox = checkbox as HTMLInputElement;\n            inputCheckbox.addEventListener(\"change\", () => {\n                const { value } = inputCheckbox;\n                const labelElement =\n                    inputCheckbox.nextElementSibling as HTMLElement;\n                const label = labelElement?.textContent || \"\";\n                if (inputCheckbox.checked) {\n                    bookModel.addDetailRegion(region, label, value);\n                } else {\n                    bookModel.removeDetailRegion(region, label);\n                }\n            });\n        });\n    }\n}\n", "import bookModel from \"../../model\";\nimport { cloneTemplate } from \"../../utils/helpers\";\n\nexport default class FavoriteRegions extends HTMLElement {\n    private container: HTMLElement | null = null;\n    private template: HTMLTemplateElement | null = null;\n\n    constructor() {\n        super();\n        this.render = this.render.bind(this);\n    }\n\n    connectedCallback() {\n        this.container = this.querySelector(\".favorites\");\n        this.template = this.querySelector(\"#tp-favorites-stored\");\n\n        this.render();\n\n        bookModel.subscribeToBookStateUpdate(this.render);\n        bookModel.subscribeDetailRegionUpdate(this.render);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeToBookStateUpdate(this.render);\n        bookModel.unsubscribeDetailRegionUpdate(this.render);\n    }\n\n    private render() {\n        if (!this.container) return;\n\n        this.container.innerHTML = \"\";\n        const regions = bookModel.regions;\n\n        const fragment = new DocumentFragment();\n        for (const [name, detailRegions] of Object.entries(regions)) {\n            const itemElement = this.createElement(\n                name,\n                detailRegions\n            ) as HTMLElement;\n            fragment.appendChild(itemElement);\n        }\n        this.container.appendChild(fragment);\n    }\n\n    private createElement(name: string, detailRegions: IRegionData) {\n        if (!this.template) return;\n        const itemElement = cloneTemplate(this.template);\n        const titleElement = itemElement.querySelector(\n            \".subTitle\"\n        ) as HTMLElement;\n        titleElement.textContent = name;\n        const regions = this.renderDetail(detailRegions);\n        itemElement.querySelector(\".regions\")?.appendChild(regions);\n        return itemElement;\n    }\n\n    private renderDetail(detailRegions: IRegionData) {\n        const fragment = new DocumentFragment();\n        for (const [region, code] of Object.entries(detailRegions)) {\n            const element = document.createElement(\"span\");\n            element.textContent = region;\n            element.dataset.code = code;\n            fragment.appendChild(element);\n        }\n        return fragment;\n    }\n}\n", "import { CustomFetch } from \"../../utils/index\";\nimport bookModel from \"../../model\";\nconst SAMPLE_JSON_URL = `../../../assets/json/storage-sample.json`;\n\nexport default class SetStorage extends HTMLElement {\n    private saveButton: HTMLButtonElement;\n    private defaultButton: HTMLButtonElement;\n    private resetButton: HTMLButtonElement;\n    private regisKeyTextarea: HTMLTextAreaElement;\n    private regisButton: HTMLButtonElement;\n\n    constructor() {\n        super();\n\n        this.saveButton = this.querySelector(\n            \".saveStorage button\"\n        ) as HTMLButtonElement;\n        this.defaultButton = this.querySelector(\n            \".localStorage button\"\n        ) as HTMLButtonElement;\n        this.resetButton = this.querySelector(\n            \".resetStorage button\"\n        ) as HTMLButtonElement;\n        this.regisKeyTextarea = this.querySelector(\n            \".regisKey textarea\"\n        ) as HTMLTextAreaElement;\n        this.regisButton = this.querySelector(\n            \".regisKey button\"\n        ) as HTMLButtonElement;\n    }\n\n    connectedCallback() {\n        this.saveButton.addEventListener(\"click\", this.saveStorage);\n        this.defaultButton.addEventListener(\"click\", this.setDefaultState);\n        this.resetButton.addEventListener(\"click\", this.resetStorage);\n        this.regisButton.addEventListener(\"click\", this.regisKey);\n    }\n\n    disconnectedCallback() {\n        this.saveButton.removeEventListener(\"click\", this.saveStorage);\n        this.defaultButton.removeEventListener(\"click\", this.setDefaultState);\n        this.regisButton.removeEventListener(\"click\", this.resetStorage);\n        this.regisButton.removeEventListener(\"click\", this.regisKey);\n    }\n\n    private saveStorage = () => {\n        // Blob \uAC1D\uCCB4 \uC0DD\uC131\n        const blob = new Blob([JSON.stringify(bookModel.state)], {\n            type: \"application/json\",\n        });\n\n        // a \uD0DC\uADF8\uB97C \uC0DD\uC131\uD558\uC5EC \uB2E4\uC6B4\uB85C\uB4DC \uB9C1\uD06C\uB85C \uC0AC\uC6A9\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = \"storage-sample.json\"; // \uD30C\uC77C\uBA85 \uC9C0\uC815\n\n        // a \uD0DC\uADF8\uB97C \uD074\uB9AD\uD558\uC5EC \uB2E4\uC6B4\uB85C\uB4DC \uC2DC\uC791\n        a.click();\n\n        // URL.createObjectURL()\uB85C \uC0DD\uC131\uB41C URL \uD574\uC81C\n        URL.revokeObjectURL(a.href);\n    };\n\n    private setDefaultState = async () => {\n        try {\n            const data = await CustomFetch.fetch<IBookState>(SAMPLE_JSON_URL);\n\n            bookModel.state = data;\n\n            console.log(\"Saved local stronage by base data!\");\n        } catch (error) {\n            console.error(error);\n            throw new Error(\"Fail to get storage sample data.\");\n        }\n    };\n\n    private resetStorage = () => {\n        bookModel.resetState();\n    };\n\n    private regisKey = async () => {\n        const keyString = this.regisKeyTextarea.value;\n        if (!this.validateKey(keyString)) return;\n\n        const key = keyString.replace(/\\n/g, \"aaaaa\");\n        const response = await CustomFetch.fetch<any>(`/regis-key?key=${key}`);\n\n        if (response) {\n            console.log(\"success\");\n        }\n    };\n\n    private validateKey(keyString: string) {\n        if (keyString.length > 0) {\n            const names = [\n                \"LIBRARY_KEY\",\n                \"NAVER_CLIENT_ID\",\n                \"NAVER_SECRET_KEY\",\n            ];\n\n            return names.every((n) => keyString.includes(n));\n        } else return false;\n    }\n}\n", "import { NavGnb } from \"../../components/index\";\nimport AppSetting from \"./AppSetting\";\nimport SetRegion from \"./SetRegion\";\nimport SetDetailRegion from \"./SetDetailRegion\";\nimport FavoriteRegions from \"./FavoriteRegions\";\nimport SetStorage from \"./SetStorage\";\n\ncustomElements.define(\"nav-gnb\", NavGnb);\ncustomElements.define(\"app-setting\", AppSetting);\ncustomElements.define(\"set-region\", SetRegion);\ncustomElements.define(\"set-detail-region\", SetDetailRegion);\ncustomElements.define(\"favorite-regions\", FavoriteRegions);\ncustomElements.define(\"set-storage\", SetStorage);\n"],
  "mappings": "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",
  "names": ["document", "IntersectionObserver", "win", "frame"]
}
