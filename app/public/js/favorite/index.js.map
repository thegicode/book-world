{
  "version": 3,
  "sources": ["../../../src/scripts/components/BookDescription.ts", "../../../src/scripts/components/BookImage.ts", "../../../src/scripts/model/constants.ts", "../../../src/scripts/utils/Publisher.ts", "../../../src/scripts/model/FavoriteModel.ts", "../../../src/scripts/model/LibraryModel.ts", "../../../src/scripts/model/RegionModel.ts", "../../../src/scripts/model/index.ts", "../../../src/scripts/components/CategorySelector.ts", "../../../src/scripts/utils/CustomEventEmitter.ts", "../../../src/scripts/utils/CustomFetch.ts", "../../../../node_modules/intersection-observer/intersection-observer.js", "../../../src/scripts/components/LibraryBookExist.ts", "../../../src/scripts/components/NavGnb.ts", "../../../src/scripts/components/LoadingComponent.ts", "../../../src/scripts/utils/helpers.ts", "../../../src/scripts/pages/favorite/FavoriteItemUI.ts", "../../../src/scripts/pages/favorite/FavoriteItem.ts", "../../../src/scripts/pages/favorite/Favorite.ts", "../../../src/scripts/pages/favorite/FavoriteNav.ts", "../../../src/scripts/pages/favorite/OverlayCategory.ts", "../../../src/scripts/pages/favorite/KyoboInfo.ts", "../../../src/scripts/pages/favorite/index.ts"],
  "sourcesContent": ["export default class BookDescription extends HTMLElement {\n    protected el: HTMLElement | null;\n    protected button: HTMLElement | null;\n\n    constructor() {\n        super();\n        this.el = null;\n        this.button = null;\n    }\n\n    set data(value: string) {\n        this.render(value);\n    }\n\n    connectedCallback(): void {\n        this.render(this.data);\n    }\n\n    disconnectedCallback(): void {\n        if (this.button)\n            this.button.removeEventListener(\n                \"click\",\n                this.onButtonClick.bind(this)\n            );\n    }\n\n    protected render(value: string): void {\n        const template = `\n            <p class=\"description\" data-ellipsis=\"true\">${value}</p>\n            <button type=\"button\" class=\"more-description-button\">\uC124\uBA85 \uB354\uBCF4\uAE30</button>`;\n        this.innerHTML = template;\n\n        this.el = this.querySelector(\".description\");\n        this.button = this.querySelector(\".more-description-button\");\n\n        if (this.button)\n            this.button.addEventListener(\n                \"click\",\n                this.onButtonClick.bind(this)\n            );\n\n        // if(this.isEllipsisActive(this.el)) {\n        //     this.button.ariaHidden = false\n        // }\n    }\n\n    // isEllipsisActive(el) {\n    //     return (el.offsetHeight < el.scrollHeight);\n    // }\n\n    protected onButtonClick(): void {\n        if (!this.el) return;\n\n        switch (this.el.dataset.ellipsis) {\n            case \"true\":\n                this.el.dataset.ellipsis = \"false\";\n                if (this.button) this.button.textContent = \"\uC124\uBA85 \uC811\uAE30\";\n                break;\n            case \"false\":\n                this.el.dataset.ellipsis = \"true\";\n                if (this.button) this.button.textContent = \"\uC124\uBA85 \uB354\uBCF4\uAE30\";\n                break;\n        }\n    }\n}\n", "export default class BookImage extends HTMLElement {\n    private image: HTMLImageElement | null = null;\n\n    constructor(url: string, name: string) {\n        super();\n\n        this.render(url, name);\n    }\n\n    // connectedCallback() {}\n\n    render(url: string, name: string) {\n        const imagge = document.createElement(\"img\");\n        imagge.className = \"thumb\";\n        imagge.src = url;\n        imagge.alt = name;\n\n        imagge.onerror = this.onError.bind(this);\n\n        this.image = imagge;\n\n        this.appendChild(imagge);\n    }\n\n    onError() {\n        this.dataset.fail = \"true\";\n        console.error(`Failed to load image`);\n        this.image?.remove();\n    }\n}\n", "export const STORAGE_NAME = \"BookWorld\";\n", "export default class Publisher<T = undefined> {\n    private subscribers: TSubscriberCallback<T>[] = [];\n\n    subscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers.push(callback);\n    }\n\n    unsubscribe(callback: TSubscriberCallback<T>) {\n        this.subscribers = this.subscribers.filter(\n            (subscriber) => subscriber !== callback\n        );\n    }\n\n    notify(payload?: T) {\n        this.subscribers.forEach((callback) => callback(payload));\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class FavoriteModel {\n    private _favorites: TFavoriteFavorites;\n    private _sortedKeys: TSortedFavoriteKeys;\n    private categoriesUpdatePublisher: Publisher<IFavoritesUpdateProps> =\n        new Publisher();\n    private bookUpdatePublisher: Publisher = new Publisher();\n\n    constructor(\n        categories: TFavoriteFavorites,\n        sortedKeys: TSortedFavoriteKeys\n    ) {\n        this._favorites = categories || {};\n        this._sortedKeys = sortedKeys || [];\n    }\n\n    get favorites(): TFavoriteFavorites {\n        return { ...this._favorites };\n    }\n\n    set favorites(newCategories: TFavoriteFavorites) {\n        this._favorites = newCategories;\n    }\n\n    get sortedKeys(): TSortedFavoriteKeys {\n        return [...this._sortedKeys];\n    }\n\n    set sortedKeys(newKeys: TSortedFavoriteKeys) {\n        this._sortedKeys = newKeys;\n    }\n\n    add(name: string) {\n        this._favorites[name] = [];\n        this.categoriesUpdatePublisher.notify({\n            type: \"add\",\n            payload: { name },\n        });\n    }\n\n    addSortedKeys(name: string) {\n        this._sortedKeys.push(name);\n    }\n\n    rename(prevName: string, newName: string) {\n        if (prevName in this._favorites) {\n            this._favorites[newName] = this._favorites[prevName];\n            delete this._favorites[prevName];\n\n            this.categoriesUpdatePublisher.notify({\n                type: \"rename\",\n                payload: { prevName, newName },\n            });\n        }\n    }\n\n    renameSortedKeys(prevName: string, newName: string) {\n        const index = this._sortedKeys.indexOf(prevName);\n        if (index !== -1) {\n            this._sortedKeys[index] = newName;\n        }\n    }\n\n    change(draggedKey: string, targetKey: string) {\n        const draggedIndex = this._sortedKeys.indexOf(draggedKey);\n        const targetIndex = this._sortedKeys.indexOf(targetKey);\n        this._sortedKeys[targetIndex] = draggedKey;\n        this._sortedKeys[draggedIndex] = targetKey;\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"change\",\n            payload: {\n                targetIndex,\n                draggedIndex,\n            },\n        });\n    }\n\n    delete(name: string) {\n        delete this._favorites[name];\n\n        this.categoriesUpdatePublisher.notify({\n            type: \"delete\",\n            payload: { name },\n        });\n    }\n\n    deleteSortedKeys(name: string): number {\n        const index = this._sortedKeys.indexOf(name);\n        this._sortedKeys.splice(index, 1);\n        return index;\n    }\n\n    has(name: string) {\n        return name in this._favorites;\n    }\n\n    addBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            this._favorites[name].unshift(isbn);\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    hasBook(name: string, isbn: string) {\n        return name in this._favorites && this._favorites[name].includes(isbn);\n    }\n\n    removeBook(name: string, isbn: string) {\n        if (name in this._favorites) {\n            const index = this._favorites[name].indexOf(isbn);\n            if (index != -1) {\n                this._favorites[name].splice(index, 1);\n            }\n        }\n\n        this.bookUpdatePublisher.notify();\n    }\n\n    subscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.subscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n    unsubscribeCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.categoriesUpdatePublisher.unsubscribe(\n            subscriber as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n\n    subscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeBookUpdate(subscriber: TSubscriberVoid) {\n        this.bookUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class LibraryModel {\n    private _libraries: TLibraries;\n    private publisher: Publisher<TLibraryUpdateProps> = new Publisher();\n\n    constructor(libraries: TLibraries) {\n        this._libraries = libraries;\n    }\n\n    get libraries() {\n        return { ...this._libraries };\n    }\n\n    set libraries(newLibries: TLibraries) {\n        this._libraries = newLibries;\n    }\n\n    add(code: string, name: string) {\n        this._libraries[code] = name;\n        this.publisher.notify({\n            type: \"add\",\n            payload: {\n                code,\n                name,\n            },\n        });\n    }\n\n    remove(code: string) {\n        delete this._libraries[code];\n        this.publisher.notify({\n            type: \"delete\",\n            payload: {\n                code,\n            },\n        });\n    }\n\n    has(code: string) {\n        return code in this._libraries;\n    }\n\n    subscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n\n    unsubscribeUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.publisher.subscribe(\n            subscriber as TSubscriberCallback<TLibraryUpdateProps>\n        );\n    }\n}\n", "import Publisher from \"../utils/Publisher\";\n\nexport default class RegionModel {\n    private _regions: TRegions;\n    private updatePublisher: Publisher = new Publisher();\n    private detailUpdatePublisher: Publisher = new Publisher();\n\n    constructor(regions: TRegions) {\n        this._regions = regions;\n    }\n\n    get regions() {\n        return { ...this._regions };\n    }\n\n    set regions(newRegions: TRegions) {\n        this._regions = newRegions;\n    }\n\n    add(name: string) {\n        this._regions[name] = {};\n\n        this.updatePublisher.notify();\n    }\n\n    remove(name: string) {\n        delete this._regions[name];\n\n        this.updatePublisher.notify();\n    }\n\n    addDetail(regionName: string, detailName: string, detailCode: string) {\n        if (regionName in this._regions) {\n            this._regions[regionName][detailName] = detailCode;\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    removeDetail(regionName: string, detailName: string) {\n        if (\n            regionName in this._regions &&\n            detailName in this._regions[regionName]\n        ) {\n            delete this._regions[regionName][detailName];\n        }\n\n        this.detailUpdatePublisher.notify();\n    }\n\n    subscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.updatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.subscribe(subscriber);\n    }\n\n    unsubscribeDetailUpdatePublisher(subscriber: TSubscriberVoid) {\n        this.detailUpdatePublisher.unsubscribe(subscriber);\n    }\n}\n", "import { STORAGE_NAME } from \"./constants\";\nimport Publisher from \"../utils/Publisher\";\nimport FavoriteModel from \"./FavoriteModel\";\nimport LibraryModel from \"./LibraryModel\";\nimport RegionModel from \"./RegionModel\";\n\nconst cloneDeep = <T>(obj: T): T => {\n    return JSON.parse(JSON.stringify(obj));\n};\n\nconst initialState: IBookState = {\n    favorites: {},\n    sortedFavoriteKeys: [],\n    libraries: {},\n    regions: {},\n};\n\nclass BookModel {\n    private favoriteModel: FavoriteModel;\n    private libraryModel: LibraryModel;\n    private regionModel: RegionModel;\n    private bookStateUpdatePublisher: Publisher = new Publisher();\n\n    constructor() {\n        const state = this.loadStorage() || cloneDeep(initialState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = state;\n        this.favoriteModel = new FavoriteModel(favorites, sortedFavoriteKeys);\n        this.libraryModel = new LibraryModel(libraries);\n        this.regionModel = new RegionModel(regions);\n    }\n\n    // localStorage \uAD00\uB828\n    private loadStorage() {\n        const storageData = localStorage.getItem(STORAGE_NAME);\n        return storageData ? JSON.parse(storageData) : null;\n    }\n\n    private setStorage(newState: IBookState) {\n        try {\n            localStorage.setItem(STORAGE_NAME, JSON.stringify(newState));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // state \uAD00\uB828\n\n    get state() {\n        return this.loadStorage();\n    }\n\n    set state(newState: IBookState) {\n        this.setStorage(newState);\n\n        const { favorites, sortedFavoriteKeys, libraries, regions } = newState;\n        this.favoriteModel.favorites = favorites;\n        this.favoriteModel.sortedKeys = sortedFavoriteKeys;\n        this.libraryModel.libraries = libraries;\n        this.regionModel.regions = regions;\n\n        this.bookStateUpdatePublisher.notify();\n\n        console.log(\"set state\");\n    }\n\n    get favorites() {\n        return this.favoriteModel.favorites;\n    }\n\n    get sortedFavoriteKeys() {\n        return this.favoriteModel.sortedKeys;\n    }\n\n    get libraries() {\n        return this.libraryModel.libraries;\n    }\n\n    get regions() {\n        return this.regionModel.regions;\n    }\n\n    resetState() {\n        this.state = initialState;\n    }\n\n    // favorites \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setFavorites() {\n        const newState = this.state;\n        newState.favorites = this.favorites;\n        newState.sortedFavoriteKeys = this.sortedFavoriteKeys;\n        this.setStorage(newState);\n    }\n\n    addfavorite(name: string) {\n        this.favoriteModel.add(name);\n        this.favoriteModel.addSortedKeys(name);\n\n        this.setFavorites();\n    }\n\n    renameFavorite(prevName: string, newName: string) {\n        this.favoriteModel.rename(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    renameSortedFavoriteKey(prevName: string, newName: string) {\n        this.favoriteModel.renameSortedKeys(prevName, newName);\n\n        this.setFavorites();\n    }\n\n    deleteFavorite(name: string) {\n        this.favoriteModel.delete(name);\n\n        this.setFavorites();\n    }\n\n    deleteSortedFavoriteKey(name: string) {\n        const index = this.favoriteModel.deleteSortedKeys(name);\n\n        this.setFavorites();\n        return index;\n    }\n\n    hasFavorite(name: string) {\n        return this.favoriteModel.has(name);\n    }\n\n    changeFavorite(draggedKey: string, targetKey: string) {\n        this.favoriteModel.change(draggedKey, targetKey);\n\n        this.setFavorites();\n    }\n\n    addFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.addBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    hasFavoriteBook(name: string, isbn: string) {\n        return this.favoriteModel.hasBook(name, isbn);\n    }\n\n    removeFavoriteBook(name: string, isbn: string) {\n        this.favoriteModel.removeBook(name, isbn);\n\n        this.setFavorites();\n    }\n\n    // Library \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setLibraries() {\n        const newState = this.state;\n        newState.libraries = this.libraries;\n        this.setStorage(newState);\n    }\n\n    addLibraries(code: string, name: string) {\n        this.libraryModel.add(code, name);\n\n        this.setLibraries();\n    }\n\n    removeLibraries(code: string) {\n        this.libraryModel.remove(code);\n\n        this.setLibraries();\n    }\n\n    hasLibrary(code: string) {\n        return this.libraryModel.has(code);\n    }\n\n    // Region \uAD00\uB828 \uBA54\uC11C\uB4DC\n\n    setRegions() {\n        const newState = this.state;\n        newState.regions = this.regions;\n        this.setStorage(newState);\n    }\n\n    addRegion(name: string) {\n        this.regionModel.add(name);\n\n        this.setRegions();\n    }\n\n    removeRegion(name: string) {\n        this.regionModel.remove(name);\n\n        this.setRegions();\n    }\n\n    addDetailRegion(\n        regionName: string,\n        detailName: string,\n        detailCode: string\n    ) {\n        this.regionModel.addDetail(regionName, detailName, detailCode);\n\n        this.setRegions();\n    }\n\n    removeDetailRegion(regionName: string, detailName: string) {\n        this.regionModel.removeDetail(regionName, detailName);\n\n        this.setRegions();\n    }\n\n    // subscribe\n\n    subscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.subscribe(subscriber);\n    }\n    unsubscribeToBookStateUpdate(subscriber: TSubscriberVoid) {\n        this.bookStateUpdatePublisher.unsubscribe(subscriber);\n    }\n\n    subscribeFavoriteCategoriesUpdate(subscriber: TFavoritesUpdateSubscriber) {\n        this.favoriteModel.subscribeCategoriesUpdate(subscriber);\n    }\n    unsubscribeFavoriteCategoriesUpdate(\n        subscriber: TFavoritesUpdateSubscriber\n    ) {\n        this.favoriteModel.unsubscribeCategoriesUpdate(subscriber);\n    }\n\n    subscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.subscribeBookUpdate(subscriber);\n    }\n    unsubscribeFavoriteBookUpdate(subscriber: TSubscriberVoid) {\n        this.favoriteModel.unsubscribeBookUpdate(subscriber);\n    }\n\n    subscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.subscribeUpdate(subscriber);\n    }\n    unsubscribeLibraryUpdate(subscriber: TLibrarysUpdateSubscriber) {\n        this.libraryModel.unsubscribeUpdate(subscriber);\n    }\n\n    subscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeUpdatePublisher(subscriber);\n    }\n    unsubscribeRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeUpdatePublisher(subscriber);\n    }\n\n    subscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.subscribeDetailUpdatePublisher(subscriber);\n    }\n    unsubscribeDetailRegionUpdate(subscriber: TSubscriberVoid) {\n        this.regionModel.unsubscribeDetailUpdatePublisher(subscriber);\n    }\n}\n\nconst bookModel = new BookModel();\n\nexport default bookModel;\n", "import bookModel from \"../model\";\n\nexport default class CategorySelector extends HTMLElement {\n    protected isbn: string | null;\n    private container: HTMLElement | null;\n    button: HTMLButtonElement | null;\n\n    constructor() {\n        super();\n\n        this.isbn = this.getISBN();\n        this.button = null;\n        this.container = null;\n\n        this.onClickCategory = this.onClickCategory.bind(this);\n        this.handleCategoryUpdate = this.handleCategoryUpdate.bind(this);\n    }\n\n    connectedCallback() {\n        this.button = this.createButton();\n        this.container = this.createContainer();\n\n        this.render();\n\n        this.button?.addEventListener(\"click\", this.onClickCategory);\n        bookModel.subscribeFavoriteCategoriesUpdate(this.handleCategoryUpdate);\n    }\n\n    protected render() {\n        if (!this.container || !this.button) return;\n\n        bookModel.sortedFavoriteKeys\n            .map(\n                (category: string) =>\n                    this.createCategoryItem(category) as HTMLLabelElement\n            )\n            .forEach((label) => this.container?.appendChild(label));\n\n        this.appendChild(this.container);\n        this.appendChild(this.button);\n    }\n\n    private createButton() {\n        const button = document.createElement(\"button\");\n        button.className = \"category-button\";\n        button.textContent = \"Category\";\n        return button;\n    }\n\n    private createContainer() {\n        const container = document.createElement(\"div\");\n        container.className = \"category\";\n        container.hidden = true;\n        return container;\n    }\n\n    private createCategoryItem = (category: string) => {\n        if (!this.container) return;\n\n        const label = document.createElement(\"label\");\n        const checkbox = this.createCheckbox(category);\n        const span = document.createElement(\"span\");\n        span.textContent = category;\n\n        label.appendChild(checkbox);\n        label.appendChild(span);\n\n        return label;\n    };\n\n    onClickCategory() {\n        const el = this.querySelector(\".category\") as HTMLElement;\n        el.hidden = !el.hidden;\n    }\n\n    private getISBN(): string | null {\n        const isbnElement = this.closest(\"[data-isbn]\") as HTMLElement;\n        return isbnElement && isbnElement.dataset.isbn\n            ? isbnElement.dataset.isbn\n            : null;\n    }\n\n    private createCheckbox(category: string) {\n        const ISBN = this.isbn || \"\";\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        if (bookModel.hasFavoriteBook(category, ISBN)) {\n            checkbox.checked = true;\n        }\n\n        checkbox.addEventListener(\"change\", () =>\n            this.onChange(checkbox, category)\n        );\n\n        return checkbox;\n    }\n\n    private onChange(checkbox: HTMLInputElement, category: string) {\n        const ISBN = this.isbn || \"\";\n        const isBookInCategory = bookModel.hasFavoriteBook(category, ISBN);\n\n        if (isBookInCategory) {\n            bookModel.removeFavoriteBook(category, ISBN);\n        } else {\n            bookModel.addFavoriteBook(category, ISBN);\n        }\n\n        checkbox.checked = !isBookInCategory;\n    }\n\n    private handleCategoryUpdate({\n        type,\n        payload,\n    }: {\n        type: string;\n        payload: ICategoryPayload;\n    }) {\n        const actions: Record<string, () => void> = {\n            add: () => this.handleAdd(payload.name as string),\n            rename: () => this.reanmeCategory(payload.newName as string),\n            change: () =>\n                this.changeCategory(\n                    payload.targetIndex as number,\n                    payload.draggedIndex as number\n                ),\n            delete: () => this.handleDelete(payload.name as string),\n        };\n\n        if (actions[type]) {\n            actions[type]();\n        } else {\n            console.error(\"no type\");\n        }\n    }\n\n    private handleAdd(name: string) {\n        this.container?.appendChild(\n            this.createCategoryItem(name as string) as HTMLLabelElement\n        );\n    }\n\n    private handleDelete(name: string) {\n        this.querySelectorAll(\"label span\").forEach((item, index) => {\n            if (item.textContent === name) {\n                this.querySelectorAll(\"label\")[index].remove();\n            }\n        });\n    }\n\n    private changeCategory(targetIndex: number, draggedIndex: number) {\n        const labels = this.querySelectorAll(\"label\");\n\n        const targetElement = this.createCategoryItem(\n            labels[draggedIndex].querySelector(\"span\")?.textContent as string\n        ) as HTMLLabelElement;\n        const dragElement = this.createCategoryItem(\n            labels[targetIndex].querySelector(\"span\")?.textContent as string\n        ) as HTMLLabelElement;\n\n        labels[targetIndex].replaceWith(targetElement);\n        labels[draggedIndex].replaceWith(dragElement);\n    }\n\n    private reanmeCategory(newName: string) {\n        const prevElement =\n            this.querySelectorAll(\"label\")[\n                bookModel.sortedFavoriteKeys.indexOf(newName)\n            ];\n\n        const newElement = this.createCategoryItem(newName) as HTMLLabelElement;\n\n        prevElement.replaceWith(newElement);\n    }\n}\n", "class CustomEventEmitter<T extends ICustomEventDetail> {\n    private _bus: HTMLElement;\n\n    constructor() {\n        this._bus = document.createElement(\"div\");\n    }\n\n    add(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.addEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    remove(event: string, callback: (event: ICustomEvent<T>) => void): void {\n        this._bus.removeEventListener(\n            event,\n            callback as EventListenerOrEventListenerObject\n        );\n    }\n\n    dispatch(event: string, detail: T = {} as T): void {\n        this._bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new CustomEventEmitter();\n", "\nclass CustomFetch {\n    defaultOptions: RequestInit\n\n    constructor(baseOptions: RequestInit = {}) {\n        this.defaultOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Bearer ${getToken()}`\n            },\n            ...baseOptions\n        }\n    }\n\n    async fetch<T = unknown>(url: string, options?: RequestInit): Promise<T> {\n        const finalOptions: RequestInit & { timeout?: number} = {\n            ...this.defaultOptions,\n            ...options,\n            timeout: 5000\n        }\n        try {\n            const response = await fetch(url, finalOptions)\n            if (!response.ok) {\n                throw new Error(`Http error! status: ${response.status}, message: ${response.statusText}`)\n            } \n            const data = await response.json()\n            return data as T\n        } catch(error: unknown) {\n            console.error(`Error fetching data: ${error}`)\n            throw new Error(`Error fetching data: ${error}`)\n\n        }\n    }\n}\n\nexport default new CustomFetch()\n", "/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n", "import { CustomFetch } from \"../utils/index\";\n\nexport default class LibraryBookExist extends HTMLElement {\n    protected container: Element;\n    protected itemTemplate: string;\n\n    constructor() {\n        super();\n        this.container = this.querySelector(\".library-list\") as Element;\n        this.itemTemplate = \"\";\n    }\n\n    connectedCallback(): void {\n        this.itemTemplate = this.template();\n    }\n\n    async onLibraryBookExist(\n        button: HTMLButtonElement | null,\n        isbn13: string,\n        library: Record<string, string>\n    ): Promise<void> {\n        const entries = Object.entries(library);\n        this.loading(entries.length);\n        if (button) button.disabled = true;\n\n        const promises = entries.map(async ([libCode, libName], index) => {\n            try {\n                const data = await CustomFetch.fetch<IBookExist>(\n                    `/book-exist?isbn13=${isbn13}&libCode=${libCode}`\n                );\n                this.renderBookExist(data, libName, index);\n            } catch (error) {\n                console.error(error);\n                throw new Error(`Fail to get usage analysis list.`);\n            }\n        });\n\n        try {\n            await Promise.all(promises);\n            this.removeLoading();\n        } catch (error) {\n            console.error(\"Failed to fetch data for some libraries\");\n        }\n    }\n\n    protected renderBookExist(\n        data: IBookExist,\n        libName: string,\n        index: number\n    ): void {\n        const { hasBook, loanAvailable } = data;\n\n        const loanAvailableText =\n            hasBook === \"Y\"\n                ? loanAvailable === \"Y\"\n                    ? \"| \uB300\uCD9C\uAC00\uB2A5\"\n                    : \"| \uB300\uCD9C\uBD88\uAC00\"\n                : \"\";\n\n        const element = this.querySelectorAll(\".library-item\")[\n            index\n        ] as HTMLElement;\n\n        (\n            element.querySelector(\".name\") as HTMLElement\n        ).textContent = `\u2219 ${libName} : `;\n\n        (element.querySelector(\".hasBook\") as HTMLElement).textContent =\n            hasBook === \"Y\" ? \"\uC18C\uC7A5\" : \"\uBBF8\uC18C\uC7A5\";\n\n        (element.querySelector(\".loanAvailable\") as HTMLElement).textContent =\n            loanAvailableText;\n    }\n\n    protected loading(size: number) {\n        let text = \"\";\n        while (size > 0) {\n            text += this.itemTemplate;\n            size--;\n        }\n        this.container.innerHTML = text;\n    }\n\n    protected removeLoading() {\n        (\n            this.querySelectorAll(\n                \".library-item[data-loading=true]\"\n            ) as NodeListOf<HTMLElement>\n        ).forEach((el) => {\n            delete el.dataset.loading;\n        });\n    }\n\n    protected template() {\n        return `<li class=\"library-item\" data-loading=\"true\">\n            <span class=\"name\"></span>\n            <span class=\"hasBook\"></span>\n            <span class=\"loanAvailable\"></span>\n        </li>`;\n    }\n}\n", "import bookModel from \"../model\";\n\nexport default class NavGnb extends HTMLElement {\n    private PATHS: string[];\n    private sizeElement: HTMLElement | null = null;\n\n    constructor() {\n        super();\n\n        this.PATHS = [\n            \"/search\",\n            \"/favorite\",\n            \"/popular\",\n            \"/library\",\n            \"/setting\",\n        ];\n\n        this.sizeElement = null;\n\n        this.renderBookSize = this.renderBookSize.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n        this.setSelectedMenu();\n\n        this.sizeElement = this.querySelector(\".size\") as HTMLElement;\n\n        bookModel.subscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.subscribeToBookStateUpdate(this.renderBookSize);\n    }\n\n    disconnectedCallback() {\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n        bookModel.unsubscribeFavoriteBookUpdate(this.renderBookSize);\n    }\n\n    get bookSize() {\n        return Object.values(bookModel.favorites).reduce(\n            (sum, currentArray: string[]) => sum + currentArray.length,\n            0\n        );\n    }\n\n    protected render() {\n        this.innerHTML = `\n            <nav class=\"gnb\">\n                <a class=\"gnb-item\" href=\".${this.PATHS[0]}\">\uCC45 \uAC80\uC0C9</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[1]}\">\uB098\uC758 \uCC45 (<span class=\"size\">${this.bookSize}</span>)</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[2]}\">\uC778\uAE30\uB300\uCD9C\uB3C4\uC11C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[3]}\">\uB3C4\uC11C\uAD00 \uC870\uD68C</a>\n                <a class=\"gnb-item\" href=\".${this.PATHS[4]}\">\uC124\uC815</a>\n            </nav>`;\n    }\n\n    protected setSelectedMenu(): void {\n        const index = this.PATHS.indexOf(document.location.pathname);\n        if (index >= 0) this.querySelectorAll(\"a\")[index].ariaSelected = \"true\";\n    }\n\n    protected renderBookSize() {\n        if (this.sizeElement)\n            this.sizeElement.textContent = this.bookSize.toString();\n    }\n}\n", "export default class LoadingComponent extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    show() {\n        this.removeAttribute(\"hidden\");\n    }\n\n    hide() {\n        this.setAttribute(\"hidden\", \"\");\n    }\n}\n\ncustomElements.define(\"loading-component\", LoadingComponent);\n", "export function getCurrentDates() {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n    const currentDay = String(currentDate.getDate()).padStart(2, \"0\");\n\n    return {\n        currentDate,\n        currentYear,\n        currentMonth,\n        currentDay,\n    };\n}\n\nexport function cloneTemplate<T extends HTMLElement>(\n    template: HTMLTemplateElement\n) {\n    const content = template.content.firstElementChild;\n    if (!content) {\n        throw new Error(\"Template content is empty\");\n    }\n    return content.cloneNode(true) as T;\n}\n\nexport function fillElementsWithData<T>(data: T, container: HTMLElement) {\n    Object.entries(data as Record<string, unknown>).forEach(([key, value]) => {\n        const element = container.querySelector(`.${key}`) as HTMLElement;\n        element.textContent = String(value);\n    });\n}\n\nexport async function fetchHTMLTemplate(url: string) {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\n                `Failed to fetch template: ${response.status} ${response.statusText}`\n            );\n        }\n        return await response.text();\n    } catch (error) {\n        console.error(\"Error fetching HTML template:\", error);\n        return null;\n    }\n}\n\nexport async function parseHTMLTemplate(html: string) {\n    try {\n        const doc = new DOMParser().parseFromString(html, \"text/html\");\n        return doc.querySelector(\"template\");\n    } catch (error) {\n        console.error(\"Error parsing HTML template:\", error);\n        return null;\n    }\n}\n", "import { BookDescription, BookImage } from \"../../components\";\nimport bookModel from \"../../model\";\nimport { fillElementsWithData } from \"../../utils/helpers\";\nimport FavoriteItem from \"./FavoriteItem\";\n\nexport default class FavoriteItemUI {\n    private component: FavoriteItem;\n\n    constructor(component: FavoriteItem) {\n        this.component = component;\n    }\n\n    render({\n        bookImageURL,\n        bookname,\n        description,\n        isbn13,\n        ...otherData\n    }: IBook) {\n        const linkElement = this.component.querySelector(\n            \".book-summary a\"\n        ) as HTMLElement;\n        linkElement.appendChild(new BookImage(bookImageURL, bookname));\n\n        const descNode = this.component.querySelector(\n            \"book-description\"\n        ) as BookDescription;\n        descNode.data = description;\n\n        const anchorEl = this.component.querySelector(\"a\") as HTMLAnchorElement;\n        anchorEl.href = `/book?isbn=${isbn13}`;\n\n        const others = {\n            ...otherData,\n            bookname,\n            isbn13,\n        };\n        fillElementsWithData(others, this.component);\n\n        if (\n            this.component.libraryButton &&\n            Object.keys(bookModel.libraries).length === 0\n        ) {\n            this.component.libraryButton.hidden = true;\n        }\n    }\n\n    renderError() {\n        this.component.dataset.fail = \"true\";\n        (\n            this.component.querySelector(\".bookname\") as HTMLElement\n        ).textContent = `ISBN : ${this.component.isbn}`;\n        (this.component.querySelector(\".authors\") as HTMLElement).textContent =\n            \"\uC815\uBCF4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.\";\n    }\n\n    updateOnLibrary() {\n        if (this.component.libraryButton)\n            this.component.libraryButton.hidden = true;\n\n        if (this.component.libraryHideButton) {\n            this.component.libraryHideButton.hidden = false;\n        }\n\n        if (this.component.libraryBookExist)\n            this.component.libraryBookExist.hidden = false;\n    }\n\n    updateOnHideLibrary() {\n        if (this.component.libraryButton) {\n            this.component.libraryButton.disabled = false;\n            this.component.libraryButton.hidden = false;\n        }\n\n        if (this.component.libraryHideButton) {\n            this.component.libraryHideButton.hidden = true;\n        }\n\n        if (this.component.libraryBookExist)\n            this.component.libraryBookExist.hidden = true;\n    }\n}\n", "import { CustomFetch } from \"../../utils/index\";\nimport { LibraryBookExist, LoadingComponent } from \"../../components/index\";\nimport bookModel from \"../../model\";\nimport FavoriteItemUI from \"./FavoriteItemUI\";\nimport KyoboInfo from \"./KyoboInfo\";\n\nexport default class FavoriteItem extends HTMLElement {\n    private loadingComponent: LoadingComponent | null = null;\n    private _isbn: string | null = null;\n    private kyoboButton: HTMLButtonElement | null = null;\n    private kyoboInfoCpnt: KyoboInfo | null = null;\n    private ui: FavoriteItemUI;\n\n    libraryBookExist?: LibraryBookExist | null;\n    libraryButton?: HTMLButtonElement | null = null;\n    libraryHideButton?: HTMLButtonElement | null;\n\n    constructor(isbn: string) {\n        super();\n        this._isbn = isbn;\n        this.ui = new FavoriteItemUI(this);\n\n        this.onLibrary = this.onLibrary.bind(this);\n        this.onHideLibrary = this.onHideLibrary.bind(this);\n        this.onShowKyobo = this.onShowKyobo.bind(this);\n    }\n\n    get isbn() {\n        return this._isbn;\n    }\n\n    connectedCallback() {\n        this.loadingComponent = this.querySelector(\"loading-component\");\n        this.libraryButton = this.querySelector(\".library-button\");\n        this.libraryHideButton = this.querySelector(\".hide-button\");\n        this.libraryBookExist = this.querySelector(\"library-book-exist\");\n        this.kyoboButton = this.querySelector(\".kyoboInfo-button\");\n        this.kyoboInfoCpnt = this.querySelector(\"kyobo-info\");\n\n        this.fetchData();\n\n        this.libraryButton?.addEventListener(\"click\", this.onLibrary);\n        this.libraryHideButton?.addEventListener(\"click\", this.onHideLibrary);\n        this.kyoboButton?.addEventListener(\"click\", this.onShowKyobo);\n    }\n\n    disconnectedCallback() {\n        this.libraryButton?.removeEventListener(\"click\", this.onLibrary);\n        this.libraryHideButton?.removeEventListener(\n            \"click\",\n            this.onHideLibrary\n        );\n    }\n\n    protected async fetchData() {\n        const url = `/usage-analysis-list?isbn13=${this._isbn}`;\n        try {\n            const data = await CustomFetch.fetch<IUsageAnalysisResult>(url);\n            this.renderUI(data.book);\n        } catch (error) {\n            this.ui.renderError();\n            console.error(`${error}, Fail to get usage-analysis-list.`);\n        }\n\n        this.loadingComponent?.hide();\n    }\n\n    protected renderUI(book: IBook) {\n        delete book.vol;\n        this.ui.render(book);\n    }\n\n    private onLibrary() {\n        if (!this.libraryBookExist || !this.libraryButton) return;\n\n        this.libraryBookExist.onLibraryBookExist(\n            this.libraryButton,\n            this._isbn as string,\n            bookModel.libraries\n        );\n\n        this.ui.updateOnLibrary();\n    }\n\n    onHideLibrary() {\n        const list = this.libraryBookExist?.querySelector(\n            \"ul\"\n        ) as HTMLUListElement;\n\n        list.innerHTML = \"\";\n\n        this.ui.updateOnHideLibrary();\n    }\n\n    private onShowKyobo() {\n        this.kyoboInfoCpnt?.show();\n    }\n}\n", "import bookModel from \"../../model\";\nimport { cloneTemplate } from \"../../utils/helpers\";\nimport FavoriteItem from \"./FavoriteItem\";\n\nexport default class Favorite extends HTMLElement {\n    private currentCategory: string | null;\n    private listElement: HTMLElement | null;\n    private itemTemplate: HTMLTemplateElement;\n    private messageTemplate: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this.currentCategory = new URLSearchParams(location.search).get(\n            \"category\"\n        );\n        this.listElement = this.querySelector(\".favorite-books\");\n        this.itemTemplate = document.querySelector(\n            \"#tp-favorite-item\"\n        ) as HTMLTemplateElement;\n        this.messageTemplate = document.querySelector(\n            \"#tp-message\"\n        ) as HTMLTemplateElement;\n\n        // this.subscribeCategoryChange = this.subscribeCategoryChange.bind(this);\n    }\n\n    connectedCallback() {\n        const isbnsOfCategory = this.getIsbnsOfCategory();\n        if (isbnsOfCategory) this.render(isbnsOfCategory);\n\n        // bookModel.subscribeFavoriteCategoriesUpdate(\n        //     this\n        //         .subscribeCategoryChange as TSubscriberCallback<IFavoritesUpdateProps>\n        // );\n    }\n\n    disconnectedCallback() {\n        //\n    }\n\n    private getIsbnsOfCategory(): string[] | undefined {\n        const categoryKeys = bookModel.sortedFavoriteKeys;\n        if (categoryKeys.length === 0) {\n            this.renderMessage(\"\uAD00\uC2EC \uCE74\uD14C\uACE0\uB9AC\uB97C \uB4F1\uB85D\uD574\uC8FC\uC138\uC694.\");\n            return;\n        }\n\n        const isbnsOfCategory =\n            bookModel.favorites[this.currentCategory || categoryKeys[0]];\n        if (isbnsOfCategory.length === 0) {\n            this.renderMessage(\"\uB4F1\uB85D\uB41C \uAD00\uC2EC\uCC45\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.\");\n            return;\n        }\n\n        return isbnsOfCategory;\n    }\n\n    private render(isbnsOfCategory: string[]) {\n        if (!this.listElement) return;\n        const fragment = new DocumentFragment();\n        isbnsOfCategory\n            .map((isbn) => this.createItem(isbn))\n            .forEach((element) => fragment.appendChild(element));\n\n        this.listElement.innerHTML = \"\";\n        this.listElement.appendChild(fragment);\n    }\n\n    private createItem(isbn: string) {\n        const favoriteItem = new FavoriteItem(isbn);\n        favoriteItem.appendChild(this.itemTemplate.content.cloneNode(true));\n        favoriteItem.dataset.isbn = isbn;\n        return favoriteItem;\n    }\n\n    private renderMessage(message: string) {\n        if (!this.messageTemplate || !this.listElement) return;\n\n        const messageElement = cloneTemplate(this.messageTemplate);\n        messageElement.textContent = message;\n        this.listElement.appendChild(messageElement);\n    }\n\n    // private subscribeCategoryChange({ type, payload }: IFavoritesUpdateProps) {\n    //     switch (type) {\n    //         case \"rename\":\n    //             console.log(\"reanme\");\n    //             break;\n    //     }\n    // }\n}\n", "import bookModel from \"../../model\";\n\nexport default class FavoriteNav extends HTMLElement {\n    private nav: HTMLElement;\n    private overlayCategory: HTMLElement;\n    private changButton: HTMLButtonElement;\n    private category: string | null;\n\n    constructor() {\n        super();\n\n        this.nav = this.querySelector(\".favorite-category\") as HTMLElement;\n        this.overlayCategory = document.querySelector(\n            \"overlay-category\"\n        ) as HTMLElement;\n        this.changButton = this.querySelector(\n            \".favorite-changeButton\"\n        ) as HTMLButtonElement;\n\n        this.category = null;\n\n        this.handleOverlayCatalog = this.handleOverlayCatalog.bind(this);\n        this.subscribeCategoryChange = this.subscribeCategoryChange.bind(this);\n    }\n\n    connectedCallback() {\n        this.intialize();\n        this.render();\n\n        this.changButton.addEventListener(\"click\", this.handleOverlayCatalog);\n        bookModel.subscribeFavoriteCategoriesUpdate(\n            this\n                .subscribeCategoryChange as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n\n    disconnectedCallback() {\n        this.changButton.removeEventListener(\n            \"click\",\n            this.handleOverlayCatalog\n        );\n        bookModel.unsubscribeFavoriteCategoriesUpdate(\n            this\n                .subscribeCategoryChange as TSubscriberCallback<IFavoritesUpdateProps>\n        );\n    }\n\n    private intialize() {\n        this.category =\n            new URLSearchParams(location.search).get(\"category\") ||\n            bookModel.sortedFavoriteKeys[0];\n\n        // if (this.category === null) {\n        //     this.category = bookModel.sortedFavoriteKeys[0];\n        //     location.search = this.getUrl(this.category);\n        // }\n    }\n\n    private render() {\n        const fragment = new DocumentFragment();\n        bookModel.sortedFavoriteKeys\n            .map((category) => this.createItem(category))\n            .forEach((element) => fragment.appendChild(element));\n\n        this.nav.innerHTML = \"\";\n        this.nav.appendChild(fragment);\n        this.hidden = false;\n    }\n\n    private createItem(category: string) {\n        const element = document.createElement(\"a\") as HTMLAnchorElement;\n        element.ariaSelected = (category === this.category).toString();\n        this.updateItem(element, category);\n        return element;\n    }\n\n    private updateItem(element: HTMLAnchorElement, name: string) {\n        element.textContent = name;\n        element.href = `?${this.getUrl(name)}`;\n    }\n\n    private handleOverlayCatalog() {\n        this.overlayCategory.hidden = Boolean(!this.overlayCategory.hidden);\n    }\n\n    private getUrl(category: string) {\n        return `category=${encodeURIComponent(category)}`;\n    }\n\n    private subscribeCategoryChange({ type, payload }: IFavoritesUpdateProps) {\n        const actions: Record<string, () => void> = {\n            add: () => this.handlAdd(payload.name as string),\n            rename: () =>\n                this.handlRename(\n                    payload.prevName as string,\n                    payload.newName as string\n                ),\n            delete: () => this.handlDelete(payload.name as string),\n            change: () =>\n                this.handlChange(\n                    payload.targetIndex as number,\n                    payload.draggedIndex as number\n                ),\n        };\n\n        if (actions[type]) {\n            actions[type]();\n        } else {\n            console.error(\"No subscribe type\");\n        }\n    }\n\n    private handlAdd(name: string) {\n        this.nav.appendChild(this.createItem(name));\n    }\n\n    private handlRename(prevName: string, newName: string) {\n        this.updateItem(\n            this.nav.querySelectorAll(\"a\")[\n                bookModel.sortedFavoriteKeys.indexOf(prevName)\n            ],\n            newName\n        );\n        bookModel.renameSortedFavoriteKey(prevName, newName);\n\n        if (this.category === prevName) {\n            location.search = this.getUrl(newName);\n        }\n    }\n\n    private handlDelete(name: string) {\n        const deletedIndex = bookModel.deleteSortedFavoriteKey(name);\n        this.nav.querySelectorAll(\"a\")[deletedIndex].remove();\n    }\n\n    private handlChange(targetIndex: number, draggedIndex: number) {\n        const navs = this.nav.querySelectorAll(\"a\");\n        const dragged = navs[draggedIndex];\n        const targeted = navs[targetIndex];\n        dragged.replaceWith(targeted.cloneNode(true));\n        targeted.replaceWith(dragged.cloneNode(true));\n    }\n}\n", "import bookModel from \"../../model\";\nimport { cloneTemplate } from \"../../utils/helpers\";\n\nexport default class OverlayCategory extends HTMLElement {\n    form: HTMLFormElement | null;\n    list: HTMLElement | null;\n    template: HTMLTemplateElement | null;\n    renameButton: HTMLButtonElement | null;\n    addButton: HTMLButtonElement | null;\n    addInput: HTMLInputElement | null;\n    closeButton: HTMLButtonElement | null;\n    draggedItem: HTMLLIElement | null = null;\n\n    static get observedAttributes() {\n        return [\"hidden\"];\n    }\n\n    constructor() {\n        super();\n\n        this.form = this.querySelector(\"form\");\n        this.list = this.querySelector(\".category-list\");\n        this.template = document.querySelector(\"#tp-category-item\");\n        this.renameButton = this.querySelector(\".rename\");\n        this.addButton = this.querySelector(\".addButton\");\n        this.addInput = this.querySelector(\"input[name='add']\");\n        this.closeButton = this.querySelector(\".closeButton\");\n        this.draggedItem = null;\n\n        this.handleRename = this.handleRename.bind(this);\n    }\n\n    connectedCallback() {\n        this.render();\n\n        this.addButton?.addEventListener(\"click\", this.handleClickAdd);\n        this.form?.addEventListener(\"submit\", this.handleSubmit);\n        this.closeButton?.addEventListener(\"click\", this.handleClose);\n    }\n\n    disconnectedCallback() {\n        this.addButton?.removeEventListener(\"click\", this.handleClickAdd);\n        this.form?.removeEventListener(\"submit\", this.handleSubmit);\n        this.closeButton?.removeEventListener(\"click\", this.handleClose);\n    }\n\n    attributeChangedCallback(name: string) {\n        if (name === \"hidden\" && !this.hasAttribute(\"hidden\")) {\n            this.initial();\n        }\n    }\n\n    private initial() {\n        if (this.list) {\n            this.list.innerHTML = \"\";\n            this.render();\n        }\n    }\n\n    private render() {\n        if (!this.list) return;\n\n        const fragment = new DocumentFragment();\n\n        bookModel.sortedFavoriteKeys.forEach((favorite, index) => {\n            const cloned = this.createItem(favorite, index);\n            fragment.appendChild(cloned);\n        });\n\n        this.list.appendChild(fragment);\n    }\n\n    private createItem(favorite: string, index: number) {\n        if (this.template === null) {\n            throw new Error(\"Template is null\");\n        }\n\n        const cloned = cloneTemplate<HTMLLIElement>(this.template);\n\n        cloned.dataset.index = index.toString();\n        cloned.dataset.favorite = favorite;\n\n        const input = cloned.querySelector(\n            \"input[name='category']\"\n        ) as HTMLInputElement;\n        if (input) {\n            input.value = favorite;\n        }\n\n        this.handleItemEvent(cloned, input, favorite);\n\n        this.changeItem(cloned);\n\n        return cloned;\n    }\n\n    private handleItemEvent(\n        cloned: HTMLLIElement,\n        input: HTMLInputElement,\n        favorite: string\n    ) {\n        cloned.querySelector(\".renameButton\")?.addEventListener(\"click\", () => {\n            const favorite = cloned.dataset.favorite as string;\n            this.handleRename(input, favorite, cloned);\n        });\n\n        cloned\n            .querySelector(\".deleteButton\")\n            ?.addEventListener(\"click\", () =>\n                this.handleDelete(cloned, favorite)\n            );\n\n        cloned.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n            const input = event.target as HTMLInputElement;\n            if (event.key === \"Enter\" && input.name === \"category\") {\n                this.handleRename(input, favorite);\n            }\n        });\n    }\n\n    private handleRename(\n        input: HTMLInputElement,\n        favorite: string,\n        cloned?: HTMLElement\n    ) {\n        const value = input.value;\n        if (!value || favorite === value || !cloned) return;\n\n        cloned.dataset.favorite = value;\n\n        bookModel.renameFavorite(favorite, value);\n    }\n\n    private handleDelete(cloned: HTMLLIElement, favorite: string) {\n        cloned.remove();\n        bookModel.deleteFavorite(favorite);\n    }\n\n    private changeItem(cloned: HTMLLIElement) {\n        const dragggerButton = cloned.querySelector(\n            \".dragger\"\n        ) as HTMLButtonElement;\n        dragggerButton.addEventListener(\"mousedown\", () => {\n            cloned.draggable = true;\n        });\n        dragggerButton.addEventListener(\"mouseup\", () => {\n            cloned.removeAttribute(\"draggable\");\n        });\n\n        cloned.addEventListener(\"dragstart\", () => {\n            this.draggedItem = cloned as HTMLLIElement;\n            cloned.draggable = true;\n        });\n\n        cloned.addEventListener(\"dragend\", () => {\n            if (this.draggedItem === cloned) {\n                this.draggedItem = null;\n                cloned.removeAttribute(\"draggable\");\n            }\n        });\n\n        cloned.addEventListener(\"dragover\", (event: DragEvent) => {\n            event.preventDefault();\n        });\n\n        cloned.addEventListener(\"dragenter\", () => {\n            if (this.draggedItem === cloned) return;\n            cloned.dataset.drag = \"dragenter\";\n        });\n\n        // cloned.addEventListener(\"dragleave\", () => {\n        //     if (this.draggedItem === cloned) return;\n        // });\n\n        cloned.addEventListener(\"drop\", () => {\n            if (!this.draggedItem || !this.list) return;\n\n            this.list.insertBefore(this.draggedItem, cloned);\n            const draggedKey = this.draggedItem.dataset.favorite;\n            const targetKey = cloned.dataset.favorite;\n            if (draggedKey && targetKey) {\n                bookModel.changeFavorite(draggedKey, targetKey);\n            }\n            delete cloned.dataset.drag;\n        });\n    }\n\n    private handleClickAdd = () => {\n        if (!this.addInput) return;\n\n        const favorite = this.addInput.value;\n        if (!favorite) return;\n\n        if (bookModel.hasFavorite(favorite)) {\n            alert(\"\uC911\uBCF5\uB41C \uC774\uB984\uC785\uB2C8\uB2E4.\");\n            this.addInput.value = \"\";\n            return;\n        }\n\n        bookModel.addfavorite(favorite);\n\n        const index = bookModel.sortedFavoriteKeys.length;\n        const cloned = this.createItem(favorite, index);\n        this.list?.appendChild(cloned);\n\n        this.addInput.value = \"\";\n    };\n\n    private handleSubmit = (event: Event) => {\n        event.preventDefault();\n        this.handleClickAdd();\n    };\n\n    private handleClose = () => {\n        this.hidden = true;\n    };\n}\n", "import { CustomFetch } from \"../../utils\";\nimport { cloneTemplate } from \"../../utils/helpers\";\n\nexport default class KyoboInfo extends HTMLElement {\n    private _isbn: string | null = null;\n    private listElement: HTMLElement;\n    private template: HTMLTemplateElement;\n\n    constructor() {\n        super();\n\n        this._isbn = this.getIsbn() || null;\n        this.listElement = this.querySelector(\"ul\") as HTMLElement;\n        this.template = this.querySelector(\n            \"#tp-kyoboInfoItem\"\n        ) as HTMLTemplateElement;\n    }\n\n    connectedCallback() {}\n\n    disconnectedCallback() {}\n\n    show() {\n        this.fetch();\n    }\n\n    private getIsbn() {\n        const cloeset = this.closest(\"[data-isbn]\") as HTMLElement;\n        if (!cloeset) return;\n        return cloeset.dataset.isbn;\n    }\n\n    private async fetch() {\n        const bookUrl = `/kyobo-book?isbn=${this._isbn}`;\n        try {\n            // const infoArray = [\n            //     {\n            //         href: \"https://product.kyobobook.co.kr/detail/S000001913217\",\n            //         prodType: \"\uC885\uC774\uCC45\",\n            //         prodPrice: \"16,020\uC6D0\",\n            //     },\n            //     {\n            //         href: \"https://ebook-product.kyobobook.co.kr/dig/epd/ebook/E000002981270\",\n            //         prodType: \"eBook\",\n            //         prodPrice: \"11,220\uC6D0\",\n            //     },\n            //     {\n            //         href: \"https://ebook-product.kyobobook.co.kr/dig/epd/sam/E000002981270?tabType=SAM\",\n            //         prodType: \"sam\",\n            //         prodPrice: \"eBook\",\n            //     },\n            // ];\n\n            const infoArray = (await CustomFetch.fetch(\n                bookUrl\n            )) as TKyeboInfoProps[];\n\n            this.render(infoArray);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                console.error(`Error fetching books: ${error.message}`);\n            } else {\n                console.error(\"An unexpected error occurred\");\n            }\n        }\n    }\n\n    private render(data: TKyeboInfoProps[]) {\n        this.listElement.innerHTML = \"\";\n        const fragment = new DocumentFragment();\n        data.map(({ href, prodType, prodPrice }: TKyeboInfoProps) => {\n            const element = cloneTemplate(this.template);\n\n            const linkElement = element.querySelector(\"a\") as HTMLAnchorElement;\n            linkElement.href = href;\n\n            const spanElement = element.querySelector(\"span\") as HTMLElement;\n            spanElement.textContent = `\u30FB ${prodType} : ${prodPrice}`;\n\n            return element;\n        }).forEach((element: HTMLElement) => fragment.appendChild(element));\n        this.listElement.appendChild(fragment);\n        this.hidden = false;\n    }\n}\n", "import {\n    BookDescription,\n    CategorySelector,\n    LibraryBookExist,\n    NavGnb,\n    BookImage,\n} from \"../../components/index\";\n\nimport Favorite from \"./Favorite\";\nimport FavoriteNav from \"./FavoriteNav\";\nimport FavoriteItem from \"./FavoriteItem\";\nimport OverlayCategory from \"./OverlayCategory\";\nimport KyoboInfo from \"./KyoboInfo\";\n\ncustomElements.define(\"book-image\", BookImage);\ncustomElements.define(\"nav-gnb\", NavGnb);\ncustomElements.define(\"favorite-item\", FavoriteItem);\ncustomElements.define(\"app-favorite\", Favorite);\ncustomElements.define(\"favorite-nav\", FavoriteNav);\ncustomElements.define(\"book-description\", BookDescription);\ncustomElements.define(\"library-book-exist\", LibraryBookExist);\ncustomElements.define(\"category-selector\", CategorySelector);\ncustomElements.define(\"overlay-category\", OverlayCategory);\ncustomElements.define(\"kyobo-info\", KyoboInfo);\n"],
  "mappings": "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",
  "names": ["document", "IntersectionObserver", "win", "frame", "favorite", "input"]
}
